

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sat Nov 04 17:01:51 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F45K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    36  0000                     
    37                           ; Version 1.42
    38                           ; Generated 13/04/2017 GMT
    39                           ; 
    40                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F45K80 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     
    72                           	psect	nvCOMRAM
    73  00004B                     __pnvCOMRAM:
    74                           	opt stack 0
    75  00004B                     _TMR1_InterruptHandler:
    76                           	opt stack 0
    77  00004B                     	ds	2
    78  00004D                     _timer1ReloadVal:
    79                           	opt stack 0
    80  00004D                     	ds	2
    81  0000                     _BRGCON3	set	3653
    82  0000                     _BRGCON2	set	3652
    83  0000                     _BRGCON1	set	3651
    84  0000                     _RXF5SIDL	set	3829
    85  0000                     _RXF5SIDH	set	3828
    86  0000                     _RXF5EIDL	set	3831
    87  0000                     _RXF5EIDH	set	3830
    88  0000                     _RXF4SIDL	set	3825
    89  0000                     _RXF4SIDH	set	3824
    90  0000                     _RXF4EIDL	set	3827
    91  0000                     _RXF4EIDH	set	3826
    92  0000                     _RXF3SIDL	set	3821
    93  0000                     _RXF3SIDH	set	3820
    94  0000                     _RXF3EIDL	set	3823
    95  0000                     _RXF3EIDH	set	3822
    96  0000                     _RXF2SIDL	set	3817
    97  0000                     _RXF2SIDH	set	3816
    98  0000                     _RXF2EIDL	set	3819
    99  0000                     _RXF2EIDH	set	3818
   100  0000                     _RXF1SIDL	set	3813
   101  0000                     _RXF1SIDH	set	3812
   102  0000                     _RXF1EIDL	set	3815
   103  0000                     _RXF1EIDH	set	3814
   104  0000                     _RXF0SIDL	set	3809
   105  0000                     _RXF0SIDH	set	3808
   106  0000                     _RXF0EIDL	set	3811
   107  0000                     _RXF0EIDH	set	3810
   108  0000                     _RXM1SIDL	set	3837
   109  0000                     _RXM1SIDH	set	3836
   110  0000                     _RXM1EIDL	set	3839
   111  0000                     _RXM1EIDH	set	3838
   112  0000                     _RXM0SIDL	set	3833
   113  0000                     _RXM0SIDH	set	3832
   114  0000                     _RXM0EIDL	set	3835
   115  0000                     _RXM0EIDH	set	3834
   116  0000                     _RXB1D7	set	3901
   117  0000                     _RXB1D6	set	3900
   118  0000                     _RXB1D5	set	3899
   119  0000                     _RXB1D4	set	3898
   120  0000                     _RXB1D3	set	3897
   121  0000                     _RXB1D2	set	3896
   122  0000                     _RXB1D1	set	3895
   123  0000                     _RXB1D0	set	3894
   124  0000                     _RXB1DLC	set	3893
   125  0000                     _RXB1SIDH	set	3889
   126  0000                     _RXB1EIDL	set	3892
   127  0000                     _RXB1EIDH	set	3891
   128  0000                     _RXB1SIDL	set	3890
   129  0000                     _RXB1CONbits	set	3888
   130  0000                     _TXB2D7	set	3853
   131  0000                     _TXB2D6	set	3852
   132  0000                     _TXB2D5	set	3851
   133  0000                     _TXB2D4	set	3850
   134  0000                     _TXB2D3	set	3849
   135  0000                     _TXB2D2	set	3848
   136  0000                     _TXB2D1	set	3847
   137  0000                     _TXB2D0	set	3846
   138  0000                     _TXB2DLC	set	3845
   139  0000                     _TXB2SIDL	set	3842
   140  0000                     _TXB2SIDH	set	3841
   141  0000                     _TXB2EIDL	set	3844
   142  0000                     _TXB2EIDH	set	3843
   143  0000                     _TXB2CONbits	set	3840
   144  0000                     _TXB1D7	set	3869
   145  0000                     _TXB1D6	set	3868
   146  0000                     _TXB1D5	set	3867
   147  0000                     _TXB1D4	set	3866
   148  0000                     _TXB1D3	set	3865
   149  0000                     _TXB1D2	set	3864
   150  0000                     _TXB1D1	set	3863
   151  0000                     _TXB1D0	set	3862
   152  0000                     _TXB1DLC	set	3861
   153  0000                     _TXB1SIDL	set	3858
   154  0000                     _TXB1SIDH	set	3857
   155  0000                     _TXB1EIDL	set	3860
   156  0000                     _TXB1EIDH	set	3859
   157  0000                     _TXB1CONbits	set	3856
   158  0000                     _TXB0D7	set	3885
   159  0000                     _TXB0D6	set	3884
   160  0000                     _TXB0D5	set	3883
   161  0000                     _TXB0D4	set	3882
   162  0000                     _TXB0D3	set	3881
   163  0000                     _TXB0D2	set	3880
   164  0000                     _TXB0D1	set	3879
   165  0000                     _TXB0D0	set	3878
   166  0000                     _TXB0DLC	set	3877
   167  0000                     _TXB0SIDL	set	3874
   168  0000                     _TXB0SIDH	set	3873
   169  0000                     _TXB0EIDL	set	3876
   170  0000                     _TXB0EIDH	set	3875
   171  0000                     _TXB0CONbits	set	3872
   172  0000                     _WPUB	set	3931
   173  0000                     _ANCON1	set	3932
   174  0000                     _ANCON0	set	3933
   175  0000                     _T1GCONbits	set	4010
   176  0000                     _T1CONbits	set	4045
   177  0000                     _TMR1L	set	4046
   178  0000                     _TMR1H	set	4047
   179  0000                     _T1GCON	set	4010
   180  0000                     _T1CON	set	4045
   181  0000                     _COMSTATbits	set	3953
   182  0000                     _RXB0D7	set	3949
   183  0000                     _RXB0D6	set	3948
   184  0000                     _RXB0D5	set	3947
   185  0000                     _RXB0D4	set	3946
   186  0000                     _RXB0D3	set	3945
   187  0000                     _RXB0D2	set	3944
   188  0000                     _RXB0D1	set	3943
   189  0000                     _RXB0D0	set	3942
   190  0000                     _RXB0DLC	set	3941
   191  0000                     _RXB0SIDH	set	3937
   192  0000                     _RXB0EIDL	set	3940
   193  0000                     _RXB0EIDH	set	3939
   194  0000                     _RXB0SIDL	set	3938
   195  0000                     _RXB0CONbits	set	3936
   196  0000                     _PIE5bits	set	3958
   197  0000                     _PIR5bits	set	3959
   198  0000                     _ECANCON	set	3954
   199  0000                     _CANSTAT	set	3950
   200  0000                     _CANCON	set	3951
   201  0000                     _PIR1bits	set	3998
   202  0000                     _PIE1bits	set	3997
   203  0000                     _INTCONbits	set	4082
   204  0000                     _RCONbits	set	4048
   205  0000                     _TRISD	set	3989
   206  0000                     _TRISC	set	3988
   207  0000                     _TRISB	set	3987
   208  0000                     _TRISA	set	3986
   209  0000                     _TRISE	set	3990
   210  0000                     _LATC	set	3979
   211  0000                     _LATB	set	3978
   212  0000                     _LATA	set	3977
   213  0000                     _LATD	set	3980
   214  0000                     _LATE	set	3981
   215  0000                     _REFOCON	set	3994
   216  0000                     _OSCTUNE	set	3995
   217  0000                     _OSCCON2	set	4050
   218  0000                     _OSCCON	set	4051
   219  0000                     _ADCON0bits	set	4034
   220  0000                     _ADRESL	set	4035
   221  0000                     _ADRESH	set	4036
   222  0000                     _ADCON2	set	4032
   223  0000                     _ADCON1	set	4033
   224  0000                     _ADCON0	set	4034
   225                           
   226                           ; #config settings
   227  0000                     
   228                           	psect	cinit
   229  001404                     __pcinit:
   230                           	opt stack 0
   231  001404                     start_initialization:
   232                           	opt stack 0
   233  001404                     __initialization:
   234                           	opt stack 0
   235  001404                     end_of_initialization:
   236                           	opt stack 0
   237  001404                     __end_of__initialization:
   238                           	opt stack 0
   239  001404  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   240  001406  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   241  001408  0E00               	movlw	low (__Lmediumconst shr (0+16))
   242  00140A  6EF8               	movwf	tblptru,c
   243  00140C  0100               	movlb	0
   244  00140E  EF47  F000         	goto	_main	;jump to C main() function
   245                           tblptru	equ	0xFF8
   246                           
   247                           	psect	cstackBANK0
   248  000060                     __pcstackBANK0:
   249                           	opt stack 0
   250  000060                     ??___fttol:
   251                           
   252                           ; 1 bytes @ 0x0
   253  000060                     	ds	5
   254  000065                     ___fttol@sign1:
   255                           	opt stack 0
   256                           
   257                           ; 1 bytes @ 0x5
   258  000065                     	ds	1
   259  000066                     ___fttol@lval:
   260                           	opt stack 0
   261                           
   262                           ; 4 bytes @ 0x6
   263  000066                     	ds	4
   264  00006A                     ___fttol@exp1:
   265                           	opt stack 0
   266                           
   267                           ; 1 bytes @ 0xA
   268  00006A                     	ds	1
   269  00006B                     main@up_sol:
   270                           	opt stack 0
   271                           
   272                           ; 1 bytes @ 0xB
   273  00006B                     	ds	1
   274  00006C                     main@clutch_sol:
   275                           	opt stack 0
   276                           
   277                           ; 1 bytes @ 0xC
   278  00006C                     	ds	1
   279  00006D                     main@radiator:
   280                           	opt stack 0
   281                           
   282                           ; 1 bytes @ 0xD
   283  00006D                     	ds	1
   284  00006E                     main@fuel_pump:
   285                           	opt stack 0
   286                           
   287                           ; 1 bytes @ 0xE
   288  00006E                     	ds	1
   289  00006F                     main@ewp:
   290                           	opt stack 0
   291                           
   292                           ; 1 bytes @ 0xF
   293  00006F                     	ds	1
   294  000070                     main@drs:
   295                           	opt stack 0
   296                           
   297                           ; 1 bytes @ 0x10
   298  000070                     	ds	1
   299  000071                     main@down_sol:
   300                           	opt stack 0
   301                           
   302                           ; 1 bytes @ 0x11
   303  000071                     	ds	1
   304  000072                     main@battery:
   305                           	opt stack 0
   306                           
   307                           ; 1 bytes @ 0x12
   308  000072                     	ds	1
   309  000073                     main@x:
   310                           	opt stack 0
   311                           
   312                           ; 3 bytes @ 0x13
   313  000073                     	ds	3
   314  000076                     main@Vref:
   315                           	opt stack 0
   316                           
   317                           ; 3 bytes @ 0x16
   318  000076                     	ds	3
   319  000079                     main@ADCResult:
   320                           	opt stack 0
   321                           
   322                           ; 2 bytes @ 0x19
   323  000079                     	ds	2
   324  00007B                     main@cur_data1:
   325                           	opt stack 0
   326                           
   327                           ; 14 bytes @ 0x1B
   328  00007B                     	ds	14
   329                           tblptru	equ	0xFF8
   330                           
   331                           	psect	cstackCOMRAM
   332  000001                     __pcstackCOMRAM:
   333                           	opt stack 0
   334  000001                     ??_INTERRUPT_InterruptManager:
   335  000001                     
   336                           ; 1 bytes @ 0x0
   337  000001                     	ds	14
   338  00000F                     ??_ECAN_Initialize:
   339  00000F                     ?_ADC_GetConversion:
   340                           	opt stack 0
   341  00000F                     ?___ftpack:
   342                           	opt stack 0
   343  00000F                     TMR1_SetInterruptHandler@InterruptHandler:
   344                           	opt stack 0
   345  00000F                     ___ftpack@arg:
   346                           	opt stack 0
   347  00000F                     convertCANid2Reg@tempPassedInID:
   348                           	opt stack 0
   349                           
   350                           ; 4 bytes @ 0xE
   351  00000F                     	ds	2
   352  000011                     ??_TMR1_Initialize:
   353  000011                     ??_ADC_GetConversion:
   354                           
   355                           ; 1 bytes @ 0x10
   356  000011                     	ds	1
   357  000012                     ___ftpack@exp:
   358                           	opt stack 0
   359                           
   360                           ; 1 bytes @ 0x11
   361  000012                     	ds	1
   362  000013                     ADC_GetConversion@channel:
   363                           	opt stack 0
   364  000013                     convertCANid2Reg@canIdType:
   365                           	opt stack 0
   366  000013                     ___ftpack@sign:
   367                           	opt stack 0
   368                           
   369                           ; 1 bytes @ 0x12
   370  000013                     	ds	1
   371  000014                     ??___ftpack:
   372  000014                     convertCANid2Reg@passedInEIDH:
   373                           	opt stack 0
   374                           
   375                           ; 2 bytes @ 0x13
   376  000014                     	ds	2
   377  000016                     convertCANid2Reg@passedInEIDL:
   378                           	opt stack 0
   379                           
   380                           ; 2 bytes @ 0x15
   381  000016                     	ds	1
   382  000017                     ?___lwtoft:
   383                           	opt stack 0
   384  000017                     ___lwtoft@c:
   385                           	opt stack 0
   386                           
   387                           ; 2 bytes @ 0x16
   388  000017                     	ds	1
   389  000018                     convertCANid2Reg@passedInSIDH:
   390                           	opt stack 0
   391                           
   392                           ; 2 bytes @ 0x17
   393  000018                     	ds	2
   394  00001A                     ?___ftmul:
   395                           	opt stack 0
   396  00001A                     convertCANid2Reg@passedInSIDL:
   397                           	opt stack 0
   398  00001A                     ___ftmul@f1:
   399                           	opt stack 0
   400                           
   401                           ; 3 bytes @ 0x19
   402  00001A                     	ds	2
   403  00001C                     ??_convertCANid2Reg:
   404                           
   405                           ; 1 bytes @ 0x1B
   406  00001C                     	ds	1
   407  00001D                     ___ftmul@f2:
   408                           	opt stack 0
   409                           
   410                           ; 3 bytes @ 0x1C
   411  00001D                     	ds	3
   412  000020                     ??___ftmul:
   413  000020                     convertCANid2Reg@wipSIDL:
   414                           	opt stack 0
   415                           
   416                           ; 1 bytes @ 0x1F
   417  000020                     	ds	1
   418  000021                     CAN_transmit@tempCanMsg:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0x20
   422  000021                     	ds	2
   423  000023                     CAN_transmit@returnValue:
   424                           	opt stack 0
   425  000023                     ___ftmul@exp:
   426                           	opt stack 0
   427                           
   428                           ; 1 bytes @ 0x22
   429  000023                     	ds	1
   430  000024                     CAN_transmit@tempEIDH:
   431                           	opt stack 0
   432  000024                     ___ftmul@f3_as_product:
   433                           	opt stack 0
   434                           
   435                           ; 3 bytes @ 0x23
   436  000024                     	ds	1
   437  000025                     CAN_transmit@tempEIDL:
   438                           	opt stack 0
   439                           
   440                           ; 1 bytes @ 0x24
   441  000025                     	ds	1
   442  000026                     CAN_transmit@tempSIDH:
   443                           	opt stack 0
   444                           
   445                           ; 1 bytes @ 0x25
   446  000026                     	ds	1
   447  000027                     CAN_transmit@tempSIDL:
   448                           	opt stack 0
   449  000027                     ___ftmul@cntr:
   450                           	opt stack 0
   451                           
   452                           ; 1 bytes @ 0x26
   453  000027                     	ds	1
   454  000028                     ___ftmul@sign:
   455                           	opt stack 0
   456                           
   457                           ; 1 bytes @ 0x27
   458  000028                     	ds	1
   459  000029                     ?___ftneg:
   460                           	opt stack 0
   461  000029                     ___ftneg@f1:
   462                           	opt stack 0
   463                           
   464                           ; 3 bytes @ 0x28
   465  000029                     	ds	3
   466  00002C                     ?___ftadd:
   467                           	opt stack 0
   468  00002C                     ___ftadd@f1:
   469                           	opt stack 0
   470                           
   471                           ; 3 bytes @ 0x2B
   472  00002C                     	ds	3
   473  00002F                     ___ftadd@f2:
   474                           	opt stack 0
   475                           
   476                           ; 3 bytes @ 0x2E
   477  00002F                     	ds	3
   478  000032                     ??___ftadd:
   479                           
   480                           ; 1 bytes @ 0x31
   481  000032                     	ds	3
   482  000035                     ___ftadd@sign:
   483                           	opt stack 0
   484                           
   485                           ; 1 bytes @ 0x34
   486  000035                     	ds	1
   487  000036                     ___ftadd@exp2:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x35
   491  000036                     	ds	1
   492  000037                     ___ftadd@exp1:
   493                           	opt stack 0
   494                           
   495                           ; 1 bytes @ 0x36
   496  000037                     	ds	1
   497  000038                     ?___ftdiv:
   498                           	opt stack 0
   499  000038                     ___ftdiv@f1:
   500                           	opt stack 0
   501                           
   502                           ; 3 bytes @ 0x37
   503  000038                     	ds	3
   504  00003B                     ___ftdiv@f2:
   505                           	opt stack 0
   506                           
   507                           ; 3 bytes @ 0x3A
   508  00003B                     	ds	3
   509  00003E                     ??___ftdiv:
   510                           
   511                           ; 1 bytes @ 0x3D
   512  00003E                     	ds	3
   513  000041                     ___ftdiv@cntr:
   514                           	opt stack 0
   515                           
   516                           ; 1 bytes @ 0x40
   517  000041                     	ds	1
   518  000042                     ___ftdiv@f3:
   519                           	opt stack 0
   520                           
   521                           ; 3 bytes @ 0x41
   522  000042                     	ds	3
   523  000045                     ___ftdiv@exp:
   524                           	opt stack 0
   525                           
   526                           ; 1 bytes @ 0x44
   527  000045                     	ds	1
   528  000046                     ___ftdiv@sign:
   529                           	opt stack 0
   530                           
   531                           ; 1 bytes @ 0x45
   532  000046                     	ds	1
   533  000047                     ?___fttol:
   534                           	opt stack 0
   535  000047                     ___fttol@f1:
   536                           	opt stack 0
   537                           
   538                           ; 3 bytes @ 0x46
   539  000047                     	ds	4
   540  00004B                     tblptru	equ	0xFF8
   541                           
   542                           ; 1 bytes @ 0x4A
   543 ;;
   544 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   545 ;;
   546 ;; *************** function _main *****************
   547 ;; Defined at:
   548 ;;		line 51 in file "main.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;		None
   551 ;; Auto vars:     Size  Location     Type
   552 ;;  cur_data1      14   27[BANK0 ] struct .
   553 ;;  Vref            3   22[BANK0 ] struct .
   554 ;;  x               3   19[BANK0 ] struct .
   555 ;;  ADCResult       2   25[BANK0 ] unsigned int 
   556 ;;  battery         1   18[BANK0 ] char 
   557 ;;  down_sol        1   17[BANK0 ] unsigned char 
   558 ;;  drs             1   16[BANK0 ] unsigned char 
   559 ;;  ewp             1   15[BANK0 ] unsigned char 
   560 ;;  fuel_pump       1   14[BANK0 ] unsigned char 
   561 ;;  radiator        1   13[BANK0 ] unsigned char 
   562 ;;  clutch_sol      1   12[BANK0 ] unsigned char 
   563 ;;  up_sol          1   11[BANK0 ] unsigned char 
   564 ;; Return value:  Size  Location     Type
   565 ;;                  1    wreg      void 
   566 ;; Registers used:
   567 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   574 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   576 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   577 ;;Total ram usage:       30 bytes
   578 ;; Hardware stack levels required when called:    6
   579 ;; This function calls:
   580 ;;		_ADC_GetConversion
   581 ;;		_CAN_transmit
   582 ;;		_SYSTEM_Initialize
   583 ;;		___ftadd
   584 ;;		___ftdiv
   585 ;;		___ftmul
   586 ;;		___ftneg
   587 ;;		___fttol
   588 ;;		___lwtoft
   589 ;; This function is called by:
   590 ;;		Startup code after reset
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594                           	psect	text0
   595  00008E                     __ptext0:
   596                           	opt stack 0
   597  00008E                     _main:
   598                           	opt stack 25
   599                           
   600                           ;main.c: 54: SYSTEM_Initialize();
   601                           
   602                           ;incstack = 0
   603  00008E  ECE1  F009         	call	_SYSTEM_Initialize	;wreg free
   604                           
   605                           ;main.c: 84: double Vref = 5000.0 ;
   606  000092  0E40               	movlw	64
   607  000094  0100               	movlb	0	; () banked
   608  000096  6F76               	movwf	main@Vref& (0+255),b
   609  000098  0E9C               	movlw	156
   610  00009A  0100               	movlb	0	; () banked
   611  00009C  6F77               	movwf	(main@Vref+1)& (0+255),b
   612  00009E  0E45               	movlw	69
   613  0000A0  0100               	movlb	0	; () banked
   614  0000A2  6F78               	movwf	(main@Vref+2)& (0+255),b
   615                           
   616                           ; BSR set to: 0
   617                           ;main.c: 85: double x = Vref / 4096.0 ;
   618  0000A4  C076  F038         	movff	main@Vref,___ftdiv@f1
   619  0000A8  C077  F039         	movff	main@Vref+1,___ftdiv@f1+1
   620  0000AC  C078  F03A         	movff	main@Vref+2,___ftdiv@f1+2
   621  0000B0  0E00               	movlw	0
   622  0000B2  6E3B               	movwf	___ftdiv@f2,c
   623  0000B4  0E80               	movlw	128
   624  0000B6  6E3C               	movwf	___ftdiv@f2+1,c
   625  0000B8  0E45               	movlw	69
   626  0000BA  6E3D               	movwf	___ftdiv@f2+2,c
   627  0000BC  EC90  F008         	call	___ftdiv	;wreg free
   628  0000C0  C038  F073         	movff	?___ftdiv,main@x
   629  0000C4  C039  F074         	movff	?___ftdiv+1,main@x+1
   630  0000C8  C03A  F075         	movff	?___ftdiv+2,main@x+2
   631  0000CC                     l2393:
   632                           
   633                           ;main.c: 97: {
   634                           ;main.c: 99: ADCResult = ADC_GetConversion(up_sol) * x ;
   635  0000CC  C073  F01D         	movff	main@x,___ftmul@f2
   636  0000D0  C074  F01E         	movff	main@x+1,___ftmul@f2+1
   637  0000D4  C075  F01F         	movff	main@x+2,___ftmul@f2+2
   638  0000D8  0100               	movlb	0	; () banked
   639  0000DA  516B               	movf	main@up_sol& (0+255),w,b
   640  0000DC  EC90  F009         	call	_ADC_GetConversion
   641  0000E0  C00F  F017         	movff	?_ADC_GetConversion,___lwtoft@c
   642  0000E4  C010  F018         	movff	?_ADC_GetConversion+1,___lwtoft@c+1
   643  0000E8  ECBD  F009         	call	___lwtoft	;wreg free
   644  0000EC  C017  F01A         	movff	?___lwtoft,___ftmul@f1
   645  0000F0  C018  F01B         	movff	?___lwtoft+1,___ftmul@f1+1
   646  0000F4  C019  F01C         	movff	?___lwtoft+2,___ftmul@f1+2
   647  0000F8  EC9F  F007         	call	___ftmul	;wreg free
   648  0000FC  C01A  F047         	movff	?___ftmul,___fttol@f1
   649  000100  C01B  F048         	movff	?___ftmul+1,___fttol@f1+1
   650  000104  C01C  F049         	movff	?___ftmul+2,___fttol@f1+2
   651  000108  EC08  F007         	call	___fttol	;wreg free
   652  00010C  C047  F079         	movff	?___fttol,main@ADCResult
   653  000110  C048  F07A         	movff	?___fttol+1,main@ADCResult+1
   654                           
   655                           ;main.c: 100: up_sol = (ADCResult - 0.1*Vref)/40.0 ;
   656  000114  0E00               	movlw	0
   657  000116  6E3B               	movwf	___ftdiv@f2,c
   658  000118  0E20               	movlw	32
   659  00011A  6E3C               	movwf	___ftdiv@f2+1,c
   660  00011C  0E42               	movlw	66
   661  00011E  6E3D               	movwf	___ftdiv@f2+2,c
   662  000120  0ECD               	movlw	205
   663  000122  6E1D               	movwf	___ftmul@f2,c
   664  000124  0ECC               	movlw	204
   665  000126  6E1E               	movwf	___ftmul@f2+1,c
   666  000128  0E3D               	movlw	61
   667  00012A  6E1F               	movwf	___ftmul@f2+2,c
   668  00012C  C076  F01A         	movff	main@Vref,___ftmul@f1
   669  000130  C077  F01B         	movff	main@Vref+1,___ftmul@f1+1
   670  000134  C078  F01C         	movff	main@Vref+2,___ftmul@f1+2
   671  000138  EC9F  F007         	call	___ftmul	;wreg free
   672  00013C  C01A  F029         	movff	?___ftmul,___ftneg@f1
   673  000140  C01B  F02A         	movff	?___ftmul+1,___ftneg@f1+1
   674  000144  C01C  F02B         	movff	?___ftmul+2,___ftneg@f1+2
   675  000148  ECCF  F009         	call	___ftneg	;wreg free
   676  00014C  C029  F02F         	movff	?___ftneg,___ftadd@f2
   677  000150  C02A  F030         	movff	?___ftneg+1,___ftadd@f2+1
   678  000154  C02B  F031         	movff	?___ftneg+2,___ftadd@f2+2
   679  000158  C079  F017         	movff	main@ADCResult,___lwtoft@c
   680  00015C  C07A  F018         	movff	main@ADCResult+1,___lwtoft@c+1
   681  000160  ECBD  F009         	call	___lwtoft	;wreg free
   682  000164  C017  F02C         	movff	?___lwtoft,___ftadd@f1
   683  000168  C018  F02D         	movff	?___lwtoft+1,___ftadd@f1+1
   684  00016C  C019  F02E         	movff	?___lwtoft+2,___ftadd@f1+2
   685  000170  EC63  F005         	call	___ftadd	;wreg free
   686  000174  C02C  F038         	movff	?___ftadd,___ftdiv@f1
   687  000178  C02D  F039         	movff	?___ftadd+1,___ftdiv@f1+1
   688  00017C  C02E  F03A         	movff	?___ftadd+2,___ftdiv@f1+2
   689  000180  EC90  F008         	call	___ftdiv	;wreg free
   690  000184  C038  F047         	movff	?___ftdiv,___fttol@f1
   691  000188  C039  F048         	movff	?___ftdiv+1,___fttol@f1+1
   692  00018C  C03A  F049         	movff	?___ftdiv+2,___fttol@f1+2
   693  000190  EC08  F007         	call	___fttol	;wreg free
   694  000194  5047               	movf	?___fttol,w,c
   695  000196  0100               	movlb	0	; () banked
   696  000198  6F6B               	movwf	main@up_sol& (0+255),b
   697                           
   698                           ; BSR set to: 0
   699                           ;main.c: 101: ADCResult = ADC_GetConversion(clutch_sol) * x ;
   700  00019A  C073  F01D         	movff	main@x,___ftmul@f2
   701  00019E  C074  F01E         	movff	main@x+1,___ftmul@f2+1
   702  0001A2  C075  F01F         	movff	main@x+2,___ftmul@f2+2
   703  0001A6  0100               	movlb	0	; () banked
   704  0001A8  516C               	movf	main@clutch_sol& (0+255),w,b
   705  0001AA  EC90  F009         	call	_ADC_GetConversion
   706  0001AE  C00F  F017         	movff	?_ADC_GetConversion,___lwtoft@c
   707  0001B2  C010  F018         	movff	?_ADC_GetConversion+1,___lwtoft@c+1
   708  0001B6  ECBD  F009         	call	___lwtoft	;wreg free
   709  0001BA  C017  F01A         	movff	?___lwtoft,___ftmul@f1
   710  0001BE  C018  F01B         	movff	?___lwtoft+1,___ftmul@f1+1
   711  0001C2  C019  F01C         	movff	?___lwtoft+2,___ftmul@f1+2
   712  0001C6  EC9F  F007         	call	___ftmul	;wreg free
   713  0001CA  C01A  F047         	movff	?___ftmul,___fttol@f1
   714  0001CE  C01B  F048         	movff	?___ftmul+1,___fttol@f1+1
   715  0001D2  C01C  F049         	movff	?___ftmul+2,___fttol@f1+2
   716  0001D6  EC08  F007         	call	___fttol	;wreg free
   717  0001DA  C047  F079         	movff	?___fttol,main@ADCResult
   718  0001DE  C048  F07A         	movff	?___fttol+1,main@ADCResult+1
   719                           
   720                           ;main.c: 102: clutch_sol = (ADCResult - 0.1*Vref)/40.0 ;
   721  0001E2  0E00               	movlw	0
   722  0001E4  6E3B               	movwf	___ftdiv@f2,c
   723  0001E6  0E20               	movlw	32
   724  0001E8  6E3C               	movwf	___ftdiv@f2+1,c
   725  0001EA  0E42               	movlw	66
   726  0001EC  6E3D               	movwf	___ftdiv@f2+2,c
   727  0001EE  0ECD               	movlw	205
   728  0001F0  6E1D               	movwf	___ftmul@f2,c
   729  0001F2  0ECC               	movlw	204
   730  0001F4  6E1E               	movwf	___ftmul@f2+1,c
   731  0001F6  0E3D               	movlw	61
   732  0001F8  6E1F               	movwf	___ftmul@f2+2,c
   733  0001FA  C076  F01A         	movff	main@Vref,___ftmul@f1
   734  0001FE  C077  F01B         	movff	main@Vref+1,___ftmul@f1+1
   735  000202  C078  F01C         	movff	main@Vref+2,___ftmul@f1+2
   736  000206  EC9F  F007         	call	___ftmul	;wreg free
   737  00020A  C01A  F029         	movff	?___ftmul,___ftneg@f1
   738  00020E  C01B  F02A         	movff	?___ftmul+1,___ftneg@f1+1
   739  000212  C01C  F02B         	movff	?___ftmul+2,___ftneg@f1+2
   740  000216  ECCF  F009         	call	___ftneg	;wreg free
   741  00021A  C029  F02F         	movff	?___ftneg,___ftadd@f2
   742  00021E  C02A  F030         	movff	?___ftneg+1,___ftadd@f2+1
   743  000222  C02B  F031         	movff	?___ftneg+2,___ftadd@f2+2
   744  000226  C079  F017         	movff	main@ADCResult,___lwtoft@c
   745  00022A  C07A  F018         	movff	main@ADCResult+1,___lwtoft@c+1
   746  00022E  ECBD  F009         	call	___lwtoft	;wreg free
   747  000232  C017  F02C         	movff	?___lwtoft,___ftadd@f1
   748  000236  C018  F02D         	movff	?___lwtoft+1,___ftadd@f1+1
   749  00023A  C019  F02E         	movff	?___lwtoft+2,___ftadd@f1+2
   750  00023E  EC63  F005         	call	___ftadd	;wreg free
   751  000242  C02C  F038         	movff	?___ftadd,___ftdiv@f1
   752  000246  C02D  F039         	movff	?___ftadd+1,___ftdiv@f1+1
   753  00024A  C02E  F03A         	movff	?___ftadd+2,___ftdiv@f1+2
   754  00024E  EC90  F008         	call	___ftdiv	;wreg free
   755  000252  C038  F047         	movff	?___ftdiv,___fttol@f1
   756  000256  C039  F048         	movff	?___ftdiv+1,___fttol@f1+1
   757  00025A  C03A  F049         	movff	?___ftdiv+2,___fttol@f1+2
   758  00025E  EC08  F007         	call	___fttol	;wreg free
   759  000262  5047               	movf	?___fttol,w,c
   760  000264  0100               	movlb	0	; () banked
   761  000266  6F6C               	movwf	main@clutch_sol& (0+255),b
   762                           
   763                           ; BSR set to: 0
   764                           ;main.c: 103: ADCResult = ADC_GetConversion(battery) * x ;
   765  000268  C073  F01D         	movff	main@x,___ftmul@f2
   766  00026C  C074  F01E         	movff	main@x+1,___ftmul@f2+1
   767  000270  C075  F01F         	movff	main@x+2,___ftmul@f2+2
   768  000274  0100               	movlb	0	; () banked
   769  000276  5172               	movf	main@battery& (0+255),w,b
   770  000278  EC90  F009         	call	_ADC_GetConversion
   771  00027C  C00F  F017         	movff	?_ADC_GetConversion,___lwtoft@c
   772  000280  C010  F018         	movff	?_ADC_GetConversion+1,___lwtoft@c+1
   773  000284  ECBD  F009         	call	___lwtoft	;wreg free
   774  000288  C017  F01A         	movff	?___lwtoft,___ftmul@f1
   775  00028C  C018  F01B         	movff	?___lwtoft+1,___ftmul@f1+1
   776  000290  C019  F01C         	movff	?___lwtoft+2,___ftmul@f1+2
   777  000294  EC9F  F007         	call	___ftmul	;wreg free
   778  000298  C01A  F047         	movff	?___ftmul,___fttol@f1
   779  00029C  C01B  F048         	movff	?___ftmul+1,___fttol@f1+1
   780  0002A0  C01C  F049         	movff	?___ftmul+2,___fttol@f1+2
   781  0002A4  EC08  F007         	call	___fttol	;wreg free
   782  0002A8  C047  F079         	movff	?___fttol,main@ADCResult
   783  0002AC  C048  F07A         	movff	?___fttol+1,main@ADCResult+1
   784                           
   785                           ;main.c: 104: battery = (ADCResult - 0.5*Vref)/6.6 ;
   786  0002B0  0E33               	movlw	51
   787  0002B2  6E3B               	movwf	___ftdiv@f2,c
   788  0002B4  0ED3               	movlw	211
   789  0002B6  6E3C               	movwf	___ftdiv@f2+1,c
   790  0002B8  0E40               	movlw	64
   791  0002BA  6E3D               	movwf	___ftdiv@f2+2,c
   792  0002BC  0E00               	movlw	0
   793  0002BE  6E1D               	movwf	___ftmul@f2,c
   794  0002C0  0E00               	movlw	0
   795  0002C2  6E1E               	movwf	___ftmul@f2+1,c
   796  0002C4  0E3F               	movlw	63
   797  0002C6  6E1F               	movwf	___ftmul@f2+2,c
   798  0002C8  C076  F01A         	movff	main@Vref,___ftmul@f1
   799  0002CC  C077  F01B         	movff	main@Vref+1,___ftmul@f1+1
   800  0002D0  C078  F01C         	movff	main@Vref+2,___ftmul@f1+2
   801  0002D4  EC9F  F007         	call	___ftmul	;wreg free
   802  0002D8  C01A  F029         	movff	?___ftmul,___ftneg@f1
   803  0002DC  C01B  F02A         	movff	?___ftmul+1,___ftneg@f1+1
   804  0002E0  C01C  F02B         	movff	?___ftmul+2,___ftneg@f1+2
   805  0002E4  ECCF  F009         	call	___ftneg	;wreg free
   806  0002E8  C029  F02F         	movff	?___ftneg,___ftadd@f2
   807  0002EC  C02A  F030         	movff	?___ftneg+1,___ftadd@f2+1
   808  0002F0  C02B  F031         	movff	?___ftneg+2,___ftadd@f2+2
   809  0002F4  C079  F017         	movff	main@ADCResult,___lwtoft@c
   810  0002F8  C07A  F018         	movff	main@ADCResult+1,___lwtoft@c+1
   811  0002FC  ECBD  F009         	call	___lwtoft	;wreg free
   812  000300  C017  F02C         	movff	?___lwtoft,___ftadd@f1
   813  000304  C018  F02D         	movff	?___lwtoft+1,___ftadd@f1+1
   814  000308  C019  F02E         	movff	?___lwtoft+2,___ftadd@f1+2
   815  00030C  EC63  F005         	call	___ftadd	;wreg free
   816  000310  C02C  F038         	movff	?___ftadd,___ftdiv@f1
   817  000314  C02D  F039         	movff	?___ftadd+1,___ftdiv@f1+1
   818  000318  C02E  F03A         	movff	?___ftadd+2,___ftdiv@f1+2
   819  00031C  EC90  F008         	call	___ftdiv	;wreg free
   820  000320  C038  F047         	movff	?___ftdiv,___fttol@f1
   821  000324  C039  F048         	movff	?___ftdiv+1,___fttol@f1+1
   822  000328  C03A  F049         	movff	?___ftdiv+2,___fttol@f1+2
   823  00032C  EC08  F007         	call	___fttol	;wreg free
   824  000330  5047               	movf	?___fttol,w,c
   825  000332  0100               	movlb	0	; () banked
   826  000334  6F72               	movwf	main@battery& (0+255),b
   827                           
   828                           ; BSR set to: 0
   829                           ;main.c: 105: ADCResult = ADC_GetConversion(radiator) * x ;
   830  000336  C073  F01D         	movff	main@x,___ftmul@f2
   831  00033A  C074  F01E         	movff	main@x+1,___ftmul@f2+1
   832  00033E  C075  F01F         	movff	main@x+2,___ftmul@f2+2
   833  000342  0100               	movlb	0	; () banked
   834  000344  516D               	movf	main@radiator& (0+255),w,b
   835  000346  EC90  F009         	call	_ADC_GetConversion
   836  00034A  C00F  F017         	movff	?_ADC_GetConversion,___lwtoft@c
   837  00034E  C010  F018         	movff	?_ADC_GetConversion+1,___lwtoft@c+1
   838  000352  ECBD  F009         	call	___lwtoft	;wreg free
   839  000356  C017  F01A         	movff	?___lwtoft,___ftmul@f1
   840  00035A  C018  F01B         	movff	?___lwtoft+1,___ftmul@f1+1
   841  00035E  C019  F01C         	movff	?___lwtoft+2,___ftmul@f1+2
   842  000362  EC9F  F007         	call	___ftmul	;wreg free
   843  000366  C01A  F047         	movff	?___ftmul,___fttol@f1
   844  00036A  C01B  F048         	movff	?___ftmul+1,___fttol@f1+1
   845  00036E  C01C  F049         	movff	?___ftmul+2,___fttol@f1+2
   846  000372  EC08  F007         	call	___fttol	;wreg free
   847  000376  C047  F079         	movff	?___fttol,main@ADCResult
   848  00037A  C048  F07A         	movff	?___fttol+1,main@ADCResult+1
   849                           
   850                           ;main.c: 106: radiator = (ADCResult - 0.1*Vref)/20.0 ;
   851  00037E  0E00               	movlw	0
   852  000380  6E3B               	movwf	___ftdiv@f2,c
   853  000382  0EA0               	movlw	160
   854  000384  6E3C               	movwf	___ftdiv@f2+1,c
   855  000386  0E41               	movlw	65
   856  000388  6E3D               	movwf	___ftdiv@f2+2,c
   857  00038A  0ECD               	movlw	205
   858  00038C  6E1D               	movwf	___ftmul@f2,c
   859  00038E  0ECC               	movlw	204
   860  000390  6E1E               	movwf	___ftmul@f2+1,c
   861  000392  0E3D               	movlw	61
   862  000394  6E1F               	movwf	___ftmul@f2+2,c
   863  000396  C076  F01A         	movff	main@Vref,___ftmul@f1
   864  00039A  C077  F01B         	movff	main@Vref+1,___ftmul@f1+1
   865  00039E  C078  F01C         	movff	main@Vref+2,___ftmul@f1+2
   866  0003A2  EC9F  F007         	call	___ftmul	;wreg free
   867  0003A6  C01A  F029         	movff	?___ftmul,___ftneg@f1
   868  0003AA  C01B  F02A         	movff	?___ftmul+1,___ftneg@f1+1
   869  0003AE  C01C  F02B         	movff	?___ftmul+2,___ftneg@f1+2
   870  0003B2  ECCF  F009         	call	___ftneg	;wreg free
   871  0003B6  C029  F02F         	movff	?___ftneg,___ftadd@f2
   872  0003BA  C02A  F030         	movff	?___ftneg+1,___ftadd@f2+1
   873  0003BE  C02B  F031         	movff	?___ftneg+2,___ftadd@f2+2
   874  0003C2  C079  F017         	movff	main@ADCResult,___lwtoft@c
   875  0003C6  C07A  F018         	movff	main@ADCResult+1,___lwtoft@c+1
   876  0003CA  ECBD  F009         	call	___lwtoft	;wreg free
   877  0003CE  C017  F02C         	movff	?___lwtoft,___ftadd@f1
   878  0003D2  C018  F02D         	movff	?___lwtoft+1,___ftadd@f1+1
   879  0003D6  C019  F02E         	movff	?___lwtoft+2,___ftadd@f1+2
   880  0003DA  EC63  F005         	call	___ftadd	;wreg free
   881  0003DE  C02C  F038         	movff	?___ftadd,___ftdiv@f1
   882  0003E2  C02D  F039         	movff	?___ftadd+1,___ftdiv@f1+1
   883  0003E6  C02E  F03A         	movff	?___ftadd+2,___ftdiv@f1+2
   884  0003EA  EC90  F008         	call	___ftdiv	;wreg free
   885  0003EE  C038  F047         	movff	?___ftdiv,___fttol@f1
   886  0003F2  C039  F048         	movff	?___ftdiv+1,___fttol@f1+1
   887  0003F6  C03A  F049         	movff	?___ftdiv+2,___fttol@f1+2
   888  0003FA  EC08  F007         	call	___fttol	;wreg free
   889  0003FE  5047               	movf	?___fttol,w,c
   890  000400  0100               	movlb	0	; () banked
   891  000402  6F6D               	movwf	main@radiator& (0+255),b
   892                           
   893                           ; BSR set to: 0
   894                           ;main.c: 107: ADCResult = ADC_GetConversion(fuel_pump) * x ;
   895  000404  C073  F01D         	movff	main@x,___ftmul@f2
   896  000408  C074  F01E         	movff	main@x+1,___ftmul@f2+1
   897  00040C  C075  F01F         	movff	main@x+2,___ftmul@f2+2
   898  000410  0100               	movlb	0	; () banked
   899  000412  516E               	movf	main@fuel_pump& (0+255),w,b
   900  000414  EC90  F009         	call	_ADC_GetConversion
   901  000418  C00F  F017         	movff	?_ADC_GetConversion,___lwtoft@c
   902  00041C  C010  F018         	movff	?_ADC_GetConversion+1,___lwtoft@c+1
   903  000420  ECBD  F009         	call	___lwtoft	;wreg free
   904  000424  C017  F01A         	movff	?___lwtoft,___ftmul@f1
   905  000428  C018  F01B         	movff	?___lwtoft+1,___ftmul@f1+1
   906  00042C  C019  F01C         	movff	?___lwtoft+2,___ftmul@f1+2
   907  000430  EC9F  F007         	call	___ftmul	;wreg free
   908  000434  C01A  F047         	movff	?___ftmul,___fttol@f1
   909  000438  C01B  F048         	movff	?___ftmul+1,___fttol@f1+1
   910  00043C  C01C  F049         	movff	?___ftmul+2,___fttol@f1+2
   911  000440  EC08  F007         	call	___fttol	;wreg free
   912  000444  C047  F079         	movff	?___fttol,main@ADCResult
   913  000448  C048  F07A         	movff	?___fttol+1,main@ADCResult+1
   914                           
   915                           ;main.c: 108: fuel_pump = (ADCResult - 0.1*Vref)/40.0 ;
   916  00044C  0E00               	movlw	0
   917  00044E  6E3B               	movwf	___ftdiv@f2,c
   918  000450  0E20               	movlw	32
   919  000452  6E3C               	movwf	___ftdiv@f2+1,c
   920  000454  0E42               	movlw	66
   921  000456  6E3D               	movwf	___ftdiv@f2+2,c
   922  000458  0ECD               	movlw	205
   923  00045A  6E1D               	movwf	___ftmul@f2,c
   924  00045C  0ECC               	movlw	204
   925  00045E  6E1E               	movwf	___ftmul@f2+1,c
   926  000460  0E3D               	movlw	61
   927  000462  6E1F               	movwf	___ftmul@f2+2,c
   928  000464  C076  F01A         	movff	main@Vref,___ftmul@f1
   929  000468  C077  F01B         	movff	main@Vref+1,___ftmul@f1+1
   930  00046C  C078  F01C         	movff	main@Vref+2,___ftmul@f1+2
   931  000470  EC9F  F007         	call	___ftmul	;wreg free
   932  000474  C01A  F029         	movff	?___ftmul,___ftneg@f1
   933  000478  C01B  F02A         	movff	?___ftmul+1,___ftneg@f1+1
   934  00047C  C01C  F02B         	movff	?___ftmul+2,___ftneg@f1+2
   935  000480  ECCF  F009         	call	___ftneg	;wreg free
   936  000484  C029  F02F         	movff	?___ftneg,___ftadd@f2
   937  000488  C02A  F030         	movff	?___ftneg+1,___ftadd@f2+1
   938  00048C  C02B  F031         	movff	?___ftneg+2,___ftadd@f2+2
   939  000490  C079  F017         	movff	main@ADCResult,___lwtoft@c
   940  000494  C07A  F018         	movff	main@ADCResult+1,___lwtoft@c+1
   941  000498  ECBD  F009         	call	___lwtoft	;wreg free
   942  00049C  C017  F02C         	movff	?___lwtoft,___ftadd@f1
   943  0004A0  C018  F02D         	movff	?___lwtoft+1,___ftadd@f1+1
   944  0004A4  C019  F02E         	movff	?___lwtoft+2,___ftadd@f1+2
   945  0004A8  EC63  F005         	call	___ftadd	;wreg free
   946  0004AC  C02C  F038         	movff	?___ftadd,___ftdiv@f1
   947  0004B0  C02D  F039         	movff	?___ftadd+1,___ftdiv@f1+1
   948  0004B4  C02E  F03A         	movff	?___ftadd+2,___ftdiv@f1+2
   949  0004B8  EC90  F008         	call	___ftdiv	;wreg free
   950  0004BC  C038  F047         	movff	?___ftdiv,___fttol@f1
   951  0004C0  C039  F048         	movff	?___ftdiv+1,___fttol@f1+1
   952  0004C4  C03A  F049         	movff	?___ftdiv+2,___fttol@f1+2
   953  0004C8  EC08  F007         	call	___fttol	;wreg free
   954  0004CC  5047               	movf	?___fttol,w,c
   955  0004CE  0100               	movlb	0	; () banked
   956  0004D0  6F6E               	movwf	main@fuel_pump& (0+255),b
   957                           
   958                           ; BSR set to: 0
   959                           ;main.c: 109: ADCResult = ADC_GetConversion(ewp) * x ;
   960  0004D2  C073  F01D         	movff	main@x,___ftmul@f2
   961  0004D6  C074  F01E         	movff	main@x+1,___ftmul@f2+1
   962  0004DA  C075  F01F         	movff	main@x+2,___ftmul@f2+2
   963  0004DE  0100               	movlb	0	; () banked
   964  0004E0  516F               	movf	main@ewp& (0+255),w,b
   965  0004E2  EC90  F009         	call	_ADC_GetConversion
   966  0004E6  C00F  F017         	movff	?_ADC_GetConversion,___lwtoft@c
   967  0004EA  C010  F018         	movff	?_ADC_GetConversion+1,___lwtoft@c+1
   968  0004EE  ECBD  F009         	call	___lwtoft	;wreg free
   969  0004F2  C017  F01A         	movff	?___lwtoft,___ftmul@f1
   970  0004F6  C018  F01B         	movff	?___lwtoft+1,___ftmul@f1+1
   971  0004FA  C019  F01C         	movff	?___lwtoft+2,___ftmul@f1+2
   972  0004FE  EC9F  F007         	call	___ftmul	;wreg free
   973  000502  C01A  F047         	movff	?___ftmul,___fttol@f1
   974  000506  C01B  F048         	movff	?___ftmul+1,___fttol@f1+1
   975  00050A  C01C  F049         	movff	?___ftmul+2,___fttol@f1+2
   976  00050E  EC08  F007         	call	___fttol	;wreg free
   977  000512  C047  F079         	movff	?___fttol,main@ADCResult
   978  000516  C048  F07A         	movff	?___fttol+1,main@ADCResult+1
   979                           
   980                           ;main.c: 110: ewp = (ADCResult - 0.1*Vref)/40.0 ;
   981  00051A  0E00               	movlw	0
   982  00051C  6E3B               	movwf	___ftdiv@f2,c
   983  00051E  0E20               	movlw	32
   984  000520  6E3C               	movwf	___ftdiv@f2+1,c
   985  000522  0E42               	movlw	66
   986  000524  6E3D               	movwf	___ftdiv@f2+2,c
   987  000526  0ECD               	movlw	205
   988  000528  6E1D               	movwf	___ftmul@f2,c
   989  00052A  0ECC               	movlw	204
   990  00052C  6E1E               	movwf	___ftmul@f2+1,c
   991  00052E  0E3D               	movlw	61
   992  000530  6E1F               	movwf	___ftmul@f2+2,c
   993  000532  C076  F01A         	movff	main@Vref,___ftmul@f1
   994  000536  C077  F01B         	movff	main@Vref+1,___ftmul@f1+1
   995  00053A  C078  F01C         	movff	main@Vref+2,___ftmul@f1+2
   996  00053E  EC9F  F007         	call	___ftmul	;wreg free
   997  000542  C01A  F029         	movff	?___ftmul,___ftneg@f1
   998  000546  C01B  F02A         	movff	?___ftmul+1,___ftneg@f1+1
   999  00054A  C01C  F02B         	movff	?___ftmul+2,___ftneg@f1+2
  1000  00054E  ECCF  F009         	call	___ftneg	;wreg free
  1001  000552  C029  F02F         	movff	?___ftneg,___ftadd@f2
  1002  000556  C02A  F030         	movff	?___ftneg+1,___ftadd@f2+1
  1003  00055A  C02B  F031         	movff	?___ftneg+2,___ftadd@f2+2
  1004  00055E  C079  F017         	movff	main@ADCResult,___lwtoft@c
  1005  000562  C07A  F018         	movff	main@ADCResult+1,___lwtoft@c+1
  1006  000566  ECBD  F009         	call	___lwtoft	;wreg free
  1007  00056A  C017  F02C         	movff	?___lwtoft,___ftadd@f1
  1008  00056E  C018  F02D         	movff	?___lwtoft+1,___ftadd@f1+1
  1009  000572  C019  F02E         	movff	?___lwtoft+2,___ftadd@f1+2
  1010  000576  EC63  F005         	call	___ftadd	;wreg free
  1011  00057A  C02C  F038         	movff	?___ftadd,___ftdiv@f1
  1012  00057E  C02D  F039         	movff	?___ftadd+1,___ftdiv@f1+1
  1013  000582  C02E  F03A         	movff	?___ftadd+2,___ftdiv@f1+2
  1014  000586  EC90  F008         	call	___ftdiv	;wreg free
  1015  00058A  C038  F047         	movff	?___ftdiv,___fttol@f1
  1016  00058E  C039  F048         	movff	?___ftdiv+1,___fttol@f1+1
  1017  000592  C03A  F049         	movff	?___ftdiv+2,___fttol@f1+2
  1018  000596  EC08  F007         	call	___fttol	;wreg free
  1019  00059A  5047               	movf	?___fttol,w,c
  1020  00059C  0100               	movlb	0	; () banked
  1021  00059E  6F6F               	movwf	main@ewp& (0+255),b
  1022                           
  1023                           ; BSR set to: 0
  1024                           ;main.c: 111: ADCResult = ADC_GetConversion(drs) * x ;
  1025  0005A0  C073  F01D         	movff	main@x,___ftmul@f2
  1026  0005A4  C074  F01E         	movff	main@x+1,___ftmul@f2+1
  1027  0005A8  C075  F01F         	movff	main@x+2,___ftmul@f2+2
  1028  0005AC  0100               	movlb	0	; () banked
  1029  0005AE  5170               	movf	main@drs& (0+255),w,b
  1030  0005B0  EC90  F009         	call	_ADC_GetConversion
  1031  0005B4  C00F  F017         	movff	?_ADC_GetConversion,___lwtoft@c
  1032  0005B8  C010  F018         	movff	?_ADC_GetConversion+1,___lwtoft@c+1
  1033  0005BC  ECBD  F009         	call	___lwtoft	;wreg free
  1034  0005C0  C017  F01A         	movff	?___lwtoft,___ftmul@f1
  1035  0005C4  C018  F01B         	movff	?___lwtoft+1,___ftmul@f1+1
  1036  0005C8  C019  F01C         	movff	?___lwtoft+2,___ftmul@f1+2
  1037  0005CC  EC9F  F007         	call	___ftmul	;wreg free
  1038  0005D0  C01A  F047         	movff	?___ftmul,___fttol@f1
  1039  0005D4  C01B  F048         	movff	?___ftmul+1,___fttol@f1+1
  1040  0005D8  C01C  F049         	movff	?___ftmul+2,___fttol@f1+2
  1041  0005DC  EC08  F007         	call	___fttol	;wreg free
  1042  0005E0  C047  F079         	movff	?___fttol,main@ADCResult
  1043  0005E4  C048  F07A         	movff	?___fttol+1,main@ADCResult+1
  1044                           
  1045                           ;main.c: 112: drs = (ADCResult - 0.1*Vref)/40.0 ;
  1046  0005E8  0E00               	movlw	0
  1047  0005EA  6E3B               	movwf	___ftdiv@f2,c
  1048  0005EC  0E20               	movlw	32
  1049  0005EE  6E3C               	movwf	___ftdiv@f2+1,c
  1050  0005F0  0E42               	movlw	66
  1051  0005F2  6E3D               	movwf	___ftdiv@f2+2,c
  1052  0005F4  0ECD               	movlw	205
  1053  0005F6  6E1D               	movwf	___ftmul@f2,c
  1054  0005F8  0ECC               	movlw	204
  1055  0005FA  6E1E               	movwf	___ftmul@f2+1,c
  1056  0005FC  0E3D               	movlw	61
  1057  0005FE  6E1F               	movwf	___ftmul@f2+2,c
  1058  000600  C076  F01A         	movff	main@Vref,___ftmul@f1
  1059  000604  C077  F01B         	movff	main@Vref+1,___ftmul@f1+1
  1060  000608  C078  F01C         	movff	main@Vref+2,___ftmul@f1+2
  1061  00060C  EC9F  F007         	call	___ftmul	;wreg free
  1062  000610  C01A  F029         	movff	?___ftmul,___ftneg@f1
  1063  000614  C01B  F02A         	movff	?___ftmul+1,___ftneg@f1+1
  1064  000618  C01C  F02B         	movff	?___ftmul+2,___ftneg@f1+2
  1065  00061C  ECCF  F009         	call	___ftneg	;wreg free
  1066  000620  C029  F02F         	movff	?___ftneg,___ftadd@f2
  1067  000624  C02A  F030         	movff	?___ftneg+1,___ftadd@f2+1
  1068  000628  C02B  F031         	movff	?___ftneg+2,___ftadd@f2+2
  1069  00062C  C079  F017         	movff	main@ADCResult,___lwtoft@c
  1070  000630  C07A  F018         	movff	main@ADCResult+1,___lwtoft@c+1
  1071  000634  ECBD  F009         	call	___lwtoft	;wreg free
  1072  000638  C017  F02C         	movff	?___lwtoft,___ftadd@f1
  1073  00063C  C018  F02D         	movff	?___lwtoft+1,___ftadd@f1+1
  1074  000640  C019  F02E         	movff	?___lwtoft+2,___ftadd@f1+2
  1075  000644  EC63  F005         	call	___ftadd	;wreg free
  1076  000648  C02C  F038         	movff	?___ftadd,___ftdiv@f1
  1077  00064C  C02D  F039         	movff	?___ftadd+1,___ftdiv@f1+1
  1078  000650  C02E  F03A         	movff	?___ftadd+2,___ftdiv@f1+2
  1079  000654  EC90  F008         	call	___ftdiv	;wreg free
  1080  000658  C038  F047         	movff	?___ftdiv,___fttol@f1
  1081  00065C  C039  F048         	movff	?___ftdiv+1,___fttol@f1+1
  1082  000660  C03A  F049         	movff	?___ftdiv+2,___fttol@f1+2
  1083  000664  EC08  F007         	call	___fttol	;wreg free
  1084  000668  5047               	movf	?___fttol,w,c
  1085  00066A  0100               	movlb	0	; () banked
  1086  00066C  6F70               	movwf	main@drs& (0+255),b
  1087                           
  1088                           ; BSR set to: 0
  1089                           ;main.c: 113: ADCResult = ADC_GetConversion(down_sol) * x ;
  1090  00066E  C073  F01D         	movff	main@x,___ftmul@f2
  1091  000672  C074  F01E         	movff	main@x+1,___ftmul@f2+1
  1092  000676  C075  F01F         	movff	main@x+2,___ftmul@f2+2
  1093  00067A  0100               	movlb	0	; () banked
  1094  00067C  5171               	movf	main@down_sol& (0+255),w,b
  1095  00067E  EC90  F009         	call	_ADC_GetConversion
  1096  000682  C00F  F017         	movff	?_ADC_GetConversion,___lwtoft@c
  1097  000686  C010  F018         	movff	?_ADC_GetConversion+1,___lwtoft@c+1
  1098  00068A  ECBD  F009         	call	___lwtoft	;wreg free
  1099  00068E  C017  F01A         	movff	?___lwtoft,___ftmul@f1
  1100  000692  C018  F01B         	movff	?___lwtoft+1,___ftmul@f1+1
  1101  000696  C019  F01C         	movff	?___lwtoft+2,___ftmul@f1+2
  1102  00069A  EC9F  F007         	call	___ftmul	;wreg free
  1103  00069E  C01A  F047         	movff	?___ftmul,___fttol@f1
  1104  0006A2  C01B  F048         	movff	?___ftmul+1,___fttol@f1+1
  1105  0006A6  C01C  F049         	movff	?___ftmul+2,___fttol@f1+2
  1106  0006AA  EC08  F007         	call	___fttol	;wreg free
  1107  0006AE  C047  F079         	movff	?___fttol,main@ADCResult
  1108  0006B2  C048  F07A         	movff	?___fttol+1,main@ADCResult+1
  1109                           
  1110                           ;main.c: 114: down_sol = (ADCResult - 0.1*Vref)/40.0 ;
  1111  0006B6  0E00               	movlw	0
  1112  0006B8  6E3B               	movwf	___ftdiv@f2,c
  1113  0006BA  0E20               	movlw	32
  1114  0006BC  6E3C               	movwf	___ftdiv@f2+1,c
  1115  0006BE  0E42               	movlw	66
  1116  0006C0  6E3D               	movwf	___ftdiv@f2+2,c
  1117  0006C2  0ECD               	movlw	205
  1118  0006C4  6E1D               	movwf	___ftmul@f2,c
  1119  0006C6  0ECC               	movlw	204
  1120  0006C8  6E1E               	movwf	___ftmul@f2+1,c
  1121  0006CA  0E3D               	movlw	61
  1122  0006CC  6E1F               	movwf	___ftmul@f2+2,c
  1123  0006CE  C076  F01A         	movff	main@Vref,___ftmul@f1
  1124  0006D2  C077  F01B         	movff	main@Vref+1,___ftmul@f1+1
  1125  0006D6  C078  F01C         	movff	main@Vref+2,___ftmul@f1+2
  1126  0006DA  EC9F  F007         	call	___ftmul	;wreg free
  1127  0006DE  C01A  F029         	movff	?___ftmul,___ftneg@f1
  1128  0006E2  C01B  F02A         	movff	?___ftmul+1,___ftneg@f1+1
  1129  0006E6  C01C  F02B         	movff	?___ftmul+2,___ftneg@f1+2
  1130  0006EA  ECCF  F009         	call	___ftneg	;wreg free
  1131  0006EE  C029  F02F         	movff	?___ftneg,___ftadd@f2
  1132  0006F2  C02A  F030         	movff	?___ftneg+1,___ftadd@f2+1
  1133  0006F6  C02B  F031         	movff	?___ftneg+2,___ftadd@f2+2
  1134  0006FA  C079  F017         	movff	main@ADCResult,___lwtoft@c
  1135  0006FE  C07A  F018         	movff	main@ADCResult+1,___lwtoft@c+1
  1136  000702  ECBD  F009         	call	___lwtoft	;wreg free
  1137  000706  C017  F02C         	movff	?___lwtoft,___ftadd@f1
  1138  00070A  C018  F02D         	movff	?___lwtoft+1,___ftadd@f1+1
  1139  00070E  C019  F02E         	movff	?___lwtoft+2,___ftadd@f1+2
  1140  000712  EC63  F005         	call	___ftadd	;wreg free
  1141  000716  C02C  F038         	movff	?___ftadd,___ftdiv@f1
  1142  00071A  C02D  F039         	movff	?___ftadd+1,___ftdiv@f1+1
  1143  00071E  C02E  F03A         	movff	?___ftadd+2,___ftdiv@f1+2
  1144  000722  EC90  F008         	call	___ftdiv	;wreg free
  1145  000726  C038  F047         	movff	?___ftdiv,___fttol@f1
  1146  00072A  C039  F048         	movff	?___ftdiv+1,___fttol@f1+1
  1147  00072E  C03A  F049         	movff	?___ftdiv+2,___fttol@f1+2
  1148  000732  EC08  F007         	call	___fttol	;wreg free
  1149  000736  5047               	movf	?___fttol,w,c
  1150  000738  0100               	movlb	0	; () banked
  1151  00073A  6F71               	movwf	main@down_sol& (0+255),b
  1152                           
  1153                           ;main.c: 122: uCAN_MSG cur_data1 ;
  1154                           ;main.c: 123: cur_data1.frame.idType = 1 ;
  1155  00073C  0E01               	movlw	1
  1156  00073E  0100               	movlb	0	; () banked
  1157  000740  6F7B               	movwf	main@cur_data1& (0+255),b
  1158                           
  1159                           ;main.c: 124: cur_data1.frame.id = 0x634 ;
  1160  000742  0E34               	movlw	52
  1161  000744  0100               	movlb	0	; () banked
  1162  000746  6F7C               	movwf	(main@cur_data1+1)& (0+255),b
  1163  000748  0E06               	movlw	6
  1164  00074A  6F7D               	movwf	(main@cur_data1+2)& (0+255),b
  1165  00074C  0E00               	movlw	0
  1166  00074E  6F7E               	movwf	(main@cur_data1+3)& (0+255),b
  1167  000750  0E00               	movlw	0
  1168  000752  6F7F               	movwf	(main@cur_data1+4)& (0+255),b
  1169                           
  1170                           ;main.c: 125: cur_data1.frame.dlc = 8 ;
  1171  000754  0E08               	movlw	8
  1172  000756  0100               	movlb	0	; () banked
  1173  000758  6F80               	movwf	(main@cur_data1+5)& (0+255),b
  1174                           
  1175                           ; BSR set to: 0
  1176                           ;main.c: 126: cur_data1.frame.data0 = up_sol ;
  1177  00075A  C06B  F081         	movff	main@up_sol,main@cur_data1+6
  1178                           
  1179                           ; BSR set to: 0
  1180                           ;main.c: 127: cur_data1.frame.data1 = clutch_sol ;
  1181  00075E  C06C  F082         	movff	main@clutch_sol,main@cur_data1+7
  1182                           
  1183                           ; BSR set to: 0
  1184                           ;main.c: 128: cur_data1.frame.data2 = battery ;
  1185  000762  C072  F083         	movff	main@battery,main@cur_data1+8
  1186                           
  1187                           ; BSR set to: 0
  1188                           ;main.c: 129: cur_data1.frame.data3 = radiator ;
  1189  000766  C06D  F084         	movff	main@radiator,main@cur_data1+9
  1190                           
  1191                           ; BSR set to: 0
  1192                           ;main.c: 130: cur_data1.frame.data4 = fuel_pump ;
  1193  00076A  C06E  F085         	movff	main@fuel_pump,main@cur_data1+10
  1194                           
  1195                           ; BSR set to: 0
  1196                           ;main.c: 131: cur_data1.frame.data5 = ewp ;
  1197  00076E  C06F  F086         	movff	main@ewp,main@cur_data1+11
  1198                           
  1199                           ; BSR set to: 0
  1200                           ;main.c: 132: cur_data1.frame.data6 = drs ;
  1201  000772  C070  F087         	movff	main@drs,main@cur_data1+12
  1202                           
  1203                           ; BSR set to: 0
  1204                           ;main.c: 133: cur_data1.frame.data7 = down_sol ;
  1205  000776  C071  F088         	movff	main@down_sol,main@cur_data1+13
  1206                           
  1207                           ; BSR set to: 0
  1208                           ;main.c: 135: CAN_transmit(&cur_data1) ;
  1209  00077A  0E7B               	movlw	low main@cur_data1
  1210  00077C  6E21               	movwf	CAN_transmit@tempCanMsg,c
  1211  00077E  0E00               	movlw	high main@cur_data1
  1212  000780  6E22               	movwf	CAN_transmit@tempCanMsg+1,c
  1213  000782  ECC4  F003         	call	_CAN_transmit	;wreg free
  1214  000786  D4A2               	goto	l2393
  1215  000788                     __end_of_main:
  1216                           	opt stack 0
  1217                           tblptru	equ	0xFF8
  1218                           
  1219 ;; *************** function ___lwtoft *****************
  1220 ;; Defined at:
  1221 ;;		line 28 in file "D:\Atmel\xc8\sources\common\lwtoft.c"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;  c               2   22[COMRAM] unsigned int 
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;		None
  1226 ;; Return value:  Size  Location     Type
  1227 ;;                  3   22[COMRAM] float 
  1228 ;; Registers used:
  1229 ;;		wreg, status,2, status,0, cstack
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1235 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1238 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1239 ;;Total ram usage:        3 bytes
  1240 ;; Hardware stack levels used:    1
  1241 ;; Hardware stack levels required when called:    4
  1242 ;; This function calls:
  1243 ;;		___ftpack
  1244 ;; This function is called by:
  1245 ;;		_main
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           	psect	text1
  1250  00137A                     __ptext1:
  1251                           	opt stack 0
  1252  00137A                     ___lwtoft:
  1253                           	opt stack 26
  1254                           
  1255                           ;incstack = 0
  1256  00137A  C017  F00F         	movff	___lwtoft@c,___ftpack@arg
  1257  00137E  C018  F010         	movff	___lwtoft@c+1,___ftpack@arg+1
  1258  001382  6A11               	clrf	___ftpack@arg+2,c
  1259  001384  0E8E               	movlw	142
  1260  001386  6E12               	movwf	___ftpack@exp,c
  1261  001388  0E00               	movlw	0
  1262  00138A  6E13               	movwf	___ftpack@sign,c
  1263  00138C  EC03  F009         	call	___ftpack	;wreg free
  1264  001390  C00F  F017         	movff	?___ftpack,?___lwtoft
  1265  001394  C010  F018         	movff	?___ftpack+1,?___lwtoft+1
  1266  001398  C011  F019         	movff	?___ftpack+2,?___lwtoft+2
  1267  00139C  0012               	return	
  1268  00139E                     __end_of___lwtoft:
  1269                           	opt stack 0
  1270                           tblptru	equ	0xFF8
  1271                           
  1272 ;; *************** function ___fttol *****************
  1273 ;; Defined at:
  1274 ;;		line 44 in file "D:\Atmel\xc8\sources\common\fttol.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;  f1              3   70[COMRAM] float 
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;  lval            4    6[BANK0 ] unsigned long 
  1279 ;;  exp1            1   10[BANK0 ] unsigned char 
  1280 ;;  sign1           1    5[BANK0 ] unsigned char 
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  4   70[COMRAM] long 
  1283 ;; Registers used:
  1284 ;;		wreg, status,2, status,0
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1290 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1291 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1292 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1293 ;;      Totals:         4      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1294 ;;Total ram usage:       15 bytes
  1295 ;; Hardware stack levels used:    1
  1296 ;; Hardware stack levels required when called:    3
  1297 ;; This function calls:
  1298 ;;		Nothing
  1299 ;; This function is called by:
  1300 ;;		_main
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304                           	psect	text2
  1305  000E10                     __ptext2:
  1306                           	opt stack 0
  1307  000E10                     ___fttol:
  1308                           	opt stack 27
  1309                           
  1310                           ;incstack = 0
  1311  000E10  C049  F060         	movff	___fttol@f1+2,??___fttol
  1312  000E14  0100               	movlb	0	; () banked
  1313  000E16  6B61               	clrf	(??___fttol+1)& (0+255),b
  1314  000E18  6B62               	clrf	(??___fttol+2)& (0+255),b
  1315  000E1A  3448               	rlcf	___fttol@f1+1,w,c
  1316  000E1C  0100               	movlb	0	; () banked
  1317  000E1E  3760               	rlcf	??___fttol& (0+255),f,b
  1318  000E20  E301               	bnc	u1351
  1319  000E22  8161               	bsf	(??___fttol+1)& (0+255),0,b
  1320  000E24                     u1351:
  1321  000E24  0100               	movlb	0	; () banked
  1322  000E26  5160               	movf	??___fttol& (0+255),w,b
  1323  000E28  0100               	movlb	0	; () banked
  1324  000E2A  6F6A               	movwf	___fttol@exp1& (0+255),b
  1325  000E2C  0100               	movlb	0	; () banked
  1326  000E2E  516A               	movf	___fttol@exp1& (0+255),w,b
  1327  000E30  A4D8               	btfss	status,2,c
  1328  000E32  D009               	goto	l2347
  1329                           
  1330                           ; BSR set to: 0
  1331  000E34  0E00               	movlw	0
  1332  000E36  6E47               	movwf	?___fttol,c
  1333  000E38  0E00               	movlw	0
  1334  000E3A  6E48               	movwf	?___fttol+1,c
  1335  000E3C  0E00               	movlw	0
  1336  000E3E  6E49               	movwf	?___fttol+2,c
  1337  000E40  0E00               	movlw	0
  1338  000E42  6E4A               	movwf	?___fttol+3,c
  1339                           
  1340                           ; BSR set to: 0
  1341  000E44  0012               	return	
  1342  000E46                     l2347:
  1343                           
  1344                           ; BSR set to: 0
  1345  000E46  0E17               	movlw	23
  1346  000E48  0100               	movlb	0	; () banked
  1347  000E4A  6F60               	movwf	??___fttol& (0+255),b
  1348  000E4C  C047  F061         	movff	___fttol@f1,??___fttol+1
  1349  000E50  C048  F062         	movff	___fttol@f1+1,??___fttol+2
  1350  000E54  C049  F063         	movff	___fttol@f1+2,??___fttol+3
  1351  000E58  0100               	movlb	0	; () banked
  1352  000E5A  2960               	incf	??___fttol& (0+255),w,b
  1353  000E5C  0100               	movlb	0	; () banked
  1354  000E5E  6F64               	movwf	(??___fttol+4)& (0+255),b
  1355  000E60  D005               	goto	u1370
  1356  000E62                     u1375:
  1357  000E62  0100               	movlb	0	; () banked
  1358  000E64  90D8               	bcf	status,0,c
  1359  000E66  3363               	rrcf	(??___fttol+3)& (0+255),f,b
  1360  000E68  3362               	rrcf	(??___fttol+2)& (0+255),f,b
  1361  000E6A  3361               	rrcf	(??___fttol+1)& (0+255),f,b
  1362  000E6C                     u1370:
  1363  000E6C  0100               	movlb	0	; () banked
  1364  000E6E  2F64               	decfsz	(??___fttol+4)& (0+255),f,b
  1365  000E70  D7F8               	goto	u1375
  1366  000E72  0100               	movlb	0	; () banked
  1367  000E74  5161               	movf	(??___fttol+1)& (0+255),w,b
  1368  000E76  0100               	movlb	0	; () banked
  1369  000E78  6F65               	movwf	___fttol@sign1& (0+255),b
  1370                           
  1371                           ; BSR set to: 0
  1372  000E7A  8E48               	bsf	___fttol@f1+1,7,c
  1373                           
  1374                           ; BSR set to: 0
  1375  000E7C  0EFF               	movlw	255
  1376  000E7E  1647               	andwf	___fttol@f1,f,c
  1377  000E80  0EFF               	movlw	255
  1378  000E82  1648               	andwf	___fttol@f1+1,f,c
  1379  000E84  0E00               	movlw	0
  1380  000E86  1649               	andwf	___fttol@f1+2,f,c
  1381                           
  1382                           ; BSR set to: 0
  1383  000E88  5047               	movf	___fttol@f1,w,c
  1384  000E8A  0100               	movlb	0	; () banked
  1385  000E8C  6F66               	movwf	___fttol@lval& (0+255),b
  1386  000E8E  5048               	movf	___fttol@f1+1,w,c
  1387  000E90  0100               	movlb	0	; () banked
  1388  000E92  6F67               	movwf	(___fttol@lval+1)& (0+255),b
  1389  000E94  5049               	movf	___fttol@f1+2,w,c
  1390  000E96  0100               	movlb	0	; () banked
  1391  000E98  6F68               	movwf	(___fttol@lval+2)& (0+255),b
  1392  000E9A  0100               	movlb	0	; () banked
  1393  000E9C  6B69               	clrf	(___fttol@lval+3)& (0+255),b
  1394                           
  1395                           ; BSR set to: 0
  1396  000E9E  0E8E               	movlw	142
  1397  000EA0  0100               	movlb	0	; () banked
  1398  000EA2  5F6A               	subwf	___fttol@exp1& (0+255),f,b
  1399                           
  1400                           ; BSR set to: 0
  1401  000EA4  0100               	movlb	0	; () banked
  1402  000EA6  AF6A               	btfss	___fttol@exp1& (0+255),7,b
  1403  000EA8  D019               	goto	l2369
  1404                           
  1405                           ; BSR set to: 0
  1406  000EAA  0100               	movlb	0	; () banked
  1407  000EAC  516A               	movf	___fttol@exp1& (0+255),w,b
  1408  000EAE  0A80               	xorlw	128
  1409  000EB0  0F8F               	addlw	143
  1410  000EB2  B0D8               	btfsc	status,0,c
  1411  000EB4  D009               	goto	l2365
  1412                           
  1413                           ; BSR set to: 0
  1414  000EB6  0E00               	movlw	0
  1415  000EB8  6E47               	movwf	?___fttol,c
  1416  000EBA  0E00               	movlw	0
  1417  000EBC  6E48               	movwf	?___fttol+1,c
  1418  000EBE  0E00               	movlw	0
  1419  000EC0  6E49               	movwf	?___fttol+2,c
  1420  000EC2  0E00               	movlw	0
  1421  000EC4  6E4A               	movwf	?___fttol+3,c
  1422                           
  1423                           ; BSR set to: 0
  1424  000EC6  0012               	return	
  1425  000EC8                     l2365:
  1426                           
  1427                           ; BSR set to: 0
  1428  000EC8  0100               	movlb	0	; () banked
  1429  000ECA  90D8               	bcf	status,0,c
  1430  000ECC  3369               	rrcf	(___fttol@lval+3)& (0+255),f,b
  1431  000ECE  3368               	rrcf	(___fttol@lval+2)& (0+255),f,b
  1432  000ED0  3367               	rrcf	(___fttol@lval+1)& (0+255),f,b
  1433  000ED2  3366               	rrcf	___fttol@lval& (0+255),f,b
  1434                           
  1435                           ; BSR set to: 0
  1436  000ED4  0100               	movlb	0	; () banked
  1437  000ED6  3F6A               	incfsz	___fttol@exp1& (0+255),f,b
  1438  000ED8  D7F7               	goto	l2365
  1439                           
  1440                           ; BSR set to: 0
  1441  000EDA  D01A               	goto	l2379
  1442  000EDC                     l2369:
  1443                           
  1444                           ; BSR set to: 0
  1445  000EDC  0E17               	movlw	23
  1446  000EDE  0100               	movlb	0	; () banked
  1447  000EE0  656A               	cpfsgt	___fttol@exp1& (0+255),b
  1448  000EE2  D011               	goto	l2377
  1449                           
  1450                           ; BSR set to: 0
  1451  000EE4  0E00               	movlw	0
  1452  000EE6  6E47               	movwf	?___fttol,c
  1453  000EE8  0E00               	movlw	0
  1454  000EEA  6E48               	movwf	?___fttol+1,c
  1455  000EEC  0E00               	movlw	0
  1456  000EEE  6E49               	movwf	?___fttol+2,c
  1457  000EF0  0E00               	movlw	0
  1458  000EF2  6E4A               	movwf	?___fttol+3,c
  1459                           
  1460                           ; BSR set to: 0
  1461  000EF4  0012               	return	
  1462  000EF6                     l2375:
  1463                           
  1464                           ; BSR set to: 0
  1465  000EF6  0100               	movlb	0	; () banked
  1466  000EF8  90D8               	bcf	status,0,c
  1467  000EFA  3766               	rlcf	___fttol@lval& (0+255),f,b
  1468  000EFC  3767               	rlcf	(___fttol@lval+1)& (0+255),f,b
  1469  000EFE  3768               	rlcf	(___fttol@lval+2)& (0+255),f,b
  1470  000F00  3769               	rlcf	(___fttol@lval+3)& (0+255),f,b
  1471  000F02  0100               	movlb	0	; () banked
  1472  000F04  076A               	decf	___fttol@exp1& (0+255),f,b
  1473  000F06                     l2377:
  1474                           
  1475                           ; BSR set to: 0
  1476  000F06  0100               	movlb	0	; () banked
  1477  000F08  516A               	movf	___fttol@exp1& (0+255),w,b
  1478  000F0A  0100               	movlb	0	; () banked
  1479  000F0C  A4D8               	btfss	status,2,c
  1480  000F0E  D7F3               	goto	l2375
  1481  000F10                     l2379:
  1482                           
  1483                           ; BSR set to: 0
  1484  000F10  0100               	movlb	0	; () banked
  1485  000F12  5165               	movf	___fttol@sign1& (0+255),w,b
  1486  000F14  0100               	movlb	0	; () banked
  1487  000F16  B4D8               	btfsc	status,2,c
  1488  000F18  D009               	goto	l2383
  1489                           
  1490                           ; BSR set to: 0
  1491  000F1A  0100               	movlb	0	; () banked
  1492  000F1C  1F69               	comf	(___fttol@lval+3)& (0+255),f,b
  1493  000F1E  1F68               	comf	(___fttol@lval+2)& (0+255),f,b
  1494  000F20  1F67               	comf	(___fttol@lval+1)& (0+255),f,b
  1495  000F22  6D66               	negf	___fttol@lval& (0+255),b
  1496  000F24  0E00               	movlw	0
  1497  000F26  2367               	addwfc	(___fttol@lval+1)& (0+255),f,b
  1498  000F28  2368               	addwfc	(___fttol@lval+2)& (0+255),f,b
  1499  000F2A  2369               	addwfc	(___fttol@lval+3)& (0+255),f,b
  1500  000F2C                     l2383:
  1501                           
  1502                           ; BSR set to: 0
  1503  000F2C  C066  F047         	movff	___fttol@lval,?___fttol
  1504  000F30  C067  F048         	movff	___fttol@lval+1,?___fttol+1
  1505  000F34  C068  F049         	movff	___fttol@lval+2,?___fttol+2
  1506  000F38  C069  F04A         	movff	___fttol@lval+3,?___fttol+3
  1507  000F3C  0012               	return	
  1508  000F3E                     __end_of___fttol:
  1509                           	opt stack 0
  1510                           tblptru	equ	0xFF8
  1511                           status	equ	0xFD8
  1512                           
  1513 ;; *************** function ___ftneg *****************
  1514 ;; Defined at:
  1515 ;;		line 15 in file "D:\Atmel\xc8\sources\common\ftneg.c"
  1516 ;; Parameters:    Size  Location     Type
  1517 ;;  f1              3   40[COMRAM] float 
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;		None
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  3   40[COMRAM] float 
  1522 ;; Registers used:
  1523 ;;		wreg, status,2, status,0
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1529 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1532 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1533 ;;Total ram usage:        3 bytes
  1534 ;; Hardware stack levels used:    1
  1535 ;; Hardware stack levels required when called:    3
  1536 ;; This function calls:
  1537 ;;		Nothing
  1538 ;; This function is called by:
  1539 ;;		_main
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           	psect	text3
  1544  00139E                     __ptext3:
  1545                           	opt stack 0
  1546  00139E                     ___ftneg:
  1547                           	opt stack 27
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;incstack = 0
  1551  00139E  5029               	movf	___ftneg@f1,w,c
  1552  0013A0  102A               	iorwf	___ftneg@f1+1,w,c
  1553  0013A2  102B               	iorwf	___ftneg@f1+2,w,c
  1554  0013A4  B4D8               	btfsc	status,2,c
  1555  0013A6  D006               	goto	l778
  1556  0013A8  0E00               	movlw	0
  1557  0013AA  1A29               	xorwf	___ftneg@f1,f,c
  1558  0013AC  0E00               	movlw	0
  1559  0013AE  1A2A               	xorwf	___ftneg@f1+1,f,c
  1560  0013B0  0E80               	movlw	128
  1561  0013B2  1A2B               	xorwf	___ftneg@f1+2,f,c
  1562  0013B4                     l778:
  1563  0013B4  C029  F029         	movff	___ftneg@f1,?___ftneg
  1564  0013B8  C02A  F02A         	movff	___ftneg@f1+1,?___ftneg+1
  1565  0013BC  C02B  F02B         	movff	___ftneg@f1+2,?___ftneg+2
  1566  0013C0  0012               	return		;funcret
  1567  0013C2                     __end_of___ftneg:
  1568                           	opt stack 0
  1569                           tblptru	equ	0xFF8
  1570                           status	equ	0xFD8
  1571                           
  1572 ;; *************** function ___ftmul *****************
  1573 ;; Defined at:
  1574 ;;		line 62 in file "D:\Atmel\xc8\sources\common\ftmul.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;  f1              3   25[COMRAM] float 
  1577 ;;  f2              3   28[COMRAM] float 
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;  f3_as_produc    3   35[COMRAM] unsigned um
  1580 ;;  sign            1   39[COMRAM] unsigned char 
  1581 ;;  cntr            1   38[COMRAM] unsigned char 
  1582 ;;  exp             1   34[COMRAM] unsigned char 
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  3   25[COMRAM] float 
  1585 ;; Registers used:
  1586 ;;		wreg, status,2, status,0, cstack
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1592 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1593 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1594 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1595 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1596 ;;Total ram usage:       15 bytes
  1597 ;; Hardware stack levels used:    1
  1598 ;; Hardware stack levels required when called:    4
  1599 ;; This function calls:
  1600 ;;		___ftpack
  1601 ;; This function is called by:
  1602 ;;		_main
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           	psect	text4
  1607  000F3E                     __ptext4:
  1608                           	opt stack 0
  1609  000F3E                     ___ftmul:
  1610                           	opt stack 26
  1611                           
  1612                           ;incstack = 0
  1613  000F3E  C01C  F020         	movff	___ftmul@f1+2,??___ftmul
  1614  000F42  6A21               	clrf	(??___ftmul+1)& (0+255),c
  1615  000F44  6A22               	clrf	(??___ftmul+2)& (0+255),c
  1616  000F46  341B               	rlcf	___ftmul@f1+1,w,c
  1617  000F48  3620               	rlcf	??___ftmul& (0+255),f,c
  1618  000F4A  E301               	bnc	u1201
  1619  000F4C  8021               	bsf	(??___ftmul+1)& (0+255),0,c
  1620  000F4E                     u1201:
  1621  000F4E  5020               	movf	??___ftmul,w,c
  1622  000F50  6E23               	movwf	___ftmul@exp,c
  1623  000F52  5023               	movf	___ftmul@exp,w,c
  1624  000F54  A4D8               	btfss	status,2,c
  1625  000F56  D007               	goto	l2189
  1626  000F58  0E00               	movlw	0
  1627  000F5A  6E1A               	movwf	?___ftmul,c
  1628  000F5C  0E00               	movlw	0
  1629  000F5E  6E1B               	movwf	?___ftmul+1,c
  1630  000F60  0E00               	movlw	0
  1631  000F62  6E1C               	movwf	?___ftmul+2,c
  1632  000F64  0012               	return	
  1633  000F66                     l2189:
  1634  000F66  C01F  F020         	movff	___ftmul@f2+2,??___ftmul
  1635  000F6A  6A21               	clrf	(??___ftmul+1)& (0+255),c
  1636  000F6C  6A22               	clrf	(??___ftmul+2)& (0+255),c
  1637  000F6E  341E               	rlcf	___ftmul@f2+1,w,c
  1638  000F70  3620               	rlcf	??___ftmul& (0+255),f,c
  1639  000F72  E301               	bnc	u1221
  1640  000F74  8021               	bsf	(??___ftmul+1)& (0+255),0,c
  1641  000F76                     u1221:
  1642  000F76  5020               	movf	??___ftmul,w,c
  1643  000F78  6E28               	movwf	___ftmul@sign,c
  1644  000F7A  5028               	movf	___ftmul@sign,w,c
  1645  000F7C  A4D8               	btfss	status,2,c
  1646  000F7E  D007               	goto	l2195
  1647  000F80  0E00               	movlw	0
  1648  000F82  6E1A               	movwf	?___ftmul,c
  1649  000F84  0E00               	movlw	0
  1650  000F86  6E1B               	movwf	?___ftmul+1,c
  1651  000F88  0E00               	movlw	0
  1652  000F8A  6E1C               	movwf	?___ftmul+2,c
  1653  000F8C  0012               	return	
  1654  000F8E                     l2195:
  1655  000F8E  5028               	movf	___ftmul@sign,w,c
  1656  000F90  0F7B               	addlw	123
  1657  000F92  2623               	addwf	___ftmul@exp,f,c
  1658  000F94  C01C  F028         	movff	___ftmul@f1+2,___ftmul@sign
  1659  000F98  501F               	movf	___ftmul@f2+2,w,c
  1660  000F9A  1A28               	xorwf	___ftmul@sign,f,c
  1661  000F9C  0E80               	movlw	128
  1662  000F9E  1628               	andwf	___ftmul@sign,f,c
  1663  000FA0  8E1B               	bsf	___ftmul@f1+1,7,c
  1664  000FA2  8E1E               	bsf	___ftmul@f2+1,7,c
  1665  000FA4  0EFF               	movlw	255
  1666  000FA6  161D               	andwf	___ftmul@f2,f,c
  1667  000FA8  0EFF               	movlw	255
  1668  000FAA  161E               	andwf	___ftmul@f2+1,f,c
  1669  000FAC  0E00               	movlw	0
  1670  000FAE  161F               	andwf	___ftmul@f2+2,f,c
  1671  000FB0  0E00               	movlw	0
  1672  000FB2  6E24               	movwf	___ftmul@f3_as_product,c
  1673  000FB4  0E00               	movlw	0
  1674  000FB6  6E25               	movwf	___ftmul@f3_as_product+1,c
  1675  000FB8  0E00               	movlw	0
  1676  000FBA  6E26               	movwf	___ftmul@f3_as_product+2,c
  1677  000FBC  0E07               	movlw	7
  1678  000FBE  6E27               	movwf	___ftmul@cntr,c
  1679  000FC0                     l2209:
  1680  000FC0  A01A               	btfss	___ftmul@f1,0,c
  1681  000FC2  D006               	goto	l2213
  1682  000FC4  501D               	movf	___ftmul@f2,w,c
  1683  000FC6  2624               	addwf	___ftmul@f3_as_product,f,c
  1684  000FC8  501E               	movf	___ftmul@f2+1,w,c
  1685  000FCA  2225               	addwfc	___ftmul@f3_as_product+1,f,c
  1686  000FCC  501F               	movf	___ftmul@f2+2,w,c
  1687  000FCE  2226               	addwfc	___ftmul@f3_as_product+2,f,c
  1688  000FD0                     l2213:
  1689  000FD0  90D8               	bcf	status,0,c
  1690  000FD2  321C               	rrcf	___ftmul@f1+2,f,c
  1691  000FD4  321B               	rrcf	___ftmul@f1+1,f,c
  1692  000FD6  321A               	rrcf	___ftmul@f1,f,c
  1693  000FD8  90D8               	bcf	status,0,c
  1694  000FDA  361D               	rlcf	___ftmul@f2,f,c
  1695  000FDC  361E               	rlcf	___ftmul@f2+1,f,c
  1696  000FDE  361F               	rlcf	___ftmul@f2+2,f,c
  1697  000FE0  2E27               	decfsz	___ftmul@cntr,f,c
  1698  000FE2  D7EE               	goto	l2209
  1699  000FE4  0E09               	movlw	9
  1700  000FE6  6E27               	movwf	___ftmul@cntr,c
  1701  000FE8                     l2219:
  1702  000FE8  A01A               	btfss	___ftmul@f1,0,c
  1703  000FEA  D006               	goto	l2223
  1704  000FEC  501D               	movf	___ftmul@f2,w,c
  1705  000FEE  2624               	addwf	___ftmul@f3_as_product,f,c
  1706  000FF0  501E               	movf	___ftmul@f2+1,w,c
  1707  000FF2  2225               	addwfc	___ftmul@f3_as_product+1,f,c
  1708  000FF4  501F               	movf	___ftmul@f2+2,w,c
  1709  000FF6  2226               	addwfc	___ftmul@f3_as_product+2,f,c
  1710  000FF8                     l2223:
  1711  000FF8  90D8               	bcf	status,0,c
  1712  000FFA  321C               	rrcf	___ftmul@f1+2,f,c
  1713  000FFC  321B               	rrcf	___ftmul@f1+1,f,c
  1714  000FFE  321A               	rrcf	___ftmul@f1,f,c
  1715  001000  90D8               	bcf	status,0,c
  1716  001002  3226               	rrcf	___ftmul@f3_as_product+2,f,c
  1717  001004  3225               	rrcf	___ftmul@f3_as_product+1,f,c
  1718  001006  3224               	rrcf	___ftmul@f3_as_product,f,c
  1719  001008  2E27               	decfsz	___ftmul@cntr,f,c
  1720  00100A  D7EE               	goto	l2219
  1721  00100C  C024  F00F         	movff	___ftmul@f3_as_product,___ftpack@arg
  1722  001010  C025  F010         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1723  001014  C026  F011         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1724  001018  C023  F012         	movff	___ftmul@exp,___ftpack@exp
  1725  00101C  C028  F013         	movff	___ftmul@sign,___ftpack@sign
  1726  001020  EC03  F009         	call	___ftpack	;wreg free
  1727  001024  C00F  F01A         	movff	?___ftpack,?___ftmul
  1728  001028  C010  F01B         	movff	?___ftpack+1,?___ftmul+1
  1729  00102C  C011  F01C         	movff	?___ftpack+2,?___ftmul+2
  1730  001030  0012               	return	
  1731  001032                     __end_of___ftmul:
  1732                           	opt stack 0
  1733                           tblptru	equ	0xFF8
  1734                           status	equ	0xFD8
  1735                           
  1736 ;; *************** function ___ftdiv *****************
  1737 ;; Defined at:
  1738 ;;		line 54 in file "D:\Atmel\xc8\sources\common\ftdiv.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;  f1              3   55[COMRAM] float 
  1741 ;;  f2              3   58[COMRAM] float 
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;  f3              3   65[COMRAM] float 
  1744 ;;  sign            1   69[COMRAM] unsigned char 
  1745 ;;  exp             1   68[COMRAM] unsigned char 
  1746 ;;  cntr            1   64[COMRAM] unsigned char 
  1747 ;; Return value:  Size  Location     Type
  1748 ;;                  3   55[COMRAM] float 
  1749 ;; Registers used:
  1750 ;;		wreg, status,2, status,0, cstack
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1756 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1757 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1758 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1759 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1760 ;;Total ram usage:       15 bytes
  1761 ;; Hardware stack levels used:    1
  1762 ;; Hardware stack levels required when called:    4
  1763 ;; This function calls:
  1764 ;;		___ftpack
  1765 ;; This function is called by:
  1766 ;;		_main
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           	psect	text5
  1771  001120                     __ptext5:
  1772                           	opt stack 0
  1773  001120                     ___ftdiv:
  1774                           	opt stack 26
  1775                           
  1776                           ;incstack = 0
  1777  001120  C03A  F03E         	movff	___ftdiv@f1+2,??___ftdiv
  1778  001124  6A3F               	clrf	(??___ftdiv+1)& (0+255),c
  1779  001126  6A40               	clrf	(??___ftdiv+2)& (0+255),c
  1780  001128  3439               	rlcf	___ftdiv@f1+1,w,c
  1781  00112A  363E               	rlcf	??___ftdiv& (0+255),f,c
  1782  00112C  E301               	bnc	u1151
  1783  00112E  803F               	bsf	(??___ftdiv+1)& (0+255),0,c
  1784  001130                     u1151:
  1785  001130  503E               	movf	??___ftdiv,w,c
  1786  001132  6E45               	movwf	___ftdiv@exp,c
  1787  001134  5045               	movf	___ftdiv@exp,w,c
  1788  001136  A4D8               	btfss	status,2,c
  1789  001138  D007               	goto	l2143
  1790  00113A  0E00               	movlw	0
  1791  00113C  6E38               	movwf	?___ftdiv,c
  1792  00113E  0E00               	movlw	0
  1793  001140  6E39               	movwf	?___ftdiv+1,c
  1794  001142  0E00               	movlw	0
  1795  001144  6E3A               	movwf	?___ftdiv+2,c
  1796  001146  0012               	return	
  1797  001148                     l2143:
  1798  001148  C03D  F03E         	movff	___ftdiv@f2+2,??___ftdiv
  1799  00114C  6A3F               	clrf	(??___ftdiv+1)& (0+255),c
  1800  00114E  6A40               	clrf	(??___ftdiv+2)& (0+255),c
  1801  001150  343C               	rlcf	___ftdiv@f2+1,w,c
  1802  001152  363E               	rlcf	??___ftdiv& (0+255),f,c
  1803  001154  E301               	bnc	u1171
  1804  001156  803F               	bsf	(??___ftdiv+1)& (0+255),0,c
  1805  001158                     u1171:
  1806  001158  503E               	movf	??___ftdiv,w,c
  1807  00115A  6E46               	movwf	___ftdiv@sign,c
  1808  00115C  5046               	movf	___ftdiv@sign,w,c
  1809  00115E  A4D8               	btfss	status,2,c
  1810  001160  D007               	goto	l2149
  1811  001162  0E00               	movlw	0
  1812  001164  6E38               	movwf	?___ftdiv,c
  1813  001166  0E00               	movlw	0
  1814  001168  6E39               	movwf	?___ftdiv+1,c
  1815  00116A  0E00               	movlw	0
  1816  00116C  6E3A               	movwf	?___ftdiv+2,c
  1817  00116E  0012               	return	
  1818  001170                     l2149:
  1819  001170  0E00               	movlw	0
  1820  001172  6E42               	movwf	___ftdiv@f3,c
  1821  001174  0E00               	movlw	0
  1822  001176  6E43               	movwf	___ftdiv@f3+1,c
  1823  001178  0E00               	movlw	0
  1824  00117A  6E44               	movwf	___ftdiv@f3+2,c
  1825  00117C  5046               	movf	___ftdiv@sign,w,c
  1826  00117E  0F89               	addlw	137
  1827  001180  5E45               	subwf	___ftdiv@exp,f,c
  1828  001182  C03A  F046         	movff	___ftdiv@f1+2,___ftdiv@sign
  1829  001186  503D               	movf	___ftdiv@f2+2,w,c
  1830  001188  1A46               	xorwf	___ftdiv@sign,f,c
  1831  00118A  0E80               	movlw	128
  1832  00118C  1646               	andwf	___ftdiv@sign,f,c
  1833  00118E  8E39               	bsf	___ftdiv@f1+1,7,c
  1834  001190  0EFF               	movlw	255
  1835  001192  1638               	andwf	___ftdiv@f1,f,c
  1836  001194  0EFF               	movlw	255
  1837  001196  1639               	andwf	___ftdiv@f1+1,f,c
  1838  001198  0E00               	movlw	0
  1839  00119A  163A               	andwf	___ftdiv@f1+2,f,c
  1840  00119C  8E3C               	bsf	___ftdiv@f2+1,7,c
  1841  00119E  0EFF               	movlw	255
  1842  0011A0  163B               	andwf	___ftdiv@f2,f,c
  1843  0011A2  0EFF               	movlw	255
  1844  0011A4  163C               	andwf	___ftdiv@f2+1,f,c
  1845  0011A6  0E00               	movlw	0
  1846  0011A8  163D               	andwf	___ftdiv@f2+2,f,c
  1847  0011AA  0E18               	movlw	24
  1848  0011AC  6E41               	movwf	___ftdiv@cntr,c
  1849  0011AE                     l2169:
  1850  0011AE  90D8               	bcf	status,0,c
  1851  0011B0  3642               	rlcf	___ftdiv@f3,f,c
  1852  0011B2  3643               	rlcf	___ftdiv@f3+1,f,c
  1853  0011B4  3644               	rlcf	___ftdiv@f3+2,f,c
  1854  0011B6  503B               	movf	___ftdiv@f2,w,c
  1855  0011B8  5C38               	subwf	___ftdiv@f1,w,c
  1856  0011BA  503C               	movf	___ftdiv@f2+1,w,c
  1857  0011BC  5839               	subwfb	___ftdiv@f1+1,w,c
  1858  0011BE  503D               	movf	___ftdiv@f2+2,w,c
  1859  0011C0  583A               	subwfb	___ftdiv@f1+2,w,c
  1860  0011C2  A0D8               	btfss	status,0,c
  1861  0011C4  D007               	goto	l756
  1862  0011C6  503B               	movf	___ftdiv@f2,w,c
  1863  0011C8  5E38               	subwf	___ftdiv@f1,f,c
  1864  0011CA  503C               	movf	___ftdiv@f2+1,w,c
  1865  0011CC  5A39               	subwfb	___ftdiv@f1+1,f,c
  1866  0011CE  503D               	movf	___ftdiv@f2+2,w,c
  1867  0011D0  5A3A               	subwfb	___ftdiv@f1+2,f,c
  1868  0011D2  8042               	bsf	___ftdiv@f3,0,c
  1869  0011D4                     l756:
  1870  0011D4  90D8               	bcf	status,0,c
  1871  0011D6  3638               	rlcf	___ftdiv@f1,f,c
  1872  0011D8  3639               	rlcf	___ftdiv@f1+1,f,c
  1873  0011DA  363A               	rlcf	___ftdiv@f1+2,f,c
  1874  0011DC  2E41               	decfsz	___ftdiv@cntr,f,c
  1875  0011DE  D7E7               	goto	l2169
  1876  0011E0  C042  F00F         	movff	___ftdiv@f3,___ftpack@arg
  1877  0011E4  C043  F010         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1878  0011E8  C044  F011         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1879  0011EC  C045  F012         	movff	___ftdiv@exp,___ftpack@exp
  1880  0011F0  C046  F013         	movff	___ftdiv@sign,___ftpack@sign
  1881  0011F4  EC03  F009         	call	___ftpack	;wreg free
  1882  0011F8  C00F  F038         	movff	?___ftpack,?___ftdiv
  1883  0011FC  C010  F039         	movff	?___ftpack+1,?___ftdiv+1
  1884  001200  C011  F03A         	movff	?___ftpack+2,?___ftdiv+2
  1885  001204  0012               	return	
  1886  001206                     __end_of___ftdiv:
  1887                           	opt stack 0
  1888                           tblptru	equ	0xFF8
  1889                           status	equ	0xFD8
  1890                           
  1891 ;; *************** function ___ftadd *****************
  1892 ;; Defined at:
  1893 ;;		line 86 in file "D:\Atmel\xc8\sources\common\ftadd.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;  f1              3   43[COMRAM] float 
  1896 ;;  f2              3   46[COMRAM] float 
  1897 ;; Auto vars:     Size  Location     Type
  1898 ;;  exp1            1   54[COMRAM] unsigned char 
  1899 ;;  exp2            1   53[COMRAM] unsigned char 
  1900 ;;  sign            1   52[COMRAM] unsigned char 
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  3   43[COMRAM] float 
  1903 ;; Registers used:
  1904 ;;		wreg, status,2, status,0, cstack
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1910 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1911 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1912 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1913 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1914 ;;Total ram usage:       12 bytes
  1915 ;; Hardware stack levels used:    1
  1916 ;; Hardware stack levels required when called:    4
  1917 ;; This function calls:
  1918 ;;		___ftpack
  1919 ;; This function is called by:
  1920 ;;		_main
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           	psect	text6
  1925  000AC6                     __ptext6:
  1926                           	opt stack 0
  1927  000AC6                     ___ftadd:
  1928                           	opt stack 26
  1929                           
  1930                           ;incstack = 0
  1931  000AC6  C02E  F032         	movff	___ftadd@f1+2,??___ftadd
  1932  000ACA  6A33               	clrf	(??___ftadd+1)& (0+255),c
  1933  000ACC  6A34               	clrf	(??___ftadd+2)& (0+255),c
  1934  000ACE  342D               	rlcf	___ftadd@f1+1,w,c
  1935  000AD0  3632               	rlcf	??___ftadd& (0+255),f,c
  1936  000AD2  E301               	bnc	u941
  1937  000AD4  8033               	bsf	(??___ftadd+1)& (0+255),0,c
  1938  000AD6                     u941:
  1939  000AD6  5032               	movf	??___ftadd,w,c
  1940  000AD8  6E37               	movwf	___ftadd@exp1,c
  1941  000ADA  C031  F032         	movff	___ftadd@f2+2,??___ftadd
  1942  000ADE  6A33               	clrf	(??___ftadd+1)& (0+255),c
  1943  000AE0  6A34               	clrf	(??___ftadd+2)& (0+255),c
  1944  000AE2  3430               	rlcf	___ftadd@f2+1,w,c
  1945  000AE4  3632               	rlcf	??___ftadd& (0+255),f,c
  1946  000AE6  E301               	bnc	u951
  1947  000AE8  8033               	bsf	(??___ftadd+1)& (0+255),0,c
  1948  000AEA                     u951:
  1949  000AEA  5032               	movf	??___ftadd,w,c
  1950  000AEC  6E36               	movwf	___ftadd@exp2,c
  1951  000AEE  5037               	movf	___ftadd@exp1,w,c
  1952  000AF0  B4D8               	btfsc	status,2,c
  1953  000AF2  D00B               	goto	l721
  1954  000AF4  5036               	movf	___ftadd@exp2,w,c
  1955  000AF6  5C37               	subwf	___ftadd@exp1,w,c
  1956  000AF8  B0D8               	btfsc	status,0,c
  1957  000AFA  D00E               	goto	l2075
  1958  000AFC  5037               	movf	___ftadd@exp1,w,c
  1959  000AFE  0800               	sublw	0
  1960  000B00  2436               	addwf	___ftadd@exp2,w,c
  1961  000B02  6E32               	movwf	??___ftadd& (0+255),c
  1962  000B04  0E18               	movlw	24
  1963  000B06  6432               	cpfsgt	??___ftadd,c
  1964  000B08  D007               	goto	l2075
  1965  000B0A                     l721:
  1966  000B0A  C02F  F02C         	movff	___ftadd@f2,?___ftadd
  1967  000B0E  C030  F02D         	movff	___ftadd@f2+1,?___ftadd+1
  1968  000B12  C031  F02E         	movff	___ftadd@f2+2,?___ftadd+2
  1969  000B16  0012               	return	
  1970  000B18                     l2075:
  1971  000B18  5036               	movf	___ftadd@exp2,w,c
  1972  000B1A  B4D8               	btfsc	status,2,c
  1973  000B1C  D00B               	goto	l725
  1974  000B1E  5037               	movf	___ftadd@exp1,w,c
  1975  000B20  5C36               	subwf	___ftadd@exp2,w,c
  1976  000B22  B0D8               	btfsc	status,0,c
  1977  000B24  D00E               	goto	l2081
  1978  000B26  5036               	movf	___ftadd@exp2,w,c
  1979  000B28  0800               	sublw	0
  1980  000B2A  2437               	addwf	___ftadd@exp1,w,c
  1981  000B2C  6E32               	movwf	??___ftadd& (0+255),c
  1982  000B2E  0E18               	movlw	24
  1983  000B30  6432               	cpfsgt	??___ftadd,c
  1984  000B32  D007               	goto	l2081
  1985  000B34                     l725:
  1986  000B34  C02C  F02C         	movff	___ftadd@f1,?___ftadd
  1987  000B38  C02D  F02D         	movff	___ftadd@f1+1,?___ftadd+1
  1988  000B3C  C02E  F02E         	movff	___ftadd@f1+2,?___ftadd+2
  1989  000B40  0012               	return	
  1990  000B42                     l2081:
  1991  000B42  0E06               	movlw	6
  1992  000B44  6E35               	movwf	___ftadd@sign,c
  1993  000B46  BE2E               	btfsc	___ftadd@f1+2,7,c
  1994  000B48  8E35               	bsf	___ftadd@sign,7,c
  1995  000B4A  BE31               	btfsc	___ftadd@f2+2,7,c
  1996  000B4C  8C35               	bsf	___ftadd@sign,6,c
  1997  000B4E  8E2D               	bsf	___ftadd@f1+1,7,c
  1998  000B50  0EFF               	movlw	255
  1999  000B52  162C               	andwf	___ftadd@f1,f,c
  2000  000B54  0EFF               	movlw	255
  2001  000B56  162D               	andwf	___ftadd@f1+1,f,c
  2002  000B58  0E00               	movlw	0
  2003  000B5A  162E               	andwf	___ftadd@f1+2,f,c
  2004  000B5C  8E30               	bsf	___ftadd@f2+1,7,c
  2005  000B5E  0EFF               	movlw	255
  2006  000B60  162F               	andwf	___ftadd@f2,f,c
  2007  000B62  0EFF               	movlw	255
  2008  000B64  1630               	andwf	___ftadd@f2+1,f,c
  2009  000B66  0E00               	movlw	0
  2010  000B68  1631               	andwf	___ftadd@f2+2,f,c
  2011  000B6A  5036               	movf	___ftadd@exp2,w,c
  2012  000B6C  5C37               	subwf	___ftadd@exp1,w,c
  2013  000B6E  B0D8               	btfsc	status,0,c
  2014  000B70  D01B               	goto	l2107
  2015  000B72                     l2097:
  2016  000B72  90D8               	bcf	status,0,c
  2017  000B74  362F               	rlcf	___ftadd@f2,f,c
  2018  000B76  3630               	rlcf	___ftadd@f2+1,f,c
  2019  000B78  3631               	rlcf	___ftadd@f2+2,f,c
  2020  000B7A  0636               	decf	___ftadd@exp2,f,c
  2021  000B7C  5037               	movf	___ftadd@exp1,w,c
  2022  000B7E  1836               	xorwf	___ftadd@exp2,w,c
  2023  000B80  B4D8               	btfsc	status,2,c
  2024  000B82  D00D               	goto	l2105
  2025  000B84  0635               	decf	___ftadd@sign,f,c
  2026  000B86  C035  F032         	movff	___ftadd@sign,??___ftadd
  2027  000B8A  0E07               	movlw	7
  2028  000B8C  1632               	andwf	??___ftadd,f,c
  2029  000B8E  B4D8               	btfsc	status,2,c
  2030  000B90  D006               	goto	l2105
  2031  000B92  D7EF               	goto	l2097
  2032  000B94                     l2103:
  2033  000B94  90D8               	bcf	status,0,c
  2034  000B96  322E               	rrcf	___ftadd@f1+2,f,c
  2035  000B98  322D               	rrcf	___ftadd@f1+1,f,c
  2036  000B9A  322C               	rrcf	___ftadd@f1,f,c
  2037  000B9C  2A37               	incf	___ftadd@exp1,f,c
  2038  000B9E                     l2105:
  2039  000B9E  5036               	movf	___ftadd@exp2,w,c
  2040  000BA0  1837               	xorwf	___ftadd@exp1,w,c
  2041  000BA2  B4D8               	btfsc	status,2,c
  2042  000BA4  D01F               	goto	l736
  2043  000BA6  D7F6               	goto	l2103
  2044  000BA8                     l2107:
  2045  000BA8  5037               	movf	___ftadd@exp1,w,c
  2046  000BAA  5C36               	subwf	___ftadd@exp2,w,c
  2047  000BAC  B0D8               	btfsc	status,0,c
  2048  000BAE  D01A               	goto	l736
  2049  000BB0                     l2109:
  2050  000BB0  90D8               	bcf	status,0,c
  2051  000BB2  362C               	rlcf	___ftadd@f1,f,c
  2052  000BB4  362D               	rlcf	___ftadd@f1+1,f,c
  2053  000BB6  362E               	rlcf	___ftadd@f1+2,f,c
  2054  000BB8  0637               	decf	___ftadd@exp1,f,c
  2055  000BBA  5037               	movf	___ftadd@exp1,w,c
  2056  000BBC  1836               	xorwf	___ftadd@exp2,w,c
  2057  000BBE  B4D8               	btfsc	status,2,c
  2058  000BC0  D00D               	goto	l2117
  2059  000BC2  0635               	decf	___ftadd@sign,f,c
  2060  000BC4  C035  F032         	movff	___ftadd@sign,??___ftadd
  2061  000BC8  0E07               	movlw	7
  2062  000BCA  1632               	andwf	??___ftadd,f,c
  2063  000BCC  B4D8               	btfsc	status,2,c
  2064  000BCE  D006               	goto	l2117
  2065  000BD0  D7EF               	goto	l2109
  2066  000BD2                     l2115:
  2067  000BD2  90D8               	bcf	status,0,c
  2068  000BD4  3231               	rrcf	___ftadd@f2+2,f,c
  2069  000BD6  3230               	rrcf	___ftadd@f2+1,f,c
  2070  000BD8  322F               	rrcf	___ftadd@f2,f,c
  2071  000BDA  2A36               	incf	___ftadd@exp2,f,c
  2072  000BDC                     l2117:
  2073  000BDC  5036               	movf	___ftadd@exp2,w,c
  2074  000BDE  1837               	xorwf	___ftadd@exp1,w,c
  2075  000BE0  A4D8               	btfss	status,2,c
  2076  000BE2  D7F7               	goto	l2115
  2077  000BE4                     l736:
  2078  000BE4  AE35               	btfss	___ftadd@sign,7,c
  2079  000BE6  D00C               	goto	l745
  2080  000BE8  0EFF               	movlw	255
  2081  000BEA  1A2C               	xorwf	___ftadd@f1,f,c
  2082  000BEC  0EFF               	movlw	255
  2083  000BEE  1A2D               	xorwf	___ftadd@f1+1,f,c
  2084  000BF0  0EFF               	movlw	255
  2085  000BF2  1A2E               	xorwf	___ftadd@f1+2,f,c
  2086  000BF4  0E01               	movlw	1
  2087  000BF6  262C               	addwf	___ftadd@f1,f,c
  2088  000BF8  0E00               	movlw	0
  2089  000BFA  222D               	addwfc	___ftadd@f1+1,f,c
  2090  000BFC  0E00               	movlw	0
  2091  000BFE  222E               	addwfc	___ftadd@f1+2,f,c
  2092  000C00                     l745:
  2093  000C00  AC35               	btfss	___ftadd@sign,6,c
  2094  000C02  D00C               	goto	l2123
  2095  000C04  0EFF               	movlw	255
  2096  000C06  1A2F               	xorwf	___ftadd@f2,f,c
  2097  000C08  0EFF               	movlw	255
  2098  000C0A  1A30               	xorwf	___ftadd@f2+1,f,c
  2099  000C0C  0EFF               	movlw	255
  2100  000C0E  1A31               	xorwf	___ftadd@f2+2,f,c
  2101  000C10  0E01               	movlw	1
  2102  000C12  262F               	addwf	___ftadd@f2,f,c
  2103  000C14  0E00               	movlw	0
  2104  000C16  2230               	addwfc	___ftadd@f2+1,f,c
  2105  000C18  0E00               	movlw	0
  2106  000C1A  2231               	addwfc	___ftadd@f2+2,f,c
  2107  000C1C                     l2123:
  2108  000C1C  0E00               	movlw	0
  2109  000C1E  6E35               	movwf	___ftadd@sign,c
  2110  000C20  502C               	movf	___ftadd@f1,w,c
  2111  000C22  262F               	addwf	___ftadd@f2,f,c
  2112  000C24  502D               	movf	___ftadd@f1+1,w,c
  2113  000C26  2230               	addwfc	___ftadd@f2+1,f,c
  2114  000C28  502E               	movf	___ftadd@f1+2,w,c
  2115  000C2A  2231               	addwfc	___ftadd@f2+2,f,c
  2116  000C2C  AE31               	btfss	___ftadd@f2+2,7,c
  2117  000C2E  D00E               	goto	l2133
  2118  000C30  0EFF               	movlw	255
  2119  000C32  1A2F               	xorwf	___ftadd@f2,f,c
  2120  000C34  0EFF               	movlw	255
  2121  000C36  1A30               	xorwf	___ftadd@f2+1,f,c
  2122  000C38  0EFF               	movlw	255
  2123  000C3A  1A31               	xorwf	___ftadd@f2+2,f,c
  2124  000C3C  0E01               	movlw	1
  2125  000C3E  262F               	addwf	___ftadd@f2,f,c
  2126  000C40  0E00               	movlw	0
  2127  000C42  2230               	addwfc	___ftadd@f2+1,f,c
  2128  000C44  0E00               	movlw	0
  2129  000C46  2231               	addwfc	___ftadd@f2+2,f,c
  2130  000C48  0E01               	movlw	1
  2131  000C4A  6E35               	movwf	___ftadd@sign,c
  2132  000C4C                     l2133:
  2133  000C4C  C02F  F00F         	movff	___ftadd@f2,___ftpack@arg
  2134  000C50  C030  F010         	movff	___ftadd@f2+1,___ftpack@arg+1
  2135  000C54  C031  F011         	movff	___ftadd@f2+2,___ftpack@arg+2
  2136  000C58  C037  F012         	movff	___ftadd@exp1,___ftpack@exp
  2137  000C5C  C035  F013         	movff	___ftadd@sign,___ftpack@sign
  2138  000C60  EC03  F009         	call	___ftpack	;wreg free
  2139  000C64  C00F  F02C         	movff	?___ftpack,?___ftadd
  2140  000C68  C010  F02D         	movff	?___ftpack+1,?___ftadd+1
  2141  000C6C  C011  F02E         	movff	?___ftpack+2,?___ftadd+2
  2142  000C70  0012               	return	
  2143  000C72                     __end_of___ftadd:
  2144                           	opt stack 0
  2145                           tblptru	equ	0xFF8
  2146                           status	equ	0xFD8
  2147                           
  2148 ;; *************** function ___ftpack *****************
  2149 ;; Defined at:
  2150 ;;		line 62 in file "D:\Atmel\xc8\sources\common\float.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;  arg             3   14[COMRAM] unsigned um
  2153 ;;  exp             1   17[COMRAM] unsigned char 
  2154 ;;  sign            1   18[COMRAM] unsigned char 
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;		None
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  3   14[COMRAM] float 
  2159 ;; Registers used:
  2160 ;;		wreg, status,2, status,0
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2166 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2168 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2169 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2170 ;;Total ram usage:        8 bytes
  2171 ;; Hardware stack levels used:    1
  2172 ;; Hardware stack levels required when called:    3
  2173 ;; This function calls:
  2174 ;;		Nothing
  2175 ;; This function is called by:
  2176 ;;		___ftadd
  2177 ;;		___ftdiv
  2178 ;;		___ftmul
  2179 ;;		___lwtoft
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           	psect	text7
  2184  001206                     __ptext7:
  2185                           	opt stack 0
  2186  001206                     ___ftpack:
  2187                           	opt stack 26
  2188                           
  2189                           ;incstack = 0
  2190  001206  5012               	movf	___ftpack@exp,w,c
  2191  001208  B4D8               	btfsc	status,2,c
  2192  00120A  D005               	goto	l1911
  2193  00120C  500F               	movf	___ftpack@arg,w,c
  2194  00120E  1010               	iorwf	___ftpack@arg+1,w,c
  2195  001210  1011               	iorwf	___ftpack@arg+2,w,c
  2196  001212  A4D8               	btfss	status,2,c
  2197  001214  D00C               	goto	l1917
  2198  001216                     l1911:
  2199  001216  0E00               	movlw	0
  2200  001218  6E0F               	movwf	?___ftpack,c
  2201  00121A  0E00               	movlw	0
  2202  00121C  6E10               	movwf	?___ftpack+1,c
  2203  00121E  0E00               	movlw	0
  2204  001220  6E11               	movwf	?___ftpack+2,c
  2205  001222  0012               	return	
  2206  001224                     l1915:
  2207  001224  2A12               	incf	___ftpack@exp,f,c
  2208  001226  90D8               	bcf	status,0,c
  2209  001228  3211               	rrcf	___ftpack@arg+2,f,c
  2210  00122A  3210               	rrcf	___ftpack@arg+1,f,c
  2211  00122C  320F               	rrcf	___ftpack@arg,f,c
  2212  00122E                     l1917:
  2213  00122E  0E00               	movlw	0
  2214  001230  140F               	andwf	___ftpack@arg,w,c
  2215  001232  6E14               	movwf	??___ftpack& (0+255),c
  2216  001234  0E00               	movlw	0
  2217  001236  1410               	andwf	___ftpack@arg+1,w,c
  2218  001238  6E15               	movwf	(??___ftpack+1)& (0+255),c
  2219  00123A  0EFE               	movlw	254
  2220  00123C  1411               	andwf	___ftpack@arg+2,w,c
  2221  00123E  6E16               	movwf	(??___ftpack+2)& (0+255),c
  2222  001240  5014               	movf	??___ftpack,w,c
  2223  001242  1015               	iorwf	??___ftpack+1,w,c
  2224  001244  1016               	iorwf	??___ftpack+2,w,c
  2225  001246  B4D8               	btfsc	status,2,c
  2226  001248  D00C               	goto	l1923
  2227  00124A  D7EC               	goto	l1915
  2228  00124C                     l1919:
  2229  00124C  2A12               	incf	___ftpack@exp,f,c
  2230  00124E  0E01               	movlw	1
  2231  001250  260F               	addwf	___ftpack@arg,f,c
  2232  001252  0E00               	movlw	0
  2233  001254  2210               	addwfc	___ftpack@arg+1,f,c
  2234  001256  0E00               	movlw	0
  2235  001258  2211               	addwfc	___ftpack@arg+2,f,c
  2236  00125A  90D8               	bcf	status,0,c
  2237  00125C  3211               	rrcf	___ftpack@arg+2,f,c
  2238  00125E  3210               	rrcf	___ftpack@arg+1,f,c
  2239  001260  320F               	rrcf	___ftpack@arg,f,c
  2240  001262                     l1923:
  2241  001262  0E00               	movlw	0
  2242  001264  140F               	andwf	___ftpack@arg,w,c
  2243  001266  6E14               	movwf	??___ftpack& (0+255),c
  2244  001268  0E00               	movlw	0
  2245  00126A  1410               	andwf	___ftpack@arg+1,w,c
  2246  00126C  6E15               	movwf	(??___ftpack+1)& (0+255),c
  2247  00126E  0EFF               	movlw	255
  2248  001270  1411               	andwf	___ftpack@arg+2,w,c
  2249  001272  6E16               	movwf	(??___ftpack+2)& (0+255),c
  2250  001274  5014               	movf	??___ftpack,w,c
  2251  001276  1015               	iorwf	??___ftpack+1,w,c
  2252  001278  1016               	iorwf	??___ftpack+2,w,c
  2253  00127A  B4D8               	btfsc	status,2,c
  2254  00127C  D006               	goto	l1927
  2255  00127E  D7E6               	goto	l1919
  2256  001280                     l1925:
  2257  001280  0612               	decf	___ftpack@exp,f,c
  2258  001282  90D8               	bcf	status,0,c
  2259  001284  360F               	rlcf	___ftpack@arg,f,c
  2260  001286  3610               	rlcf	___ftpack@arg+1,f,c
  2261  001288  3611               	rlcf	___ftpack@arg+2,f,c
  2262  00128A                     l1927:
  2263  00128A  BE10               	btfsc	___ftpack@arg+1,7,c
  2264  00128C  D003               	goto	l698
  2265  00128E  0E02               	movlw	2
  2266  001290  6012               	cpfslt	___ftpack@exp,c
  2267  001292  D7F6               	goto	l1925
  2268  001294                     l698:
  2269  001294  A012               	btfss	___ftpack@exp,0,c
  2270  001296  9E10               	bcf	___ftpack@arg+1,7,c
  2271  001298  90D8               	bcf	status,0,c
  2272  00129A  3212               	rrcf	___ftpack@exp,f,c
  2273  00129C  5012               	movf	___ftpack@exp,w,c
  2274  00129E  1211               	iorwf	___ftpack@arg+2,f,c
  2275  0012A0  5013               	movf	___ftpack@sign,w,c
  2276  0012A2  A4D8               	btfss	status,2,c
  2277  0012A4  8E11               	bsf	___ftpack@arg+2,7,c
  2278  0012A6  C00F  F00F         	movff	___ftpack@arg,?___ftpack
  2279  0012AA  C010  F010         	movff	___ftpack@arg+1,?___ftpack+1
  2280  0012AE  C011  F011         	movff	___ftpack@arg+2,?___ftpack+2
  2281  0012B2  0012               	return	
  2282  0012B4                     __end_of___ftpack:
  2283                           	opt stack 0
  2284                           tblptru	equ	0xFF8
  2285                           status	equ	0xFD8
  2286                           
  2287 ;; *************** function _SYSTEM_Initialize *****************
  2288 ;; Defined at:
  2289 ;;		line 111 in file "mcc_generated_files/mcc.c"
  2290 ;; Parameters:    Size  Location     Type
  2291 ;;		None
  2292 ;; Auto vars:     Size  Location     Type
  2293 ;;		None
  2294 ;; Return value:  Size  Location     Type
  2295 ;;                  1    wreg      void 
  2296 ;; Registers used:
  2297 ;;		wreg, status,2, status,0, cstack
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2307 ;;Total ram usage:        0 bytes
  2308 ;; Hardware stack levels used:    1
  2309 ;; Hardware stack levels required when called:    5
  2310 ;; This function calls:
  2311 ;;		_ADC_Initialize
  2312 ;;		_ECAN_Initialize
  2313 ;;		_INTERRUPT_Initialize
  2314 ;;		_OSCILLATOR_Initialize
  2315 ;;		_PIN_MANAGER_Initialize
  2316 ;;		_TMR1_Initialize
  2317 ;; This function is called by:
  2318 ;;		_main
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           	psect	text8
  2323  0013C2                     __ptext8:
  2324                           	opt stack 0
  2325  0013C2                     _SYSTEM_Initialize:
  2326                           	opt stack 25
  2327                           
  2328                           ;mcc.c: 114: INTERRUPT_Initialize();
  2329                           
  2330                           ;incstack = 0
  2331  0013C2  EC10  F00A         	call	_INTERRUPT_Initialize	;wreg free
  2332                           
  2333                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  2334  0013C6  EC76  F009         	call	_PIN_MANAGER_Initialize	;wreg free
  2335                           
  2336                           ;mcc.c: 116: OSCILLATOR_Initialize();
  2337  0013CA  ECF9  F009         	call	_OSCILLATOR_Initialize	;wreg free
  2338                           
  2339                           ;mcc.c: 117: TMR1_Initialize();
  2340  0013CE  EC5A  F009         	call	_TMR1_Initialize	;wreg free
  2341                           
  2342                           ;mcc.c: 118: ADC_Initialize();
  2343  0013D2  ECEE  F009         	call	_ADC_Initialize	;wreg free
  2344                           
  2345                           ;mcc.c: 119: ECAN_Initialize();
  2346  0013D6  EC19  F008         	call	_ECAN_Initialize	;wreg free
  2347  0013DA  0012               	return		;funcret
  2348  0013DC                     __end_of_SYSTEM_Initialize:
  2349                           	opt stack 0
  2350                           tblptru	equ	0xFF8
  2351                           status	equ	0xFD8
  2352                           
  2353 ;; *************** function _TMR1_Initialize *****************
  2354 ;; Defined at:
  2355 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;		None
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;		None
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  1    wreg      void 
  2362 ;; Registers used:
  2363 ;;		wreg, status,2, status,0, cstack
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2371 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2372 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2373 ;;Total ram usage:        2 bytes
  2374 ;; Hardware stack levels used:    1
  2375 ;; Hardware stack levels required when called:    4
  2376 ;; This function calls:
  2377 ;;		_TMR1_SetInterruptHandler
  2378 ;;		_TMR1_StartTimer
  2379 ;; This function is called by:
  2380 ;;		_SYSTEM_Initialize
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384                           	psect	text9
  2385  0012B4                     __ptext9:
  2386                           	opt stack 0
  2387  0012B4                     _TMR1_Initialize:
  2388                           	opt stack 25
  2389                           
  2390                           ;tmr1.c: 68: T1CON = 0x40;
  2391                           
  2392                           ;incstack = 0
  2393  0012B4  0E40               	movlw	64
  2394  0012B6  6ECD               	movwf	4045,c	;volatile
  2395                           
  2396                           ;tmr1.c: 71: T1GCON = 0x00;
  2397  0012B8  0E00               	movlw	0
  2398  0012BA  6EAA               	movwf	4010,c	;volatile
  2399                           
  2400                           ;tmr1.c: 74: TMR1H = 0xFF;
  2401  0012BC  68CF               	setf	4047,c	;volatile
  2402                           
  2403                           ;tmr1.c: 77: TMR1L = 0xFF;
  2404  0012BE  68CE               	setf	4046,c	;volatile
  2405                           
  2406                           ;tmr1.c: 80: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  2407  0012C0  50CE               	movf	4046,w,c	;volatile
  2408  0012C2  CFCF F011          	movff	4047,??_TMR1_Initialize	;volatile
  2409  0012C6  6A12               	clrf	(??_TMR1_Initialize+1)& (0+255),c
  2410  0012C8  C011  F012         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  2411  0012CC  6A11               	clrf	??_TMR1_Initialize,c
  2412  0012CE  1011               	iorwf	??_TMR1_Initialize,w,c
  2413  0012D0  6E4D               	movwf	_timer1ReloadVal,c	;volatile
  2414  0012D2  5012               	movf	??_TMR1_Initialize+1,w,c
  2415  0012D4  6E4E               	movwf	_timer1ReloadVal+1,c	;volatile
  2416                           
  2417                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
  2418  0012D6  909E               	bcf	3998,0,c	;volatile
  2419                           
  2420                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
  2421  0012D8  809D               	bsf	3997,0,c	;volatile
  2422                           
  2423                           ;tmr1.c: 89: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  2424  0012DA  0E24               	movlw	low _TMR1_DefaultInterruptHandler
  2425  0012DC  6E0F               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
  2426  0012DE  0E14               	movlw	high _TMR1_DefaultInterruptHandler
  2427  0012E0  6E10               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
  2428  0012E2  EC09  F00A         	call	_TMR1_SetInterruptHandler	;wreg free
  2429                           
  2430                           ;tmr1.c: 92: TMR1_StartTimer();
  2431  0012E6  EC0E  F00A         	call	_TMR1_StartTimer	;wreg free
  2432  0012EA  0012               	return		;funcret
  2433  0012EC                     __end_of_TMR1_Initialize:
  2434                           	opt stack 0
  2435                           tblptru	equ	0xFF8
  2436                           status	equ	0xFD8
  2437                           
  2438 ;; *************** function _TMR1_StartTimer *****************
  2439 ;; Defined at:
  2440 ;;		line 95 in file "mcc_generated_files/tmr1.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;		None
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;		None
  2445 ;; Return value:  Size  Location     Type
  2446 ;;                  1    wreg      void 
  2447 ;; Registers used:
  2448 ;;		None
  2449 ;; Tracked objects:
  2450 ;;		On entry : 0/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2458 ;;Total ram usage:        0 bytes
  2459 ;; Hardware stack levels used:    1
  2460 ;; Hardware stack levels required when called:    3
  2461 ;; This function calls:
  2462 ;;		Nothing
  2463 ;; This function is called by:
  2464 ;;		_TMR1_Initialize
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468                           	psect	text10
  2469  00141C                     __ptext10:
  2470                           	opt stack 0
  2471  00141C                     _TMR1_StartTimer:
  2472                           	opt stack 25
  2473                           
  2474                           ;tmr1.c: 98: T1CONbits.TMR1ON = 1;
  2475                           
  2476                           ;incstack = 0
  2477  00141C  80CD               	bsf	4045,0,c	;volatile
  2478  00141E  0012               	return		;funcret
  2479  001420                     __end_of_TMR1_StartTimer:
  2480                           	opt stack 0
  2481                           tblptru	equ	0xFF8
  2482                           status	equ	0xFD8
  2483                           
  2484 ;; *************** function _TMR1_SetInterruptHandler *****************
  2485 ;; Defined at:
  2486 ;;		line 176 in file "mcc_generated_files/tmr1.c"
  2487 ;; Parameters:    Size  Location     Type
  2488 ;;  InterruptHan    2   14[COMRAM] PTR FTN()void 
  2489 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;		None
  2492 ;; Return value:  Size  Location     Type
  2493 ;;                  1    wreg      void 
  2494 ;; Registers used:
  2495 ;;		wreg, status,2, status,0
  2496 ;; Tracked objects:
  2497 ;;		On entry : 0/0
  2498 ;;		On exit  : 0/0
  2499 ;;		Unchanged: 0/0
  2500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2501 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2504 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2505 ;;Total ram usage:        2 bytes
  2506 ;; Hardware stack levels used:    1
  2507 ;; Hardware stack levels required when called:    3
  2508 ;; This function calls:
  2509 ;;		Nothing
  2510 ;; This function is called by:
  2511 ;;		_TMR1_Initialize
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515                           	psect	text11
  2516  001412                     __ptext11:
  2517                           	opt stack 0
  2518  001412                     _TMR1_SetInterruptHandler:
  2519                           	opt stack 25
  2520                           
  2521                           ;tmr1.c: 177: TMR1_InterruptHandler = InterruptHandler;
  2522                           
  2523                           ;incstack = 0
  2524  001412  C00F  F04B         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  2525  001416  C010  F04C         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  2526  00141A  0012               	return		;funcret
  2527  00141C                     __end_of_TMR1_SetInterruptHandler:
  2528                           	opt stack 0
  2529                           tblptru	equ	0xFF8
  2530                           status	equ	0xFD8
  2531                           
  2532 ;; *************** function _PIN_MANAGER_Initialize *****************
  2533 ;; Defined at:
  2534 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  2535 ;; Parameters:    Size  Location     Type
  2536 ;;		None
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;		None
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  1    wreg      void 
  2541 ;; Registers used:
  2542 ;;		wreg, status,2
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2552 ;;Total ram usage:        0 bytes
  2553 ;; Hardware stack levels used:    1
  2554 ;; Hardware stack levels required when called:    3
  2555 ;; This function calls:
  2556 ;;		Nothing
  2557 ;; This function is called by:
  2558 ;;		_SYSTEM_Initialize
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562                           	psect	text12
  2563  0012EC                     __ptext12:
  2564                           	opt stack 0
  2565  0012EC                     _PIN_MANAGER_Initialize:
  2566                           	opt stack 26
  2567                           
  2568                           ;pin_manager.c: 57: LATE = 0x00;
  2569                           
  2570                           ;incstack = 0
  2571  0012EC  0E00               	movlw	0
  2572  0012EE  6E8D               	movwf	3981,c	;volatile
  2573                           
  2574                           ;pin_manager.c: 58: LATD = 0x00;
  2575  0012F0  0E00               	movlw	0
  2576  0012F2  6E8C               	movwf	3980,c	;volatile
  2577                           
  2578                           ;pin_manager.c: 59: LATA = 0x00;
  2579  0012F4  0E00               	movlw	0
  2580  0012F6  6E89               	movwf	3977,c	;volatile
  2581                           
  2582                           ;pin_manager.c: 60: LATB = 0x00;
  2583  0012F8  0E00               	movlw	0
  2584  0012FA  6E8A               	movwf	3978,c	;volatile
  2585                           
  2586                           ;pin_manager.c: 61: LATC = 0x00;
  2587  0012FC  0E00               	movlw	0
  2588  0012FE  6E8B               	movwf	3979,c	;volatile
  2589                           
  2590                           ;pin_manager.c: 66: TRISE = 0x07;
  2591  001300  0E07               	movlw	7
  2592  001302  6E96               	movwf	3990,c	;volatile
  2593                           
  2594                           ;pin_manager.c: 67: TRISA = 0xEF;
  2595  001304  0EEF               	movlw	239
  2596  001306  6E92               	movwf	3986,c	;volatile
  2597                           
  2598                           ;pin_manager.c: 68: TRISB = 0xFB;
  2599  001308  0EFB               	movlw	251
  2600  00130A  6E93               	movwf	3987,c	;volatile
  2601                           
  2602                           ;pin_manager.c: 69: TRISC = 0xFF;
  2603  00130C  6894               	setf	3988,c	;volatile
  2604                           
  2605                           ;pin_manager.c: 70: TRISD = 0xFF;
  2606  00130E  6895               	setf	3989,c	;volatile
  2607                           
  2608                           ;pin_manager.c: 75: ANCON0 = 0xFF;
  2609  001310  010F               	movlb	15	; () banked
  2610  001312  695D               	setf	93,b	;volatile
  2611                           
  2612                           ;pin_manager.c: 76: ANCON1 = 0x7F;
  2613  001314  0E7F               	movlw	127
  2614  001316  010F               	movlb	15	; () banked
  2615  001318  6F5C               	movwf	92,b	;volatile
  2616                           
  2617                           ; BSR set to: 15
  2618                           ;pin_manager.c: 81: WPUB = 0xFF;
  2619  00131A  010F               	movlb	15	; () banked
  2620  00131C  695B               	setf	91,b	;volatile
  2621                           
  2622                           ; BSR set to: 15
  2623  00131E  0012               	return		;funcret
  2624  001320                     __end_of_PIN_MANAGER_Initialize:
  2625                           	opt stack 0
  2626                           tblptru	equ	0xFF8
  2627                           status	equ	0xFD8
  2628                           
  2629 ;; *************** function _OSCILLATOR_Initialize *****************
  2630 ;; Defined at:
  2631 ;;		line 122 in file "mcc_generated_files/mcc.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;		None
  2634 ;; Auto vars:     Size  Location     Type
  2635 ;;		None
  2636 ;; Return value:  Size  Location     Type
  2637 ;;                  1    wreg      void 
  2638 ;; Registers used:
  2639 ;;		wreg, status,2
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2649 ;;Total ram usage:        0 bytes
  2650 ;; Hardware stack levels used:    1
  2651 ;; Hardware stack levels required when called:    3
  2652 ;; This function calls:
  2653 ;;		Nothing
  2654 ;; This function is called by:
  2655 ;;		_SYSTEM_Initialize
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           	psect	text13
  2660  0013F2                     __ptext13:
  2661                           	opt stack 0
  2662  0013F2                     _OSCILLATOR_Initialize:
  2663                           	opt stack 26
  2664                           
  2665                           ;mcc.c: 125: OSCCON = 0x60;
  2666                           
  2667                           ; BSR set to: 15
  2668                           ;incstack = 0
  2669  0013F2  0E60               	movlw	96
  2670  0013F4  6ED3               	movwf	4051,c	;volatile
  2671                           
  2672                           ;mcc.c: 127: OSCCON2 = 0x00;
  2673  0013F6  0E00               	movlw	0
  2674  0013F8  6ED2               	movwf	4050,c	;volatile
  2675                           
  2676                           ;mcc.c: 129: OSCTUNE = 0x00;
  2677  0013FA  0E00               	movlw	0
  2678  0013FC  6E9B               	movwf	3995,c	;volatile
  2679                           
  2680                           ;mcc.c: 131: REFOCON = 0x00;
  2681  0013FE  0E00               	movlw	0
  2682  001400  6E9A               	movwf	3994,c	;volatile
  2683  001402  0012               	return		;funcret
  2684  001404                     __end_of_OSCILLATOR_Initialize:
  2685                           	opt stack 0
  2686                           tblptru	equ	0xFF8
  2687                           status	equ	0xFD8
  2688                           
  2689 ;; *************** function _INTERRUPT_Initialize *****************
  2690 ;; Defined at:
  2691 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;		None
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;		None
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  1    wreg      void 
  2698 ;; Registers used:
  2699 ;;		None
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2709 ;;Total ram usage:        0 bytes
  2710 ;; Hardware stack levels used:    1
  2711 ;; Hardware stack levels required when called:    3
  2712 ;; This function calls:
  2713 ;;		Nothing
  2714 ;; This function is called by:
  2715 ;;		_SYSTEM_Initialize
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           	psect	text14
  2720  001420                     __ptext14:
  2721                           	opt stack 0
  2722  001420                     _INTERRUPT_Initialize:
  2723                           	opt stack 26
  2724                           
  2725                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  2726                           
  2727                           ;incstack = 0
  2728  001420  9ED0               	bcf	4048,7,c	;volatile
  2729  001422  0012               	return		;funcret
  2730  001424                     __end_of_INTERRUPT_Initialize:
  2731                           	opt stack 0
  2732                           tblptru	equ	0xFF8
  2733                           status	equ	0xFD8
  2734                           
  2735 ;; *************** function _ECAN_Initialize *****************
  2736 ;; Defined at:
  2737 ;;		line 63 in file "mcc_generated_files/ecan.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;		None
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;		None
  2742 ;; Return value:  Size  Location     Type
  2743 ;;                  1    wreg      void 
  2744 ;; Registers used:
  2745 ;;		wreg, status,2, status,0
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2753 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2754 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2755 ;;Total ram usage:        1 bytes
  2756 ;; Hardware stack levels used:    1
  2757 ;; Hardware stack levels required when called:    3
  2758 ;; This function calls:
  2759 ;;		Nothing
  2760 ;; This function is called by:
  2761 ;;		_SYSTEM_Initialize
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           	psect	text15
  2766  001032                     __ptext15:
  2767                           	opt stack 0
  2768  001032                     _ECAN_Initialize:
  2769                           	opt stack 26
  2770                           
  2771                           ;ecan.c: 65: CANCON = 0x80;
  2772                           
  2773                           ;incstack = 0
  2774  001032  0E80               	movlw	128
  2775  001034  6E6F               	movwf	3951,c	;volatile
  2776  001036                     l1859:
  2777  001036  506E               	movf	3950,w,c	;volatile
  2778  001038  0BE0               	andlw	224
  2779  00103A  0A80               	xorlw	128
  2780  00103C  A4D8               	btfss	status,2,c
  2781  00103E  D7FB               	goto	l1859
  2782                           
  2783                           ;ecan.c: 71: ECANCON = 0x00;
  2784  001040  0E00               	movlw	0
  2785  001042  6E72               	movwf	3954,c	;volatile
  2786                           
  2787                           ;ecan.c: 88: RXM0EIDH = 0x00;
  2788  001044  0E00               	movlw	0
  2789  001046  010E               	movlb	14	; () banked
  2790  001048  6FFA               	movwf	250,b	;volatile
  2791                           
  2792                           ;ecan.c: 89: RXM0EIDL = 0x00;
  2793  00104A  0E00               	movlw	0
  2794  00104C  010E               	movlb	14	; () banked
  2795  00104E  6FFB               	movwf	251,b	;volatile
  2796                           
  2797                           ;ecan.c: 90: RXM0SIDH = 0x00;
  2798  001050  0E00               	movlw	0
  2799  001052  010E               	movlb	14	; () banked
  2800  001054  6FF8               	movwf	248,b	;volatile
  2801                           
  2802                           ;ecan.c: 91: RXM0SIDL = 0x00;
  2803  001056  0E00               	movlw	0
  2804  001058  010E               	movlb	14	; () banked
  2805  00105A  6FF9               	movwf	249,b	;volatile
  2806                           
  2807                           ; BSR set to: 14
  2808                           ;ecan.c: 93: RXM1EIDH = 0xFF;
  2809  00105C  010E               	movlb	14	; () banked
  2810  00105E  69FE               	setf	254,b	;volatile
  2811                           
  2812                           ; BSR set to: 14
  2813                           ;ecan.c: 94: RXM1EIDL = 0xFF;
  2814  001060  010E               	movlb	14	; () banked
  2815  001062  69FF               	setf	255,b	;volatile
  2816                           
  2817                           ; BSR set to: 14
  2818                           ;ecan.c: 95: RXM1SIDH = 0xFF;
  2819  001064  010E               	movlb	14	; () banked
  2820  001066  69FC               	setf	252,b	;volatile
  2821                           
  2822                           ; BSR set to: 14
  2823                           ;ecan.c: 96: RXM1SIDL = 0xFF;
  2824  001068  010E               	movlb	14	; () banked
  2825  00106A  69FD               	setf	253,b	;volatile
  2826                           
  2827                           ;ecan.c: 102: RXF0EIDH = 0x00;
  2828  00106C  0E00               	movlw	0
  2829  00106E  010E               	movlb	14	; () banked
  2830  001070  6FE2               	movwf	226,b	;volatile
  2831                           
  2832                           ;ecan.c: 103: RXF0EIDL = 0x00;
  2833  001072  0E00               	movlw	0
  2834  001074  010E               	movlb	14	; () banked
  2835  001076  6FE3               	movwf	227,b	;volatile
  2836                           
  2837                           ;ecan.c: 104: RXF0SIDH = 0x88;
  2838  001078  0E88               	movlw	136
  2839  00107A  010E               	movlb	14	; () banked
  2840  00107C  6FE0               	movwf	224,b	;volatile
  2841                           
  2842                           ;ecan.c: 105: RXF0SIDL = 0x80;
  2843  00107E  0E80               	movlw	128
  2844  001080  010E               	movlb	14	; () banked
  2845  001082  6FE1               	movwf	225,b	;volatile
  2846                           
  2847                           ;ecan.c: 107: RXF1EIDH = 0x00;
  2848  001084  0E00               	movlw	0
  2849  001086  010E               	movlb	14	; () banked
  2850  001088  6FE6               	movwf	230,b	;volatile
  2851                           
  2852                           ;ecan.c: 108: RXF1EIDL = 0x00;
  2853  00108A  0E00               	movlw	0
  2854  00108C  010E               	movlb	14	; () banked
  2855  00108E  6FE7               	movwf	231,b	;volatile
  2856                           
  2857                           ;ecan.c: 109: RXF1SIDH = 0xCC;
  2858  001090  0ECC               	movlw	204
  2859  001092  010E               	movlb	14	; () banked
  2860  001094  6FE4               	movwf	228,b	;volatile
  2861                           
  2862                           ;ecan.c: 110: RXF1SIDL = 0xC0;
  2863  001096  0EC0               	movlw	192
  2864  001098  010E               	movlb	14	; () banked
  2865  00109A  6FE5               	movwf	229,b	;volatile
  2866                           
  2867                           ;ecan.c: 112: RXF2EIDH = 0x00;
  2868  00109C  0E00               	movlw	0
  2869  00109E  010E               	movlb	14	; () banked
  2870  0010A0  6FEA               	movwf	234,b	;volatile
  2871                           
  2872                           ;ecan.c: 113: RXF2EIDL = 0x00;
  2873  0010A2  0E00               	movlw	0
  2874  0010A4  010E               	movlb	14	; () banked
  2875  0010A6  6FEB               	movwf	235,b	;volatile
  2876                           
  2877                           ;ecan.c: 114: RXF2SIDH = 0x00;
  2878  0010A8  0E00               	movlw	0
  2879  0010AA  010E               	movlb	14	; () banked
  2880  0010AC  6FE8               	movwf	232,b	;volatile
  2881                           
  2882                           ;ecan.c: 115: RXF2SIDL = 0x00;
  2883  0010AE  0E00               	movlw	0
  2884  0010B0  010E               	movlb	14	; () banked
  2885  0010B2  6FE9               	movwf	233,b	;volatile
  2886                           
  2887                           ;ecan.c: 117: RXF3EIDH = 0x00;
  2888  0010B4  0E00               	movlw	0
  2889  0010B6  010E               	movlb	14	; () banked
  2890  0010B8  6FEE               	movwf	238,b	;volatile
  2891                           
  2892                           ;ecan.c: 118: RXF3EIDL = 0x00;
  2893  0010BA  0E00               	movlw	0
  2894  0010BC  010E               	movlb	14	; () banked
  2895  0010BE  6FEF               	movwf	239,b	;volatile
  2896                           
  2897                           ;ecan.c: 119: RXF3SIDH = 0x00;
  2898  0010C0  0E00               	movlw	0
  2899  0010C2  010E               	movlb	14	; () banked
  2900  0010C4  6FEC               	movwf	236,b	;volatile
  2901                           
  2902                           ;ecan.c: 120: RXF3SIDL = 0x00;
  2903  0010C6  0E00               	movlw	0
  2904  0010C8  010E               	movlb	14	; () banked
  2905  0010CA  6FED               	movwf	237,b	;volatile
  2906                           
  2907                           ;ecan.c: 122: RXF4EIDH = 0x00;
  2908  0010CC  0E00               	movlw	0
  2909  0010CE  010E               	movlb	14	; () banked
  2910  0010D0  6FF2               	movwf	242,b	;volatile
  2911                           
  2912                           ;ecan.c: 123: RXF4EIDL = 0x00;
  2913  0010D2  0E00               	movlw	0
  2914  0010D4  010E               	movlb	14	; () banked
  2915  0010D6  6FF3               	movwf	243,b	;volatile
  2916                           
  2917                           ;ecan.c: 124: RXF4SIDH = 0x00;
  2918  0010D8  0E00               	movlw	0
  2919  0010DA  010E               	movlb	14	; () banked
  2920  0010DC  6FF0               	movwf	240,b	;volatile
  2921                           
  2922                           ;ecan.c: 125: RXF4SIDL = 0x00;
  2923  0010DE  0E00               	movlw	0
  2924  0010E0  010E               	movlb	14	; () banked
  2925  0010E2  6FF1               	movwf	241,b	;volatile
  2926                           
  2927                           ;ecan.c: 127: RXF5EIDH = 0x00;
  2928  0010E4  0E00               	movlw	0
  2929  0010E6  010E               	movlb	14	; () banked
  2930  0010E8  6FF6               	movwf	246,b	;volatile
  2931                           
  2932                           ;ecan.c: 128: RXF5EIDL = 0x00;
  2933  0010EA  0E00               	movlw	0
  2934  0010EC  010E               	movlb	14	; () banked
  2935  0010EE  6FF7               	movwf	247,b	;volatile
  2936                           
  2937                           ;ecan.c: 129: RXF5SIDH = 0x00;
  2938  0010F0  0E00               	movlw	0
  2939  0010F2  010E               	movlb	14	; () banked
  2940  0010F4  6FF4               	movwf	244,b	;volatile
  2941                           
  2942                           ;ecan.c: 130: RXF5SIDL = 0x00;
  2943  0010F6  0E00               	movlw	0
  2944  0010F8  010E               	movlb	14	; () banked
  2945  0010FA  6FF5               	movwf	245,b	;volatile
  2946                           
  2947                           ;ecan.c: 145: BRGCON1 = 0x03;
  2948  0010FC  0E03               	movlw	3
  2949  0010FE  010E               	movlb	14	; () banked
  2950  001100  6F43               	movwf	67,b	;volatile
  2951                           
  2952                           ;ecan.c: 146: BRGCON2 = 0x98;
  2953  001102  0E98               	movlw	152
  2954  001104  010E               	movlb	14	; () banked
  2955  001106  6F44               	movwf	68,b	;volatile
  2956                           
  2957                           ;ecan.c: 147: BRGCON3 = 0x01;
  2958  001108  0E01               	movlw	1
  2959  00110A  010E               	movlb	14	; () banked
  2960  00110C  6F45               	movwf	69,b	;volatile
  2961                           
  2962                           ;ecan.c: 149: CANCON = 0x00;
  2963  00110E  0E00               	movlw	0
  2964  001110  6E6F               	movwf	3951,c	;volatile
  2965  001112                     l1871:
  2966  001112  CF6E F00F          	movff	3950,??_ECAN_Initialize	;volatile
  2967  001116  0EE0               	movlw	224
  2968  001118  160F               	andwf	??_ECAN_Initialize,f,c
  2969  00111A  B4D8               	btfsc	status,2,c
  2970  00111C  0012               	return	
  2971  00111E  D7F9               	goto	l1871
  2972  001120                     __end_of_ECAN_Initialize:
  2973                           	opt stack 0
  2974                           tblptru	equ	0xFF8
  2975                           status	equ	0xFD8
  2976                           
  2977 ;; *************** function _ADC_Initialize *****************
  2978 ;; Defined at:
  2979 ;;		line 58 in file "mcc_generated_files/adc.c"
  2980 ;; Parameters:    Size  Location     Type
  2981 ;;		None
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;		None
  2984 ;; Return value:  Size  Location     Type
  2985 ;;                  1    wreg      void 
  2986 ;; Registers used:
  2987 ;;		wreg, status,2
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/0
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2997 ;;Total ram usage:        0 bytes
  2998 ;; Hardware stack levels used:    1
  2999 ;; Hardware stack levels required when called:    3
  3000 ;; This function calls:
  3001 ;;		Nothing
  3002 ;; This function is called by:
  3003 ;;		_SYSTEM_Initialize
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           	psect	text16
  3008  0013DC                     __ptext16:
  3009                           	opt stack 0
  3010  0013DC                     _ADC_Initialize:
  3011                           	opt stack 26
  3012                           
  3013                           ;adc.c: 63: ADCON0 = 0x01;
  3014                           
  3015                           ;incstack = 0
  3016  0013DC  0E01               	movlw	1
  3017  0013DE  6EC2               	movwf	4034,c	;volatile
  3018                           
  3019                           ;adc.c: 66: ADCON1 = 0x98;
  3020  0013E0  0E98               	movlw	152
  3021  0013E2  6EC1               	movwf	4033,c	;volatile
  3022                           
  3023                           ;adc.c: 69: ADCON2 = 0x8E;
  3024  0013E4  0E8E               	movlw	142
  3025  0013E6  6EC0               	movwf	4032,c	;volatile
  3026                           
  3027                           ;adc.c: 72: ADRESH = 0x00;
  3028  0013E8  0E00               	movlw	0
  3029  0013EA  6EC4               	movwf	4036,c	;volatile
  3030                           
  3031                           ;adc.c: 75: ADRESL = 0x00;
  3032  0013EC  0E00               	movlw	0
  3033  0013EE  6EC3               	movwf	4035,c	;volatile
  3034  0013F0  0012               	return		;funcret
  3035  0013F2                     __end_of_ADC_Initialize:
  3036                           	opt stack 0
  3037                           tblptru	equ	0xFF8
  3038                           status	equ	0xFD8
  3039                           
  3040 ;; *************** function _CAN_transmit *****************
  3041 ;; Defined at:
  3042 ;;		line 167 in file "mcc_generated_files/ecan.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;  tempCanMsg      2   32[COMRAM] PTR struct .
  3045 ;;		 -> main@cur_data1(14), 
  3046 ;; Auto vars:     Size  Location     Type
  3047 ;;  tempSIDL        1   38[COMRAM] unsigned char 
  3048 ;;  tempSIDH        1   37[COMRAM] unsigned char 
  3049 ;;  tempEIDL        1   36[COMRAM] unsigned char 
  3050 ;;  tempEIDH        1   35[COMRAM] unsigned char 
  3051 ;;  returnValue     1   34[COMRAM] unsigned char 
  3052 ;; Return value:  Size  Location     Type
  3053 ;;                  1    wreg      unsigned char 
  3054 ;; Registers used:
  3055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3061 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3062 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3064 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3065 ;;Total ram usage:        7 bytes
  3066 ;; Hardware stack levels used:    1
  3067 ;; Hardware stack levels required when called:    4
  3068 ;; This function calls:
  3069 ;;		_convertCANid2Reg
  3070 ;; This function is called by:
  3071 ;;		_main
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075                           	psect	text17
  3076  000788                     __ptext17:
  3077                           	opt stack 0
  3078  000788                     _CAN_transmit:
  3079                           	opt stack 26
  3080                           
  3081                           ;ecan.c: 168: unsigned char tempEIDH = 0;
  3082                           
  3083                           ;incstack = 0
  3084  000788  0E00               	movlw	0
  3085  00078A  6E24               	movwf	CAN_transmit@tempEIDH,c
  3086                           
  3087                           ;ecan.c: 169: unsigned char tempEIDL = 0;
  3088  00078C  0E00               	movlw	0
  3089  00078E  6E25               	movwf	CAN_transmit@tempEIDL,c
  3090                           
  3091                           ;ecan.c: 170: unsigned char tempSIDH = 0;
  3092  000790  0E00               	movlw	0
  3093  000792  6E26               	movwf	CAN_transmit@tempSIDH,c
  3094                           
  3095                           ;ecan.c: 171: unsigned char tempSIDL = 0;
  3096  000794  0E00               	movlw	0
  3097  000796  6E27               	movwf	CAN_transmit@tempSIDL,c
  3098                           
  3099                           ;ecan.c: 173: unsigned char returnValue = 0;
  3100  000798  0E00               	movlw	0
  3101  00079A  6E23               	movwf	CAN_transmit@returnValue,c
  3102                           
  3103                           ;ecan.c: 175: if (TXB0CONbits.TXREQ != 1) {
  3104  00079C  010F               	movlb	15	; () banked
  3105  00079E  B720               	btfsc	32,3,b	;volatile
  3106  0007A0  D084               	goto	l354
  3107                           
  3108                           ; BSR set to: 15
  3109                           ;ecan.c: 177: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  3110  0007A2  EE20 F001          	lfsr	2,1
  3111  0007A6  5021               	movf	CAN_transmit@tempCanMsg,w,c
  3112  0007A8  26D9               	addwf	fsr2l,f,c
  3113  0007AA  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  3114  0007AC  22DA               	addwfc	fsr2h,f,c
  3115  0007AE  CFDE F00F          	movff	postinc2,convertCANid2Reg@tempPassedInID
  3116  0007B2  CFDE F010          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  3117  0007B6  CFDE F011          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  3118  0007BA  CFDE F012          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  3119  0007BE  C021  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  3120  0007C2  C022  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  3121  0007C6  50DF               	movf	indf2,w,c
  3122  0007C8  6E13               	movwf	convertCANid2Reg@canIdType,c
  3123  0007CA  0E24               	movlw	low CAN_transmit@tempEIDH
  3124  0007CC  6E14               	movwf	convertCANid2Reg@passedInEIDH,c
  3125  0007CE  0E00               	movlw	high CAN_transmit@tempEIDH
  3126  0007D0  6E15               	movwf	convertCANid2Reg@passedInEIDH+1,c
  3127  0007D2  0E25               	movlw	low CAN_transmit@tempEIDL
  3128  0007D4  6E16               	movwf	convertCANid2Reg@passedInEIDL,c
  3129  0007D6  0E00               	movlw	high CAN_transmit@tempEIDL
  3130  0007D8  6E17               	movwf	convertCANid2Reg@passedInEIDL+1,c
  3131  0007DA  0E26               	movlw	low CAN_transmit@tempSIDH
  3132  0007DC  6E18               	movwf	convertCANid2Reg@passedInSIDH,c
  3133  0007DE  0E00               	movlw	high CAN_transmit@tempSIDH
  3134  0007E0  6E19               	movwf	convertCANid2Reg@passedInSIDH+1,c
  3135  0007E2  0E27               	movlw	low CAN_transmit@tempSIDL
  3136  0007E4  6E1A               	movwf	convertCANid2Reg@passedInSIDL,c
  3137  0007E6  0E00               	movlw	high CAN_transmit@tempSIDL
  3138  0007E8  6E1B               	movwf	convertCANid2Reg@passedInSIDL+1,c
  3139  0007EA  EC39  F006         	call	_convertCANid2Reg	;wreg free
  3140                           
  3141                           ;ecan.c: 179: TXB0EIDH = tempEIDH;
  3142  0007EE  C024  FF23         	movff	CAN_transmit@tempEIDH,3875	;volatile
  3143                           
  3144                           ;ecan.c: 180: TXB0EIDL = tempEIDL;
  3145  0007F2  C025  FF24         	movff	CAN_transmit@tempEIDL,3876	;volatile
  3146                           
  3147                           ;ecan.c: 181: TXB0SIDH = tempSIDH;
  3148  0007F6  C026  FF21         	movff	CAN_transmit@tempSIDH,3873	;volatile
  3149                           
  3150                           ;ecan.c: 182: TXB0SIDL = tempSIDL;
  3151  0007FA  C027  FF22         	movff	CAN_transmit@tempSIDL,3874	;volatile
  3152                           
  3153                           ;ecan.c: 183: TXB0DLC = tempCanMsg->frame.dlc;
  3154  0007FE  EE20 F005          	lfsr	2,5
  3155  000802  5021               	movf	CAN_transmit@tempCanMsg,w,c
  3156  000804  26D9               	addwf	fsr2l,f,c
  3157  000806  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  3158  000808  22DA               	addwfc	fsr2h,f,c
  3159  00080A  50DF               	movf	indf2,w,c
  3160  00080C  010F               	movlb	15	; () banked
  3161  00080E  6F25               	movwf	37,b	;volatile
  3162                           
  3163                           ; BSR set to: 15
  3164                           ;ecan.c: 184: TXB0D0 = tempCanMsg->frame.data0;
  3165  000810  EE20 F006          	lfsr	2,6
  3166  000814  5021               	movf	CAN_transmit@tempCanMsg,w,c
  3167  000816  26D9               	addwf	fsr2l,f,c
  3168  000818  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  3169  00081A  22DA               	addwfc	fsr2h,f,c
  3170  00081C  50DF               	movf	indf2,w,c
  3171  00081E  010F               	movlb	15	; () banked
  3172  000820  6F26               	movwf	38,b	;volatile
  3173                           
  3174                           ; BSR set to: 15
  3175                           ;ecan.c: 185: TXB0D1 = tempCanMsg->frame.data1;
  3176  000822  EE20 F007          	lfsr	2,7
  3177  000826  5021               	movf	CAN_transmit@tempCanMsg,w,c
  3178  000828  26D9               	addwf	fsr2l,f,c
  3179  00082A  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  3180  00082C  22DA               	addwfc	fsr2h,f,c
  3181  00082E  50DF               	movf	indf2,w,c
  3182  000830  010F               	movlb	15	; () banked
  3183  000832  6F27               	movwf	39,b	;volatile
  3184                           
  3185                           ; BSR set to: 15
  3186                           ;ecan.c: 186: TXB0D2 = tempCanMsg->frame.data2;
  3187  000834  EE20 F008          	lfsr	2,8
  3188  000838  5021               	movf	CAN_transmit@tempCanMsg,w,c
  3189  00083A  26D9               	addwf	fsr2l,f,c
  3190  00083C  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  3191  00083E  22DA               	addwfc	fsr2h,f,c
  3192  000840  50DF               	movf	indf2,w,c
  3193  000842  010F               	movlb	15	; () banked
  3194  000844  6F28               	movwf	40,b	;volatile
  3195                           
  3196                           ; BSR set to: 15
  3197                           ;ecan.c: 187: TXB0D3 = tempCanMsg->frame.data3;
  3198  000846  EE20 F009          	lfsr	2,9
  3199  00084A  5021               	movf	CAN_transmit@tempCanMsg,w,c
  3200  00084C  26D9               	addwf	fsr2l,f,c
  3201  00084E  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  3202  000850  22DA               	addwfc	fsr2h,f,c
  3203  000852  50DF               	movf	indf2,w,c
  3204  000854  010F               	movlb	15	; () banked
  3205  000856  6F29               	movwf	41,b	;volatile
  3206                           
  3207                           ; BSR set to: 15
  3208                           ;ecan.c: 188: TXB0D4 = tempCanMsg->frame.data4;
  3209  000858  EE20 F00A          	lfsr	2,10
  3210  00085C  5021               	movf	CAN_transmit@tempCanMsg,w,c
  3211  00085E  26D9               	addwf	fsr2l,f,c
  3212  000860  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  3213  000862  22DA               	addwfc	fsr2h,f,c
  3214  000864  50DF               	movf	indf2,w,c
  3215  000866  010F               	movlb	15	; () banked
  3216  000868  6F2A               	movwf	42,b	;volatile
  3217                           
  3218                           ; BSR set to: 15
  3219                           ;ecan.c: 189: TXB0D5 = tempCanMsg->frame.data5;
  3220  00086A  EE20 F00B          	lfsr	2,11
  3221  00086E  5021               	movf	CAN_transmit@tempCanMsg,w,c
  3222  000870  26D9               	addwf	fsr2l,f,c
  3223  000872  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  3224  000874  22DA               	addwfc	fsr2h,f,c
  3225  000876  50DF               	movf	indf2,w,c
  3226  000878  010F               	movlb	15	; () banked
  3227  00087A  6F2B               	movwf	43,b	;volatile
  3228                           
  3229                           ; BSR set to: 15
  3230                           ;ecan.c: 190: TXB0D6 = tempCanMsg->frame.data6;
  3231  00087C  EE20 F00C          	lfsr	2,12
  3232  000880  5021               	movf	CAN_transmit@tempCanMsg,w,c
  3233  000882  26D9               	addwf	fsr2l,f,c
  3234  000884  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  3235  000886  22DA               	addwfc	fsr2h,f,c
  3236  000888  50DF               	movf	indf2,w,c
  3237  00088A  010F               	movlb	15	; () banked
  3238  00088C  6F2C               	movwf	44,b	;volatile
  3239                           
  3240                           ; BSR set to: 15
  3241                           ;ecan.c: 191: TXB0D7 = tempCanMsg->frame.data7;
  3242  00088E  EE20 F00D          	lfsr	2,13
  3243  000892  5021               	movf	CAN_transmit@tempCanMsg,w,c
  3244  000894  26D9               	addwf	fsr2l,f,c
  3245  000896  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  3246  000898  22DA               	addwfc	fsr2h,f,c
  3247  00089A  50DF               	movf	indf2,w,c
  3248  00089C  010F               	movlb	15	; () banked
  3249  00089E  6F2D               	movwf	45,b	;volatile
  3250                           
  3251                           ; BSR set to: 15
  3252                           ;ecan.c: 193: TXB0CONbits.TXREQ = 1;
  3253  0008A0  010F               	movlb	15	; () banked
  3254  0008A2  8720               	bsf	32,3,b	;volatile
  3255                           
  3256                           ; BSR set to: 15
  3257                           ;ecan.c: 194: returnValue = 1;
  3258  0008A4  0E01               	movlw	1
  3259  0008A6  6E23               	movwf	CAN_transmit@returnValue,c
  3260                           
  3261                           ;ecan.c: 195: } else if (TXB1CONbits.TXREQ != 1) {
  3262  0008A8  0012               	return	
  3263  0008AA                     l354:
  3264                           
  3265                           ; BSR set to: 15
  3266  0008AA  010F               	movlb	15	; () banked
  3267  0008AC  B710               	btfsc	16,3,b	;volatile
  3268  0008AE  D084               	goto	l356
  3269                           
  3270                           ; BSR set to: 15
  3271                           ;ecan.c: 197: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  3272  0008B0  EE20 F001          	lfsr	2,1
  3273  0008B4  5021               	movf	CAN_transmit@tempCanMsg,w,c
  3274  0008B6  26D9               	addwf	fsr2l,f,c
  3275  0008B8  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  3276  0008BA  22DA               	addwfc	fsr2h,f,c
  3277  0008BC  CFDE F00F          	movff	postinc2,convertCANid2Reg@tempPassedInID
  3278  0008C0  CFDE F010          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  3279  0008C4  CFDE F011          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  3280  0008C8  CFDE F012          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  3281  0008CC  C021  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  3282  0008D0  C022  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  3283  0008D4  50DF               	movf	indf2,w,c
  3284  0008D6  6E13               	movwf	convertCANid2Reg@canIdType,c
  3285  0008D8  0E24               	movlw	low CAN_transmit@tempEIDH
  3286  0008DA  6E14               	movwf	convertCANid2Reg@passedInEIDH,c
  3287  0008DC  0E00               	movlw	high CAN_transmit@tempEIDH
  3288  0008DE  6E15               	movwf	convertCANid2Reg@passedInEIDH+1,c
  3289  0008E0  0E25               	movlw	low CAN_transmit@tempEIDL
  3290  0008E2  6E16               	movwf	convertCANid2Reg@passedInEIDL,c
  3291  0008E4  0E00               	movlw	high CAN_transmit@tempEIDL
  3292  0008E6  6E17               	movwf	convertCANid2Reg@passedInEIDL+1,c
  3293  0008E8  0E26               	movlw	low CAN_transmit@tempSIDH
  3294  0008EA  6E18               	movwf	convertCANid2Reg@passedInSIDH,c
  3295  0008EC  0E00               	movlw	high CAN_transmit@tempSIDH
  3296  0008EE  6E19               	movwf	convertCANid2Reg@passedInSIDH+1,c
  3297  0008F0  0E27               	movlw	low CAN_transmit@tempSIDL
  3298  0008F2  6E1A               	movwf	convertCANid2Reg@passedInSIDL,c
  3299  0008F4  0E00               	movlw	high CAN_transmit@tempSIDL
  3300  0008F6  6E1B               	movwf	convertCANid2Reg@passedInSIDL+1,c
  3301  0008F8  EC39  F006         	call	_convertCANid2Reg	;wreg free
  3302                           
  3303                           ;ecan.c: 199: TXB1EIDH = tempEIDH;
  3304  0008FC  C024  FF13         	movff	CAN_transmit@tempEIDH,3859	;volatile
  3305                           
  3306                           ;ecan.c: 200: TXB1EIDL = tempEIDL;
  3307  000900  C025  FF14         	movff	CAN_transmit@tempEIDL,3860	;volatile
  3308                           
  3309                           ;ecan.c: 201: TXB1SIDH = tempSIDH;
  3310  000904  C026  FF11         	movff	CAN_transmit@tempSIDH,3857	;volatile
  3311                           
  3312                           ;ecan.c: 202: TXB1SIDL = tempSIDL;
  3313  000908  C027  FF12         	movff	CAN_transmit@tempSIDL,3858	;volatile
  3314                           
  3315                           ;ecan.c: 203: TXB1DLC = tempCanMsg->frame.dlc;
  3316  00090C  EE20 F005          	lfsr	2,5
  3317  000910  5021               	movf	CAN_transmit@tempCanMsg,w,c
  3318  000912  26D9               	addwf	fsr2l,f,c
  3319  000914  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  3320  000916  22DA               	addwfc	fsr2h,f,c
  3321  000918  50DF               	movf	indf2,w,c
  3322  00091A  010F               	movlb	15	; () banked
  3323  00091C  6F15               	movwf	21,b	;volatile
  3324                           
  3325                           ; BSR set to: 15
  3326                           ;ecan.c: 204: TXB1D0 = tempCanMsg->frame.data0;
  3327  00091E  EE20 F006          	lfsr	2,6
  3328  000922  5021               	movf	CAN_transmit@tempCanMsg,w,c
  3329  000924  26D9               	addwf	fsr2l,f,c
  3330  000926  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  3331  000928  22DA               	addwfc	fsr2h,f,c
  3332  00092A  50DF               	movf	indf2,w,c
  3333  00092C  010F               	movlb	15	; () banked
  3334  00092E  6F16               	movwf	22,b	;volatile
  3335                           
  3336                           ; BSR set to: 15
  3337                           ;ecan.c: 205: TXB1D1 = tempCanMsg->frame.data1;
  3338  000930  EE20 F007          	lfsr	2,7
  3339  000934  5021               	movf	CAN_transmit@tempCanMsg,w,c
  3340  000936  26D9               	addwf	fsr2l,f,c
  3341  000938  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  3342  00093A  22DA               	addwfc	fsr2h,f,c
  3343  00093C  50DF               	movf	indf2,w,c
  3344  00093E  010F               	movlb	15	; () banked
  3345  000940  6F17               	movwf	23,b	;volatile
  3346                           
  3347                           ; BSR set to: 15
  3348                           ;ecan.c: 206: TXB1D2 = tempCanMsg->frame.data2;
  3349  000942  EE20 F008          	lfsr	2,8
  3350  000946  5021               	movf	CAN_transmit@tempCanMsg,w,c
  3351  000948  26D9               	addwf	fsr2l,f,c
  3352  00094A  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  3353  00094C  22DA               	addwfc	fsr2h,f,c
  3354  00094E  50DF               	movf	indf2,w,c
  3355  000950  010F               	movlb	15	; () banked
  3356  000952  6F18               	movwf	24,b	;volatile
  3357                           
  3358                           ; BSR set to: 15
  3359                           ;ecan.c: 207: TXB1D3 = tempCanMsg->frame.data3;
  3360  000954  EE20 F009          	lfsr	2,9
  3361  000958  5021               	movf	CAN_transmit@tempCanMsg,w,c
  3362  00095A  26D9               	addwf	fsr2l,f,c
  3363  00095C  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  3364  00095E  22DA               	addwfc	fsr2h,f,c
  3365  000960  50DF               	movf	indf2,w,c
  3366  000962  010F               	movlb	15	; () banked
  3367  000964  6F19               	movwf	25,b	;volatile
  3368                           
  3369                           ; BSR set to: 15
  3370                           ;ecan.c: 208: TXB1D4 = tempCanMsg->frame.data4;
  3371  000966  EE20 F00A          	lfsr	2,10
  3372  00096A  5021               	movf	CAN_transmit@tempCanMsg,w,c
  3373  00096C  26D9               	addwf	fsr2l,f,c
  3374  00096E  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  3375  000970  22DA               	addwfc	fsr2h,f,c
  3376  000972  50DF               	movf	indf2,w,c
  3377  000974  010F               	movlb	15	; () banked
  3378  000976  6F1A               	movwf	26,b	;volatile
  3379                           
  3380                           ; BSR set to: 15
  3381                           ;ecan.c: 209: TXB1D5 = tempCanMsg->frame.data5;
  3382  000978  EE20 F00B          	lfsr	2,11
  3383  00097C  5021               	movf	CAN_transmit@tempCanMsg,w,c
  3384  00097E  26D9               	addwf	fsr2l,f,c
  3385  000980  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  3386  000982  22DA               	addwfc	fsr2h,f,c
  3387  000984  50DF               	movf	indf2,w,c
  3388  000986  010F               	movlb	15	; () banked
  3389  000988  6F1B               	movwf	27,b	;volatile
  3390                           
  3391                           ; BSR set to: 15
  3392                           ;ecan.c: 210: TXB1D6 = tempCanMsg->frame.data6;
  3393  00098A  EE20 F00C          	lfsr	2,12
  3394  00098E  5021               	movf	CAN_transmit@tempCanMsg,w,c
  3395  000990  26D9               	addwf	fsr2l,f,c
  3396  000992  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  3397  000994  22DA               	addwfc	fsr2h,f,c
  3398  000996  50DF               	movf	indf2,w,c
  3399  000998  010F               	movlb	15	; () banked
  3400  00099A  6F1C               	movwf	28,b	;volatile
  3401                           
  3402                           ; BSR set to: 15
  3403                           ;ecan.c: 211: TXB1D7 = tempCanMsg->frame.data7;
  3404  00099C  EE20 F00D          	lfsr	2,13
  3405  0009A0  5021               	movf	CAN_transmit@tempCanMsg,w,c
  3406  0009A2  26D9               	addwf	fsr2l,f,c
  3407  0009A4  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  3408  0009A6  22DA               	addwfc	fsr2h,f,c
  3409  0009A8  50DF               	movf	indf2,w,c
  3410  0009AA  010F               	movlb	15	; () banked
  3411  0009AC  6F1D               	movwf	29,b	;volatile
  3412                           
  3413                           ; BSR set to: 15
  3414                           ;ecan.c: 213: TXB1CONbits.TXREQ = 1;
  3415  0009AE  010F               	movlb	15	; () banked
  3416  0009B0  8710               	bsf	16,3,b	;volatile
  3417                           
  3418                           ; BSR set to: 15
  3419                           ;ecan.c: 214: returnValue = 1;
  3420  0009B2  0E01               	movlw	1
  3421  0009B4  6E23               	movwf	CAN_transmit@returnValue,c
  3422                           
  3423                           ;ecan.c: 215: } else if (TXB2CONbits.TXREQ != 1) {
  3424  0009B6  0012               	return	
  3425  0009B8                     l356:
  3426                           
  3427                           ; BSR set to: 15
  3428  0009B8  010F               	movlb	15	; () banked
  3429  0009BA  B700               	btfsc	0,3,b	;volatile
  3430  0009BC  0012               	return	
  3431                           
  3432                           ; BSR set to: 15
  3433                           ;ecan.c: 217: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  3434  0009BE  EE20 F001          	lfsr	2,1
  3435  0009C2  5021               	movf	CAN_transmit@tempCanMsg,w,c
  3436  0009C4  26D9               	addwf	fsr2l,f,c
  3437  0009C6  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  3438  0009C8  22DA               	addwfc	fsr2h,f,c
  3439  0009CA  CFDE F00F          	movff	postinc2,convertCANid2Reg@tempPassedInID
  3440  0009CE  CFDE F010          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  3441  0009D2  CFDE F011          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  3442  0009D6  CFDE F012          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  3443  0009DA  C021  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  3444  0009DE  C022  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  3445  0009E2  50DF               	movf	indf2,w,c
  3446  0009E4  6E13               	movwf	convertCANid2Reg@canIdType,c
  3447  0009E6  0E24               	movlw	low CAN_transmit@tempEIDH
  3448  0009E8  6E14               	movwf	convertCANid2Reg@passedInEIDH,c
  3449  0009EA  0E00               	movlw	high CAN_transmit@tempEIDH
  3450  0009EC  6E15               	movwf	convertCANid2Reg@passedInEIDH+1,c
  3451  0009EE  0E25               	movlw	low CAN_transmit@tempEIDL
  3452  0009F0  6E16               	movwf	convertCANid2Reg@passedInEIDL,c
  3453  0009F2  0E00               	movlw	high CAN_transmit@tempEIDL
  3454  0009F4  6E17               	movwf	convertCANid2Reg@passedInEIDL+1,c
  3455  0009F6  0E26               	movlw	low CAN_transmit@tempSIDH
  3456  0009F8  6E18               	movwf	convertCANid2Reg@passedInSIDH,c
  3457  0009FA  0E00               	movlw	high CAN_transmit@tempSIDH
  3458  0009FC  6E19               	movwf	convertCANid2Reg@passedInSIDH+1,c
  3459  0009FE  0E27               	movlw	low CAN_transmit@tempSIDL
  3460  000A00  6E1A               	movwf	convertCANid2Reg@passedInSIDL,c
  3461  000A02  0E00               	movlw	high CAN_transmit@tempSIDL
  3462  000A04  6E1B               	movwf	convertCANid2Reg@passedInSIDL+1,c
  3463  000A06  EC39  F006         	call	_convertCANid2Reg	;wreg free
  3464                           
  3465                           ;ecan.c: 219: TXB2EIDH = tempEIDH;
  3466  000A0A  C024  FF03         	movff	CAN_transmit@tempEIDH,3843	;volatile
  3467                           
  3468                           ;ecan.c: 220: TXB2EIDL = tempEIDL;
  3469  000A0E  C025  FF04         	movff	CAN_transmit@tempEIDL,3844	;volatile
  3470                           
  3471                           ;ecan.c: 221: TXB2SIDH = tempSIDH;
  3472  000A12  C026  FF01         	movff	CAN_transmit@tempSIDH,3841	;volatile
  3473                           
  3474                           ;ecan.c: 222: TXB2SIDL = tempSIDL;
  3475  000A16  C027  FF02         	movff	CAN_transmit@tempSIDL,3842	;volatile
  3476                           
  3477                           ;ecan.c: 223: TXB2DLC = tempCanMsg->frame.dlc;
  3478  000A1A  EE20 F005          	lfsr	2,5
  3479  000A1E  5021               	movf	CAN_transmit@tempCanMsg,w,c
  3480  000A20  26D9               	addwf	fsr2l,f,c
  3481  000A22  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  3482  000A24  22DA               	addwfc	fsr2h,f,c
  3483  000A26  50DF               	movf	indf2,w,c
  3484  000A28  010F               	movlb	15	; () banked
  3485  000A2A  6F05               	movwf	5,b	;volatile
  3486                           
  3487                           ; BSR set to: 15
  3488                           ;ecan.c: 224: TXB2D0 = tempCanMsg->frame.data0;
  3489  000A2C  EE20 F006          	lfsr	2,6
  3490  000A30  5021               	movf	CAN_transmit@tempCanMsg,w,c
  3491  000A32  26D9               	addwf	fsr2l,f,c
  3492  000A34  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  3493  000A36  22DA               	addwfc	fsr2h,f,c
  3494  000A38  50DF               	movf	indf2,w,c
  3495  000A3A  010F               	movlb	15	; () banked
  3496  000A3C  6F06               	movwf	6,b	;volatile
  3497                           
  3498                           ; BSR set to: 15
  3499                           ;ecan.c: 225: TXB2D1 = tempCanMsg->frame.data1;
  3500  000A3E  EE20 F007          	lfsr	2,7
  3501  000A42  5021               	movf	CAN_transmit@tempCanMsg,w,c
  3502  000A44  26D9               	addwf	fsr2l,f,c
  3503  000A46  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  3504  000A48  22DA               	addwfc	fsr2h,f,c
  3505  000A4A  50DF               	movf	indf2,w,c
  3506  000A4C  010F               	movlb	15	; () banked
  3507  000A4E  6F07               	movwf	7,b	;volatile
  3508                           
  3509                           ; BSR set to: 15
  3510                           ;ecan.c: 226: TXB2D2 = tempCanMsg->frame.data2;
  3511  000A50  EE20 F008          	lfsr	2,8
  3512  000A54  5021               	movf	CAN_transmit@tempCanMsg,w,c
  3513  000A56  26D9               	addwf	fsr2l,f,c
  3514  000A58  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  3515  000A5A  22DA               	addwfc	fsr2h,f,c
  3516  000A5C  50DF               	movf	indf2,w,c
  3517  000A5E  010F               	movlb	15	; () banked
  3518  000A60  6F08               	movwf	8,b	;volatile
  3519                           
  3520                           ; BSR set to: 15
  3521                           ;ecan.c: 227: TXB2D3 = tempCanMsg->frame.data3;
  3522  000A62  EE20 F009          	lfsr	2,9
  3523  000A66  5021               	movf	CAN_transmit@tempCanMsg,w,c
  3524  000A68  26D9               	addwf	fsr2l,f,c
  3525  000A6A  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  3526  000A6C  22DA               	addwfc	fsr2h,f,c
  3527  000A6E  50DF               	movf	indf2,w,c
  3528  000A70  010F               	movlb	15	; () banked
  3529  000A72  6F09               	movwf	9,b	;volatile
  3530                           
  3531                           ; BSR set to: 15
  3532                           ;ecan.c: 228: TXB2D4 = tempCanMsg->frame.data4;
  3533  000A74  EE20 F00A          	lfsr	2,10
  3534  000A78  5021               	movf	CAN_transmit@tempCanMsg,w,c
  3535  000A7A  26D9               	addwf	fsr2l,f,c
  3536  000A7C  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  3537  000A7E  22DA               	addwfc	fsr2h,f,c
  3538  000A80  50DF               	movf	indf2,w,c
  3539  000A82  010F               	movlb	15	; () banked
  3540  000A84  6F0A               	movwf	10,b	;volatile
  3541                           
  3542                           ; BSR set to: 15
  3543                           ;ecan.c: 229: TXB2D5 = tempCanMsg->frame.data5;
  3544  000A86  EE20 F00B          	lfsr	2,11
  3545  000A8A  5021               	movf	CAN_transmit@tempCanMsg,w,c
  3546  000A8C  26D9               	addwf	fsr2l,f,c
  3547  000A8E  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  3548  000A90  22DA               	addwfc	fsr2h,f,c
  3549  000A92  50DF               	movf	indf2,w,c
  3550  000A94  010F               	movlb	15	; () banked
  3551  000A96  6F0B               	movwf	11,b	;volatile
  3552                           
  3553                           ; BSR set to: 15
  3554                           ;ecan.c: 230: TXB2D6 = tempCanMsg->frame.data6;
  3555  000A98  EE20 F00C          	lfsr	2,12
  3556  000A9C  5021               	movf	CAN_transmit@tempCanMsg,w,c
  3557  000A9E  26D9               	addwf	fsr2l,f,c
  3558  000AA0  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  3559  000AA2  22DA               	addwfc	fsr2h,f,c
  3560  000AA4  50DF               	movf	indf2,w,c
  3561  000AA6  010F               	movlb	15	; () banked
  3562  000AA8  6F0C               	movwf	12,b	;volatile
  3563                           
  3564                           ; BSR set to: 15
  3565                           ;ecan.c: 231: TXB2D7 = tempCanMsg->frame.data7;
  3566  000AAA  EE20 F00D          	lfsr	2,13
  3567  000AAE  5021               	movf	CAN_transmit@tempCanMsg,w,c
  3568  000AB0  26D9               	addwf	fsr2l,f,c
  3569  000AB2  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  3570  000AB4  22DA               	addwfc	fsr2h,f,c
  3571  000AB6  50DF               	movf	indf2,w,c
  3572  000AB8  010F               	movlb	15	; () banked
  3573  000ABA  6F0D               	movwf	13,b	;volatile
  3574                           
  3575                           ; BSR set to: 15
  3576                           ;ecan.c: 233: TXB2CONbits.TXREQ = 1;
  3577  000ABC  010F               	movlb	15	; () banked
  3578  000ABE  8700               	bsf	0,3,b	;volatile
  3579                           
  3580                           ; BSR set to: 15
  3581                           ;ecan.c: 234: returnValue = 1;
  3582  000AC0  0E01               	movlw	1
  3583  000AC2  6E23               	movwf	CAN_transmit@returnValue,c
  3584                           
  3585                           ; BSR set to: 15
  3586                           
  3587                           ; BSR set to: 15
  3588                           
  3589                           ; BSR set to: 15
  3590  000AC4  0012               	return	
  3591  000AC6                     __end_of_CAN_transmit:
  3592                           	opt stack 0
  3593                           tblptru	equ	0xFF8
  3594                           indf2	equ	0xFDF
  3595                           postinc2	equ	0xFDE
  3596                           fsr2h	equ	0xFDA
  3597                           fsr2l	equ	0xFD9
  3598                           status	equ	0xFD8
  3599                           
  3600 ;; *************** function _convertCANid2Reg *****************
  3601 ;; Defined at:
  3602 ;;		line 400 in file "mcc_generated_files/ecan.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;  tempPassedIn    4   14[COMRAM] unsigned long 
  3605 ;;  canIdType       1   18[COMRAM] unsigned char 
  3606 ;;  passedInEIDH    2   19[COMRAM] PTR unsigned char 
  3607 ;;		 -> CAN_transmit@tempEIDH(1), 
  3608 ;;  passedInEIDL    2   21[COMRAM] PTR unsigned char 
  3609 ;;		 -> CAN_transmit@tempEIDL(1), 
  3610 ;;  passedInSIDH    2   23[COMRAM] PTR unsigned char 
  3611 ;;		 -> CAN_transmit@tempSIDH(1), 
  3612 ;;  passedInSIDL    2   25[COMRAM] PTR unsigned char 
  3613 ;;		 -> CAN_transmit@tempSIDL(1), 
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;  wipSIDL         1   31[COMRAM] unsigned char 
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  1    wreg      void 
  3618 ;; Registers used:
  3619 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3625 ;;      Params:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3626 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3627 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3628 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3629 ;;Total ram usage:       18 bytes
  3630 ;; Hardware stack levels used:    1
  3631 ;; Hardware stack levels required when called:    3
  3632 ;; This function calls:
  3633 ;;		Nothing
  3634 ;; This function is called by:
  3635 ;;		_CAN_transmit
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           	psect	text18
  3640  000C72                     __ptext18:
  3641                           	opt stack 0
  3642  000C72                     _convertCANid2Reg:
  3643                           	opt stack 26
  3644                           
  3645                           ;ecan.c: 401: unsigned char wipSIDL = 0;
  3646                           
  3647                           ; BSR set to: 15
  3648                           ;incstack = 0
  3649  000C72  0E00               	movlw	0
  3650  000C74  6E20               	movwf	convertCANid2Reg@wipSIDL,c
  3651                           
  3652                           ;ecan.c: 403: if (canIdType == 2) {
  3653  000C76  0E02               	movlw	2
  3654  000C78  1813               	xorwf	convertCANid2Reg@canIdType,w,c
  3655  000C7A  A4D8               	btfss	status,2,c
  3656  000C7C  D081               	goto	l1897
  3657                           
  3658                           ;ecan.c: 406: *passedInEIDL = 0xFF & tempPassedInID;
  3659  000C7E  C016  FFD9         	movff	convertCANid2Reg@passedInEIDL,fsr2l
  3660  000C82  C017  FFDA         	movff	convertCANid2Reg@passedInEIDL+1,fsr2h
  3661  000C86  C00F  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  3662                           
  3663                           ;ecan.c: 407: tempPassedInID = tempPassedInID >> 8;
  3664  000C8A  C00F  F01C         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  3665  000C8E  C010  F01D         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  3666  000C92  C011  F01E         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  3667  000C96  C012  F01F         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  3668  000C9A  C01D  F01C         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  3669  000C9E  C01E  F01D         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  3670  000CA2  C01F  F01E         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  3671  000CA6  6A1F               	clrf	??_convertCANid2Reg+3,c
  3672  000CA8  C01C  F00F         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  3673  000CAC  C01D  F010         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  3674  000CB0  C01E  F011         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  3675  000CB4  C01F  F012         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  3676                           
  3677                           ;ecan.c: 410: *passedInEIDH = 0xFF & tempPassedInID;
  3678  000CB8  C014  FFD9         	movff	convertCANid2Reg@passedInEIDH,fsr2l
  3679  000CBC  C015  FFDA         	movff	convertCANid2Reg@passedInEIDH+1,fsr2h
  3680  000CC0  C00F  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  3681                           
  3682                           ;ecan.c: 411: tempPassedInID = tempPassedInID >> 8;
  3683  000CC4  C00F  F01C         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  3684  000CC8  C010  F01D         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  3685  000CCC  C011  F01E         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  3686  000CD0  C012  F01F         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  3687  000CD4  C01D  F01C         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  3688  000CD8  C01E  F01D         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  3689  000CDC  C01F  F01E         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  3690  000CE0  6A1F               	clrf	??_convertCANid2Reg+3,c
  3691  000CE2  C01C  F00F         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  3692  000CE6  C01D  F010         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  3693  000CEA  C01E  F011         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  3694  000CEE  C01F  F012         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  3695                           
  3696                           ;ecan.c: 415: wipSIDL = 0x03 & tempPassedInID;
  3697  000CF2  500F               	movf	convertCANid2Reg@tempPassedInID,w,c
  3698  000CF4  0B03               	andlw	3
  3699  000CF6  6E20               	movwf	convertCANid2Reg@wipSIDL,c
  3700                           
  3701                           ;ecan.c: 416: tempPassedInID = tempPassedInID << 3;
  3702  000CF8  C00F  F01C         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  3703  000CFC  C010  F01D         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  3704  000D00  C011  F01E         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  3705  000D04  C012  F01F         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  3706  000D08  0E03               	movlw	3
  3707  000D0A                     u805:
  3708  000D0A  90D8               	bcf	status,0,c
  3709  000D0C  361C               	rlcf	??_convertCANid2Reg,f,c
  3710  000D0E  361D               	rlcf	??_convertCANid2Reg+1,f,c
  3711  000D10  361E               	rlcf	??_convertCANid2Reg+2,f,c
  3712  000D12  361F               	rlcf	??_convertCANid2Reg+3,f,c
  3713  000D14  2EE8               	decfsz	wreg,f,c
  3714  000D16  D7F9               	goto	u805
  3715  000D18  C01C  F00F         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  3716  000D1C  C01D  F010         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  3717  000D20  C01E  F011         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  3718  000D24  C01F  F012         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  3719                           
  3720                           ;ecan.c: 417: wipSIDL = (0xE0 & tempPassedInID) + wipSIDL;
  3721  000D28  500F               	movf	convertCANid2Reg@tempPassedInID,w,c
  3722  000D2A  0BE0               	andlw	224
  3723  000D2C  2420               	addwf	convertCANid2Reg@wipSIDL,w,c
  3724  000D2E  6E20               	movwf	convertCANid2Reg@wipSIDL,c
  3725                           
  3726                           ;ecan.c: 418: wipSIDL = wipSIDL + 0x08;
  3727  000D30  5020               	movf	convertCANid2Reg@wipSIDL,w,c
  3728  000D32  0F08               	addlw	8
  3729  000D34  6E20               	movwf	convertCANid2Reg@wipSIDL,c
  3730                           
  3731                           ;ecan.c: 419: *passedInSIDL = 0xEB & wipSIDL;
  3732  000D36  5020               	movf	convertCANid2Reg@wipSIDL,w,c
  3733  000D38  0BEB               	andlw	235
  3734  000D3A  C01A  FFD9         	movff	convertCANid2Reg@passedInSIDL,fsr2l
  3735  000D3E  C01B  FFDA         	movff	convertCANid2Reg@passedInSIDL+1,fsr2h
  3736  000D42  6EDF               	movwf	indf2,c
  3737                           
  3738                           ;ecan.c: 422: tempPassedInID = tempPassedInID >> 8;
  3739  000D44  C00F  F01C         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  3740  000D48  C010  F01D         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  3741  000D4C  C011  F01E         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  3742  000D50  C012  F01F         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  3743  000D54  C01D  F01C         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  3744  000D58  C01E  F01D         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  3745  000D5C  C01F  F01E         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  3746  000D60  6A1F               	clrf	??_convertCANid2Reg+3,c
  3747  000D62  C01C  F00F         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  3748  000D66  C01D  F010         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  3749  000D6A  C01E  F011         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  3750  000D6E  C01F  F012         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  3751                           
  3752                           ;ecan.c: 423: *passedInSIDH = 0xFF & tempPassedInID;
  3753  000D72  C018  FFD9         	movff	convertCANid2Reg@passedInSIDH,fsr2l
  3754  000D76  C019  FFDA         	movff	convertCANid2Reg@passedInSIDH+1,fsr2h
  3755  000D7A  C00F  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  3756                           
  3757                           ;ecan.c: 424: } else
  3758  000D7E  0012               	return	
  3759  000D80                     l1897:
  3760                           
  3761                           ;ecan.c: 425: {
  3762                           ;ecan.c: 426: *passedInEIDH = 0;
  3763  000D80  C014  FFD9         	movff	convertCANid2Reg@passedInEIDH,fsr2l
  3764  000D84  C015  FFDA         	movff	convertCANid2Reg@passedInEIDH+1,fsr2h
  3765  000D88  0E00               	movlw	0
  3766  000D8A  6EDF               	movwf	indf2,c
  3767                           
  3768                           ;ecan.c: 427: *passedInEIDL = 0;
  3769  000D8C  C016  FFD9         	movff	convertCANid2Reg@passedInEIDL,fsr2l
  3770  000D90  C017  FFDA         	movff	convertCANid2Reg@passedInEIDL+1,fsr2h
  3771  000D94  0E00               	movlw	0
  3772  000D96  6EDF               	movwf	indf2,c
  3773                           
  3774                           ;ecan.c: 428: tempPassedInID = tempPassedInID << 5;
  3775  000D98  C00F  F01C         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  3776  000D9C  C010  F01D         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  3777  000DA0  C011  F01E         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  3778  000DA4  C012  F01F         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  3779  000DA8  0E05               	movlw	5
  3780  000DAA                     u815:
  3781  000DAA  90D8               	bcf	status,0,c
  3782  000DAC  361C               	rlcf	??_convertCANid2Reg,f,c
  3783  000DAE  361D               	rlcf	??_convertCANid2Reg+1,f,c
  3784  000DB0  361E               	rlcf	??_convertCANid2Reg+2,f,c
  3785  000DB2  361F               	rlcf	??_convertCANid2Reg+3,f,c
  3786  000DB4  2EE8               	decfsz	wreg,f,c
  3787  000DB6  D7F9               	goto	u815
  3788  000DB8  C01C  F00F         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  3789  000DBC  C01D  F010         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  3790  000DC0  C01E  F011         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  3791  000DC4  C01F  F012         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  3792                           
  3793                           ;ecan.c: 429: *passedInSIDL = 0xFF & tempPassedInID;
  3794  000DC8  C01A  FFD9         	movff	convertCANid2Reg@passedInSIDL,fsr2l
  3795  000DCC  C01B  FFDA         	movff	convertCANid2Reg@passedInSIDL+1,fsr2h
  3796  000DD0  C00F  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  3797                           
  3798                           ;ecan.c: 430: tempPassedInID = tempPassedInID >> 8;
  3799  000DD4  C00F  F01C         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  3800  000DD8  C010  F01D         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  3801  000DDC  C011  F01E         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  3802  000DE0  C012  F01F         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  3803  000DE4  C01D  F01C         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  3804  000DE8  C01E  F01D         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  3805  000DEC  C01F  F01E         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  3806  000DF0  6A1F               	clrf	??_convertCANid2Reg+3,c
  3807  000DF2  C01C  F00F         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  3808  000DF6  C01D  F010         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  3809  000DFA  C01E  F011         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  3810  000DFE  C01F  F012         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  3811                           
  3812                           ;ecan.c: 431: *passedInSIDH = 0xFF & tempPassedInID;
  3813  000E02  C018  FFD9         	movff	convertCANid2Reg@passedInSIDH,fsr2l
  3814  000E06  C019  FFDA         	movff	convertCANid2Reg@passedInSIDH+1,fsr2h
  3815  000E0A  C00F  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  3816  000E0E  0012               	return	
  3817  000E10                     __end_of_convertCANid2Reg:
  3818                           	opt stack 0
  3819                           tblptru	equ	0xFF8
  3820                           wreg	equ	0xFE8
  3821                           indf2	equ	0xFDF
  3822                           postinc2	equ	0xFDE
  3823                           fsr2h	equ	0xFDA
  3824                           fsr2l	equ	0xFD9
  3825                           status	equ	0xFD8
  3826                           
  3827 ;; *************** function _ADC_GetConversion *****************
  3828 ;; Defined at:
  3829 ;;		line 104 in file "mcc_generated_files/adc.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;  channel         1    wreg     enum E15090
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;  channel         1   18[COMRAM] enum E15090
  3834 ;; Return value:  Size  Location     Type
  3835 ;;                  2   14[COMRAM] unsigned int 
  3836 ;; Registers used:
  3837 ;;		wreg, status,2, status,0
  3838 ;; Tracked objects:
  3839 ;;		On entry : 0/0
  3840 ;;		On exit  : 0/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3843 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3844 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3845 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3846 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3847 ;;Total ram usage:        5 bytes
  3848 ;; Hardware stack levels used:    1
  3849 ;; Hardware stack levels required when called:    3
  3850 ;; This function calls:
  3851 ;;		Nothing
  3852 ;; This function is called by:
  3853 ;;		_main
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           	psect	text19
  3858  001320                     __ptext19:
  3859                           	opt stack 0
  3860  001320                     _ADC_GetConversion:
  3861                           	opt stack 27
  3862                           
  3863                           ;incstack = 0
  3864                           ;ADC_GetConversion@channel stored from wreg
  3865  001320  6E13               	movwf	ADC_GetConversion@channel,c
  3866                           
  3867                           ;adc.c: 107: ADCON0bits.CHS = channel;
  3868  001322  C013  F011         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  3869  001326  4611               	rlncf	??_ADC_GetConversion,f,c
  3870  001328  4611               	rlncf	??_ADC_GetConversion,f,c
  3871  00132A  50C2               	movf	4034,w,c	;volatile
  3872  00132C  1811               	xorwf	??_ADC_GetConversion,w,c
  3873  00132E  0B83               	andlw	-125
  3874  001330  1811               	xorwf	??_ADC_GetConversion,w,c
  3875  001332  6EC2               	movwf	4034,c	;volatile
  3876                           
  3877                           ;adc.c: 110: ADCON0bits.ADON = 1;
  3878  001334  80C2               	bsf	4034,0,c	;volatile
  3879                           
  3880                           ;adc.c: 114: ADCON0bits.GO_nDONE = 1;
  3881  001336  82C2               	bsf	4034,1,c	;volatile
  3882  001338                     l27:
  3883  001338  B2C2               	btfsc	4034,1,c	;volatile
  3884  00133A  D7FE               	goto	l27
  3885                           
  3886                           ;adc.c: 119: }
  3887                           ;adc.c: 122: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3888  00133C  50C4               	movf	4036,w,c	;volatile
  3889  00133E  6E12               	movwf	(??_ADC_GetConversion+1)& (0+255),c
  3890  001340  6A11               	clrf	??_ADC_GetConversion& (0+255),c
  3891  001342  50C3               	movf	4035,w,c	;volatile
  3892  001344  2411               	addwf	??_ADC_GetConversion,w,c
  3893  001346  6E0F               	movwf	?_ADC_GetConversion,c
  3894  001348  0E00               	movlw	0
  3895  00134A  2012               	addwfc	??_ADC_GetConversion+1,w,c
  3896  00134C  6E10               	movwf	?_ADC_GetConversion+1,c
  3897  00134E  0012               	return	
  3898  001350                     __end_of_ADC_GetConversion:
  3899                           	opt stack 0
  3900                           tblptru	equ	0xFF8
  3901                           wreg	equ	0xFE8
  3902                           indf2	equ	0xFDF
  3903                           postinc2	equ	0xFDE
  3904                           fsr2h	equ	0xFDA
  3905                           fsr2l	equ	0xFD9
  3906                           status	equ	0xFD8
  3907                           
  3908 ;; *************** function _INTERRUPT_InterruptManager *****************
  3909 ;; Defined at:
  3910 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;		None
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;		None
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  1    wreg      void 
  3917 ;; Registers used:
  3918 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3926 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3927 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3928 ;;Total ram usage:       14 bytes
  3929 ;; Hardware stack levels used:    1
  3930 ;; Hardware stack levels required when called:    2
  3931 ;; This function calls:
  3932 ;;		_TMR1_ISR
  3933 ;; This function is called by:
  3934 ;;		Interrupt level 2
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           	psect	intcode
  3939  000008                     __pintcode:
  3940                           	opt stack 0
  3941  000008                     _INTERRUPT_InterruptManager:
  3942                           	opt stack 25
  3943                           
  3944                           ;incstack = 0
  3945  000008  824F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3946  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  3947  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3948  000012  CFE9 F003          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  3949  000016  CFEA F004          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  3950  00001A  CFE1 F005          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  3951  00001E  CFE2 F006          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  3952  000022  CFD9 F007          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  3953  000026  CFDA F008          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  3954  00002A  CFF3 F009          	movff	prodl,??_INTERRUPT_InterruptManager+8
  3955  00002E  CFF4 F00A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  3956  000032  CFF6 F00B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  3957  000036  CFF7 F00C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  3958  00003A  CFF8 F00D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  3959  00003E  CFF5 F00E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  3960                           
  3961                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bits.TM
      +                          R1IF == 1)
  3962  000042  BCF2               	btfsc	intcon,6,c	;volatile
  3963  000044  A09D               	btfss	3997,0,c	;volatile
  3964  000046  D003               	goto	i2l108
  3965  000048  B09E               	btfsc	3998,0,c	;volatile
  3966                           
  3967                           ;interrupt_manager.c: 61: {
  3968                           ;interrupt_manager.c: 62: TMR1_ISR();
  3969  00004A  ECA8  F009         	call	_TMR1_ISR	;wreg free
  3970  00004E                     i2l108:
  3971  00004E  C00E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  3972  000052  C00D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  3973  000056  C00C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  3974  00005A  C00B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  3975  00005E  C00A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  3976  000062  C009  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  3977  000066  C008  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  3978  00006A  C007  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  3979  00006E  C006  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  3980  000072  C005  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  3981  000076  C004  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  3982  00007A  C003  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  3983  00007E  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3984  000082  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3985  000086  924F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3986  000088  0011               	retfie		f
  3987  00008A                     __end_of_INTERRUPT_InterruptManager:
  3988                           	opt stack 0
  3989                           pclatu	equ	0xFFB
  3990                           pclath	equ	0xFFA
  3991                           tblptru	equ	0xFF8
  3992                           tblptrh	equ	0xFF7
  3993                           tblptrl	equ	0xFF6
  3994                           tablat	equ	0xFF5
  3995                           prodh	equ	0xFF4
  3996                           prodl	equ	0xFF3
  3997                           intcon	equ	0xFF2
  3998                           fsr0h	equ	0xFEA
  3999                           fsr0l	equ	0xFE9
  4000                           wreg	equ	0xFE8
  4001                           fsr1h	equ	0xFE2
  4002                           fsr1l	equ	0xFE1
  4003                           indf2	equ	0xFDF
  4004                           postinc2	equ	0xFDE
  4005                           fsr2h	equ	0xFDA
  4006                           fsr2l	equ	0xFD9
  4007                           status	equ	0xFD8
  4008                           
  4009 ;; *************** function _TMR1_ISR *****************
  4010 ;; Defined at:
  4011 ;;		line 160 in file "mcc_generated_files/tmr1.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;		None
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;		None
  4016 ;; Return value:  Size  Location     Type
  4017 ;;                  1    wreg      void 
  4018 ;; Registers used:
  4019 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4020 ;; Tracked objects:
  4021 ;;		On entry : 0/0
  4022 ;;		On exit  : 0/0
  4023 ;;		Unchanged: 0/0
  4024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4029 ;;Total ram usage:        0 bytes
  4030 ;; Hardware stack levels used:    1
  4031 ;; Hardware stack levels required when called:    1
  4032 ;; This function calls:
  4033 ;;		Absolute function
  4034 ;;		_TMR1_DefaultInterruptHandler
  4035 ;; This function is called by:
  4036 ;;		_INTERRUPT_InterruptManager
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040                           	psect	text21
  4041  001350                     __ptext21:
  4042                           	opt stack 0
  4043  001350                     _TMR1_ISR:
  4044                           	opt stack 25
  4045                           
  4046                           ;tmr1.c: 164: PIR1bits.TMR1IF = 0;
  4047                           
  4048                           ;incstack = 0
  4049  001350  909E               	bcf	3998,0,c	;volatile
  4050                           
  4051                           ;tmr1.c: 166: TMR1H = (timer1ReloadVal >> 8);
  4052  001352  504E               	movf	_timer1ReloadVal+1,w,c	;volatile
  4053  001354  6ECF               	movwf	4047,c	;volatile
  4054                           
  4055                           ;tmr1.c: 167: TMR1L = timer1ReloadVal;
  4056  001356  C04D  FFCE         	movff	_timer1ReloadVal,4046	;volatile
  4057                           
  4058                           ;tmr1.c: 169: if(TMR1_InterruptHandler)
  4059  00135A  504B               	movf	_TMR1_InterruptHandler,w,c
  4060  00135C  104C               	iorwf	_TMR1_InterruptHandler+1,w,c
  4061  00135E  B4D8               	btfsc	status,2,c
  4062  001360  0012               	return	
  4063                           
  4064                           ;tmr1.c: 170: {
  4065                           ;tmr1.c: 171: TMR1_InterruptHandler();
  4066  001362  D801               	call	i2u16_48
  4067  001364  0012               	return	
  4068  001366                     i2u16_48:
  4069  001366  0005               	push	
  4070  001368  6EFA               	movwf	pclath,c
  4071  00136A  504B               	movf	_TMR1_InterruptHandler,w,c
  4072  00136C  6EFD               	movwf	tosl,c
  4073  00136E  504C               	movf	_TMR1_InterruptHandler+1,w,c
  4074  001370  6EFE               	movwf	tosh,c
  4075  001372  50F8               	movf	tblptru,w,c
  4076  001374  6EFF               	movwf	tosu,c
  4077  001376  50FA               	movf	pclath,w,c
  4078  001378  0012               	return		;indir
  4079  00137A                     __end_of_TMR1_ISR:
  4080                           	opt stack 0
  4081                           tosu	equ	0xFFF
  4082                           tosh	equ	0xFFE
  4083                           tosl	equ	0xFFD
  4084                           pclatu	equ	0xFFB
  4085                           pclath	equ	0xFFA
  4086                           tblptru	equ	0xFF8
  4087                           tblptrh	equ	0xFF7
  4088                           tblptrl	equ	0xFF6
  4089                           tablat	equ	0xFF5
  4090                           prodh	equ	0xFF4
  4091                           prodl	equ	0xFF3
  4092                           intcon	equ	0xFF2
  4093                           fsr0h	equ	0xFEA
  4094                           fsr0l	equ	0xFE9
  4095                           wreg	equ	0xFE8
  4096                           fsr1h	equ	0xFE2
  4097                           fsr1l	equ	0xFE1
  4098                           indf2	equ	0xFDF
  4099                           postinc2	equ	0xFDE
  4100                           fsr2h	equ	0xFDA
  4101                           fsr2l	equ	0xFD9
  4102                           status	equ	0xFD8
  4103                           
  4104 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  4105 ;; Defined at:
  4106 ;;		line 180 in file "mcc_generated_files/tmr1.c"
  4107 ;; Parameters:    Size  Location     Type
  4108 ;;		None
  4109 ;; Auto vars:     Size  Location     Type
  4110 ;;		None
  4111 ;; Return value:  Size  Location     Type
  4112 ;;                  1    wreg      void 
  4113 ;; Registers used:
  4114 ;;		None
  4115 ;; Tracked objects:
  4116 ;;		On entry : 0/0
  4117 ;;		On exit  : 0/0
  4118 ;;		Unchanged: 0/0
  4119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4124 ;;Total ram usage:        0 bytes
  4125 ;; Hardware stack levels used:    1
  4126 ;; This function calls:
  4127 ;;		Nothing
  4128 ;; This function is called by:
  4129 ;;		_TMR1_Initialize
  4130 ;;		_TMR1_ISR
  4131 ;; This function uses a non-reentrant model
  4132 ;;
  4133                           
  4134                           	psect	text22
  4135  001424                     __ptext22:
  4136                           	opt stack 0
  4137  001424                     _TMR1_DefaultInterruptHandler:
  4138                           	opt stack 25
  4139                           
  4140                           ;incstack = 0
  4141  001424  0012               	return		;funcret
  4142  001426                     __end_of_TMR1_DefaultInterruptHandler:
  4143                           	opt stack 0
  4144  0000                     tosu	equ	0xFFF
  4145                           tosh	equ	0xFFE
  4146                           tosl	equ	0xFFD
  4147                           pclatu	equ	0xFFB
  4148                           pclath	equ	0xFFA
  4149                           tblptru	equ	0xFF8
  4150                           tblptrh	equ	0xFF7
  4151                           tblptrl	equ	0xFF6
  4152                           tablat	equ	0xFF5
  4153                           prodh	equ	0xFF4
  4154                           prodl	equ	0xFF3
  4155                           intcon	equ	0xFF2
  4156                           fsr0h	equ	0xFEA
  4157                           fsr0l	equ	0xFE9
  4158                           wreg	equ	0xFE8
  4159                           fsr1h	equ	0xFE2
  4160                           fsr1l	equ	0xFE1
  4161                           indf2	equ	0xFDF
  4162                           postinc2	equ	0xFDE
  4163                           fsr2h	equ	0xFDA
  4164                           fsr2l	equ	0xFD9
  4165                           status	equ	0xFD8
  4166                           tosu	equ	0xFFF
  4167                           tosh	equ	0xFFE
  4168                           tosl	equ	0xFFD
  4169                           pclatu	equ	0xFFB
  4170                           pclath	equ	0xFFA
  4171                           tblptru	equ	0xFF8
  4172                           tblptrh	equ	0xFF7
  4173                           tblptrl	equ	0xFF6
  4174                           tablat	equ	0xFF5
  4175                           prodh	equ	0xFF4
  4176                           prodl	equ	0xFF3
  4177                           intcon	equ	0xFF2
  4178                           fsr0h	equ	0xFEA
  4179                           fsr0l	equ	0xFE9
  4180                           wreg	equ	0xFE8
  4181                           fsr1h	equ	0xFE2
  4182                           fsr1l	equ	0xFE1
  4183                           indf2	equ	0xFDF
  4184                           postinc2	equ	0xFDE
  4185                           fsr2h	equ	0xFDA
  4186                           fsr2l	equ	0xFD9
  4187                           status	equ	0xFD8
  4188                           
  4189                           	psect	text23
  4190  000000                     __ptext23:
  4191                           	opt stack 0
  4192                           tosu	equ	0xFFF
  4193                           tosh	equ	0xFFE
  4194                           tosl	equ	0xFFD
  4195                           pclatu	equ	0xFFB
  4196                           pclath	equ	0xFFA
  4197                           tblptru	equ	0xFF8
  4198                           tblptrh	equ	0xFF7
  4199                           tblptrl	equ	0xFF6
  4200                           tablat	equ	0xFF5
  4201                           prodh	equ	0xFF4
  4202                           prodl	equ	0xFF3
  4203                           intcon	equ	0xFF2
  4204                           fsr0h	equ	0xFEA
  4205                           fsr0l	equ	0xFE9
  4206                           wreg	equ	0xFE8
  4207                           fsr1h	equ	0xFE2
  4208                           fsr1l	equ	0xFE1
  4209                           indf2	equ	0xFDF
  4210                           postinc2	equ	0xFDE
  4211                           fsr2h	equ	0xFDA
  4212                           fsr2l	equ	0xFD9
  4213                           status	equ	0xFD8
  4214                           
  4215                           	psect	rparam
  4216  0000                     tosu	equ	0xFFF
  4217                           tosh	equ	0xFFE
  4218                           tosl	equ	0xFFD
  4219                           pclatu	equ	0xFFB
  4220                           pclath	equ	0xFFA
  4221                           tblptru	equ	0xFF8
  4222                           tblptrh	equ	0xFF7
  4223                           tblptrl	equ	0xFF6
  4224                           tablat	equ	0xFF5
  4225                           prodh	equ	0xFF4
  4226                           prodl	equ	0xFF3
  4227                           intcon	equ	0xFF2
  4228                           fsr0h	equ	0xFEA
  4229                           fsr0l	equ	0xFE9
  4230                           wreg	equ	0xFE8
  4231                           fsr1h	equ	0xFE2
  4232                           fsr1l	equ	0xFE1
  4233                           indf2	equ	0xFDF
  4234                           postinc2	equ	0xFDE
  4235                           fsr2h	equ	0xFDA
  4236                           fsr2l	equ	0xFD9
  4237                           status	equ	0xFD8
  4238                           
  4239                           	psect	temp
  4240  00004F                     btemp:
  4241                           	opt stack 0
  4242  00004F                     	ds	1
  4243  0000                     int$flags	set	btemp
  4244                           tosu	equ	0xFFF
  4245                           tosh	equ	0xFFE
  4246                           tosl	equ	0xFFD
  4247                           pclatu	equ	0xFFB
  4248                           pclath	equ	0xFFA
  4249                           tblptru	equ	0xFF8
  4250                           tblptrh	equ	0xFF7
  4251                           tblptrl	equ	0xFF6
  4252                           tablat	equ	0xFF5
  4253                           prodh	equ	0xFF4
  4254                           prodl	equ	0xFF3
  4255                           intcon	equ	0xFF2
  4256                           fsr0h	equ	0xFEA
  4257                           fsr0l	equ	0xFE9
  4258                           wreg	equ	0xFE8
  4259                           fsr1h	equ	0xFE2
  4260                           fsr1l	equ	0xFE1
  4261                           indf2	equ	0xFDF
  4262                           postinc2	equ	0xFDE
  4263                           fsr2h	equ	0xFDA
  4264                           fsr2l	equ	0xFD9
  4265                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     74      78
    BANK0           160     41      41
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), 

    convertCANid2Reg@passedInSIDH	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempSIDH(COMRAM[1]), 

    convertCANid2Reg@passedInSIDL	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempSIDL(COMRAM[1]), 

    convertCANid2Reg@passedInEIDH	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempEIDH(COMRAM[1]), 

    convertCANid2Reg@passedInEIDL	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempEIDL(COMRAM[1]), 

    CAN_transmit@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> main@cur_data1(BANK0[14]), 


Critical Paths under _main in COMRAM

    _main->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftdiv
    ___ftneg->___ftmul
    ___ftmul->___lwtoft
    ___ftdiv->___ftadd
    ___ftadd->___ftneg
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _CAN_transmit->_convertCANid2Reg

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->___fttol

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0   25768
                                             11 BANK0     30    30      0
                  _ADC_GetConversion
                       _CAN_transmit
                  _SYSTEM_Initialize
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    3704
                                             22 COMRAM     3     0      3
                  _ADC_GetConversion (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4    1811
                                             70 COMRAM     4     0      4
                                              0 BANK0     11    11      0
                  _ADC_GetConversion (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     653
                                             40 COMRAM     3     0      3
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    5350
                                             25 COMRAM    15     9      6
                  _ADC_GetConversion (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    4240
                                             55 COMRAM    15     9      6
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             12     6      6    4774
                                             43 COMRAM    12     6      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2466
                                             14 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
                     _ADC_Initialize
                    _ECAN_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0      98
                                             16 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      98
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECAN_Initialize                                      1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CAN_transmit                                         7     5      2    3288
                                             32 COMRAM     7     5      2
                   _convertCANid2Reg
 ---------------------------------------------------------------------------------
 (2) _convertCANid2Reg                                    18     5     13    1928
                                             14 COMRAM    18     5     13
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      22
                                             14 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _CAN_transmit
     _convertCANid2Reg
   _SYSTEM_Initialize
     _ADC_Initialize
     _ECAN_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer
   ___ftadd
     ___ftmul (ARG)
       _ADC_GetConversion (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         _ADC_GetConversion (ARG)
         ___ftpack (ARG)
     ___ftneg (ARG)
       ___ftmul (ARG)
         _ADC_GetConversion (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ADC_GetConversion (ARG)
           ___ftpack (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       _ADC_GetConversion (ARG)
       ___ftpack (ARG)
   ___ftdiv
     ___ftadd (ARG)
       ___ftmul (ARG)
         _ADC_GetConversion (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ADC_GetConversion (ARG)
           ___ftpack (ARG)
       ___ftneg (ARG)
         ___ftmul (ARG)
           _ADC_GetConversion (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ADC_GetConversion (ARG)
             ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         _ADC_GetConversion (ARG)
         ___ftpack (ARG)
     ___ftmul (ARG)
       _ADC_GetConversion (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         _ADC_GetConversion (ARG)
         ___ftpack (ARG)
     ___ftneg (ARG)
       ___ftmul (ARG)
         _ADC_GetConversion (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ADC_GetConversion (ARG)
           ___ftpack (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       _ADC_GetConversion (ARG)
       ___ftpack (ARG)
   ___ftmul
     _ADC_GetConversion (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       _ADC_GetConversion (ARG)
       ___ftpack (ARG)
   ___ftneg
     ___ftmul (ARG)
       _ADC_GetConversion (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         _ADC_GetConversion (ARG)
         ___ftpack (ARG)
   ___fttol
     _ADC_GetConversion (ARG)
     ___ftadd (ARG)
       ___ftmul (ARG)
         _ADC_GetConversion (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ADC_GetConversion (ARG)
           ___ftpack (ARG)
       ___ftneg (ARG)
         ___ftmul (ARG)
           _ADC_GetConversion (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ADC_GetConversion (ARG)
             ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         _ADC_GetConversion (ARG)
         ___ftpack (ARG)
     ___ftdiv (ARG)
       ___ftadd (ARG)
         ___ftmul (ARG)
           _ADC_GetConversion (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ADC_GetConversion (ARG)
             ___ftpack (ARG)
         ___ftneg (ARG)
           ___ftmul (ARG)
             _ADC_GetConversion (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               _ADC_GetConversion (ARG)
               ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ADC_GetConversion (ARG)
           ___ftpack (ARG)
       ___ftmul (ARG)
         _ADC_GetConversion (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ADC_GetConversion (ARG)
           ___ftpack (ARG)
       ___ftneg (ARG)
         ___ftmul (ARG)
           _ADC_GetConversion (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ADC_GetConversion (ARG)
             ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         _ADC_GetConversion (ARG)
         ___ftpack (ARG)
     ___ftmul (ARG)
       _ADC_GetConversion (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         _ADC_GetConversion (ARG)
         ___ftpack (ARG)
     ___ftneg (ARG)
       ___ftmul (ARG)
         _ADC_GetConversion (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ADC_GetConversion (ARG)
           ___ftpack (ARG)
     ___lwtoft (ARG)
       _ADC_GetConversion (ARG)
       ___ftpack (ARG)
   ___lwtoft
     _ADC_GetConversion (ARG)
     ___ftpack (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     4A      4E       1       83.0%
STACK                0      0       0       2        0.0%
DATA                 0      0      77       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     29      29       5       25.6%
ABS                  0      0      77       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BIGRAM             E40      0       0      35        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sat Nov 04 17:01:51 2017

                                      l27 1338                  __size_of_ECAN_Initialize 00EE  
                             __CFG_BORV$3 000000                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                              ___ftadd@exp1 0037  
                            ___ftadd@exp2 0036                              ___ftadd@sign 0035  
                                     l354 08AA                                       l356 09B8  
                                     l721 0B0A                                       l725 0B34  
                                     l736 0BE4                                       l745 0C00  
                                     l756 11D4                                       l698 1294  
                                     l778 13B4                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                                       u805 0D0A  
                                     u815 0DAA                                       u941 0AD6  
                                     u951 0AEA                           _timer1ReloadVal 004D  
                                     tosl 000FFD                                       wreg 000FE8  
                             main@battery 0072                              ___ftdiv@cntr 0041  
                            ___ftdiv@sign 0046                                      l2103 0B94  
                                    l2105 0B9E                                      l2123 0C1C  
                                    l2115 0BD2                                      l2107 0BA8  
                                    l2133 0C4C                                      l2117 0BDC  
                                    l2109 0BB0                                      l2213 0FD0  
                                    l2143 1148                                      l2223 0FF8  
                                    l2081 0B42                                      l2209 0FC0  
                                    l2075 0B18                                      l2219 0FE8  
                                    l2149 1170                                      l2097 0B72  
                                    l2169 11AE                                      l2195 0F8E  
                                    l2347 0E46                                      l2189 0F66  
                                    l2365 0EC8                                      l1911 1216  
                                    l2383 0F2C                                      l2375 0EF6  
                                    l2377 0F06                                      l2369 0EDC  
                                    l2393 00CC                                      l1923 1262  
                                    l1915 1224                                      l2379 0F10  
                                    l1925 1280                                      l1917 122E  
                                    l1871 1112                                      l1927 128A  
                                    l1919 124C                                      l1859 1036  
                                    l1897 0D80                                      u1201 0F4E  
                                    u1221 0F76                                      u1151 1130  
                                    u1171 1158                                      _LATA 000F89  
                                    _LATB 000F8A                                      u1351 0E24  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      u1370 0E6C  
                                    u1375 0E62                                      _WPUB 000F5B  
                                    _main 008E                              ___ftpack@arg 000F  
            convertCANid2Reg@passedInEIDH 0014              convertCANid2Reg@passedInEIDL 0016  
                            ___ftpack@exp 0012                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 004F              convertCANid2Reg@passedInSIDH 0018  
            convertCANid2Reg@passedInSIDL 001A                   CAN_transmit@returnValue 0023  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 008A                             __CFG_IESO$OFF 000000  
                           __CFG_FOSC$HS1 000000                ??_TMR1_SetInterruptHandler 0011  
                           __CFG_MCLRE$ON 000000                              ___ftmul@cntr 0027  
                            ___param_bank 000000                              ___ftmul@sign 0028  
                            ___fttol@exp1 006A                              ___fttol@lval 0066  
          __size_of_OSCILLATOR_Initialize 0012             __end_of_OSCILLATOR_Initialize 1404  
                                   ?_main 0001                           __end_of___ftadd 0C72  
                         __end_of___ftdiv 1206                           _TMR1_StartTimer 141C  
                         __end_of___ftneg 13C2                           __end_of___ftmul 1032  
                                   _T1CON 000FCD                           __end_of___fttol 0F3E  
                                   i2l108 004E                              main@down_sol 0071  
                                   _TMR1H 000FCF                                     _TMR1L 000FCE  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                              main@radiator 006D  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                          __end_of_TMR1_ISR 137A  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
                    __end_of_CAN_transmit 0AC6                             ___ftpack@sign 0013  
                                   main@x 0073                   __end_of_TMR1_Initialize 12EC  
                                   pclath 000FFA                                     tablat 000FF5  
                                   status 000FD8                      CAN_transmit@tempEIDH 0024  
                    CAN_transmit@tempEIDL 0025                      CAN_transmit@tempSIDH 0026  
                    CAN_transmit@tempSIDL 0027                           __initialization 1404  
                            __end_of_main 0788               ?_INTERRUPT_InterruptManager 0001  
                                  ??_main 004B                             ___fttol@sign1 0065  
                           __activetblptr 000002                            __CFG_PLLCFG$ON 000000  
                          __CFG_RETEN$OFF 000000                         ??_ECAN_Initialize 000F  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                                    _CANCON 000F6F  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                                  _ANCON0 000F5D                                    _ANCON1 000F5C  
                        __end_of___ftpack 12B4                             main@cur_data1 007B  
                                  _T1GCON 000FAA                           __CFG_BBSIZ$BB2K 000000  
                          __CFG_WDTEN$OFF 000000                          __end_of___lwtoft 139E  
                                  _OSCCON 000FD3                                    _RXB0D0 000F66  
                                  _RXB0D1 000F67                                    _RXB0D2 000F68  
                                  _RXB0D3 000F69                                    _RXB0D4 000F6A  
                                  _RXB1D0 000F36                                    _RXB0D5 000F6B  
                                  _RXB1D1 000F37                                    _RXB0D6 000F6C  
                                  _RXB1D2 000F38                                    _RXB0D7 000F6D  
                                  _RXB1D3 000F39                                    _RXB1D4 000F3A  
                                  _RXB1D5 000F3B                                    _RXB1D6 000F3C  
                                  _RXB1D7 000F3D                                    _TXB0D0 000F26  
                                  _TXB0D1 000F27                                    _TXB0D2 000F28  
                                  _TXB0D3 000F29                                    _TXB0D4 000F2A  
                                  _TXB1D0 000F16                                    _TXB0D5 000F2B  
                                  _TXB1D1 000F17                                    _TXB0D6 000F2C  
                                  _TXB1D2 000F18                                    _TXB0D7 000F2D  
                                  _TXB1D3 000F19                                    _TXB1D4 000F1A  
                                  _TXB2D0 000F06                                    _TXB1D5 000F1B  
                                  _TXB2D1 000F07                                    _TXB1D6 000F1C  
                                  _TXB2D2 000F08                                    _TXB1D7 000F1D  
                                  _TXB2D3 000F09                                    _TXB2D4 000F0A  
                                  _TXB2D5 000F0B                                    _TXB2D6 000F0C  
                                  _TXB2D7 000F0D                             main@fuel_pump 006E  
                          __CFG_XINST$OFF 000000      __end_of_TMR1_DefaultInterruptHandler 1426  
   __size_of_TMR1_DefaultInterruptHandler 0002              _TMR1_DefaultInterruptHandler 1424  
                 __end_of_TMR1_StartTimer 1420                                 ??___ftadd 0032  
                          __CFG_STVREN$ON 000000                                 ??___ftdiv 003E  
                               ??___ftneg 002C                                 ??___ftmul 0020  
                               ??___fttol 0060                     ___ftmul@f3_as_product 0024  
               __size_of_convertCANid2Reg 019E                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                ADC_GetConversion@channel 0013  TMR1_SetInterruptHandler@InterruptHandler 000F  
           __size_of_INTERRUPT_Initialize 0004                          ?_TMR1_Initialize 0001  
                       _SYSTEM_Initialize 13C2                                __accesstop 0060  
                 __end_of__initialization 1404                                ___ftadd@f1 002C  
                              ___ftadd@f2 002F                        ?_SYSTEM_Initialize 0001  
                           ___rparam_used 000001                                ___ftdiv@f1 0038  
                              ___ftdiv@f2 003B                                ___ftdiv@f3 0042  
                              ___ftneg@f1 0029                                ___ftmul@f1 001A  
                              ___ftmul@f2 001D                                ___fttol@f1 0047  
                          __pcstackCOMRAM 0001                       ??_SYSTEM_Initialize 0013  
                               ?_TMR1_ISR 0001             ?_TMR1_DefaultInterruptHandler 0001  
                              ___lwtoft@c 0017                     __size_of_CAN_transmit 033E  
               __end_of_SYSTEM_Initialize 13DC                                __pnvCOMRAM 004B  
                            _CAN_transmit 0788                          ?_TMR1_StartTimer 0001  
                              ??_TMR1_ISR 0001                            main@clutch_sol 006C  
                                 _ECANCON 000F72                                   _CANSTAT 000F6E  
                               ?___ftpack 000F                                   _BRGCON1 000E43  
                                 _BRGCON2 000E44                                   _BRGCON3 000E45  
                 __size_of_ADC_Initialize 0016                                 ?___lwtoft 0017  
                        __CFG_CANMX$PORTB 000000                                   _REFOCON 000F9A  
                                 _OSCCON2 000FD2                                   i2u16_48 1366  
                                 _RXB0DLC 000F65                                   _RXB1DLC 000F35  
                                 _OSCTUNE 000F9B                                   _TXB0DLC 000F25  
                                 _TXB1DLC 000F15                                   _TXB2DLC 000F05  
                         __CFG_PWRTEN$OFF 000000                                   __Hparam 0000  
                                 __Lparam 0000                                   ___ftadd 0AC6  
                                 ___ftdiv 1120                                   ___ftneg 139E  
                                 ___ftmul 0F3E                                   ___fttol 0E10  
                         _ECAN_Initialize 1032                                   __pcinit 1404  
                              ??___ftpack 0014                                   __ramtop 0F00  
                                 __ptext0 008E                                   __ptext1 137A  
                                 __ptext2 0E10                                   __ptext3 139E  
                                 __ptext4 0F3E                                   __ptext5 1120  
                                 __ptext6 0AC6                                   __ptext7 1206  
                                 __ptext8 13C2                                   __ptext9 12B4  
                              ??___lwtoft 001A            ??_TMR1_DefaultInterruptHandler 0001  
                               _T1CONbits 000FCD                     _OSCILLATOR_Initialize 13F2  
       __size_of_TMR1_SetInterruptHandler 000A                          _convertCANid2Reg 0C72  
                ??_PIN_MANAGER_Initialize 000F                 ?_TMR1_SetInterruptHandler 000F  
                       __CFG_MSSPMSK$MSK7 000000                __size_of_SYSTEM_Initialize 001A  
                                 main@drs 0070                                   main@ewp 006F  
                    end_of_initialization 1404                             __Lmediumconst 0000  
                                 postinc2 000FDE                    CAN_transmit@tempCanMsg 0021  
                             ___ftdiv@exp 0045                   __end_of_ECAN_Initialize 1120  
                              main@up_sol 006B                               ___ftmul@exp 0023  
            __end_of_INTERRUPT_Initialize 1424                         __size_of_TMR1_ISR 002A  
                          _ADC_Initialize 13DC                    ?_OSCILLATOR_Initialize 0001  
                     start_initialization 1404           __size_of_PIN_MANAGER_Initialize 0034  
                __size_of_TMR1_Initialize 0038                    __end_of_ADC_Initialize 13F2  
                       __size_of___ftpack 00AE                         __size_of___lwtoft 0024  
                           __pcstackBANK0 0060                          ?_ECAN_Initialize 0001  
                  _PIN_MANAGER_Initialize 12EC                  __end_of_convertCANid2Reg 0E10  
                               __pintcode 0008          __end_of_TMR1_SetInterruptHandler 141C  
                                ?___ftadd 002C                                  ?___ftdiv 0038  
                                ?___ftneg 0029                                  ?___ftmul 001A  
                                ?___fttol 0047                           ?_ADC_Initialize 0001  
            ??_INTERRUPT_InterruptManager 0001                  __size_of_TMR1_StartTimer 0004  
                             _COMSTATbits 000F71            convertCANid2Reg@tempPassedInID 000F  
                    _INTERRUPT_Initialize 1420                                  _PIE1bits 000F9D  
                                _PIE5bits 000F76       __size_of_INTERRUPT_InterruptManager 0082  
                                _PIR1bits 000F9E                                  _PIR5bits 000F77  
                                _RXB0EIDH 000F63                                  _RXB0EIDL 000F64  
                                _RXB1EIDH 000F33                                  _RXB1EIDL 000F34  
                                _RCONbits 000FD0                                  _RXB0SIDH 000F61  
                                _RXB0SIDL 000F62                                  _RXB1SIDH 000F31  
                                _RXF0EIDH 000EE2                                  _RXB1SIDL 000F32  
                                _RXF0EIDL 000EE3                                  _RXF1EIDH 000EE6  
                                _RXF1EIDL 000EE7                                  _RXF2EIDH 000EEA  
                                _RXF2EIDL 000EEB                                  _RXF3EIDH 000EEE  
                                _RXF3EIDL 000EEF                                  _RXF4EIDH 000EF2  
                                _RXF4EIDL 000EF3                                  _RXF5EIDH 000EF6  
                                _RXF5EIDL 000EF7                                  _RXF0SIDH 000EE0  
                                _RXF0SIDL 000EE1                                  _TXB0EIDH 000F23  
                                _RXF1SIDH 000EE4                                  _TXB0EIDL 000F24  
                                _RXF1SIDL 000EE5                                  _TXB1EIDH 000F13  
                                _RXF2SIDH 000EE8                                  _TXB1EIDL 000F14  
                                _RXF2SIDL 000EE9                                  _TXB2EIDH 000F03  
                                _RXF3SIDH 000EEC                                  _TXB2EIDL 000F04  
                                _RXF3SIDL 000EED                                  _RXF4SIDH 000EF0  
                                _RXF4SIDL 000EF1                                  _RXF5SIDH 000EF4  
                                _RXF5SIDL 000EF5                                  _TMR1_ISR 1350  
                                _RXM0EIDH 000EFA                                  _RXM0EIDL 000EFB  
                                _TXB0SIDH 000F21                                  _RXM1EIDH 000EFE  
                                _TXB0SIDL 000F22                                  _RXM1EIDL 000EFF  
                                _TXB1SIDH 000F11                                  _TXB1SIDL 000F12  
                                _TXB2SIDH 000F01                                  _TXB2SIDL 000F02  
                                _RXM0SIDH 000EF8                                  _RXM0SIDL 000EF9  
                                _RXM1SIDH 000EFC                                  _RXM1SIDL 000EFD  
                       ??_TMR1_Initialize 0011                                _ADCON0bits 000FC2  
                        __CFG_SOSCSEL$DIG 000000                     ?_INTERRUPT_Initialize 0001  
                                __Hrparam 0000                                  __Lrparam 0000  
                       _ADC_GetConversion 1320                        __CFG_BOREN$SBORDIS 000000  
               convertCANid2Reg@canIdType 0013                   ??_OSCILLATOR_Initialize 000F  
                      ?_ADC_GetConversion 000F                          __size_of___ftadd 01AC  
                        __size_of___ftdiv 00E6                          __size_of___ftneg 0024  
                        __size_of___ftmul 00F4                          __size_of___fttol 012E  
                                ___ftpack 1206                  _TMR1_SetInterruptHandler 1412  
                                ___lwtoft 137A                     _TMR1_InterruptHandler 004B  
                     ??_ADC_GetConversion 0011                   convertCANid2Reg@wipSIDL 0020  
                                __ptext10 141C                                  __ptext11 1412  
                                __ptext12 12EC                                  __ptext21 1350  
                                __ptext13 13F2                                _T1GCONbits 000FAA  
                                __ptext22 1424                                  __ptext14 1420  
                                __ptext23 0000                                  __ptext15 1032  
                                __ptext16 13DC                                  __ptext17 0788  
                                __ptext18 0C72                                  __ptext19 1320  
                       ??_TMR1_StartTimer 000F                             __size_of_main 06FA  
               __end_of_ADC_GetConversion 1350                             ?_CAN_transmit 0021  
                                int$flags 004F                             main@ADCResult 0079  
                                main@Vref 0076        __end_of_INTERRUPT_InterruptManager 008A  
              _INTERRUPT_InterruptManager 0008                       __CFG_INTOSCSEL$HIGH 000000  
                             _RXB0CONbits 000F60                               _RXB1CONbits 000F30  
                              _INTCONbits 000FF2                    ??_INTERRUPT_Initialize 000F  
                                intlevel2 0000                   ?_PIN_MANAGER_Initialize 0001  
                             _TXB0CONbits 000F20                               _TXB1CONbits 000F10  
                             _TXB2CONbits 000F00                          ??_ADC_Initialize 000F  
                          ??_CAN_transmit 0023                         ?_convertCANid2Reg 000F  
                      __CFG_WDTPS$1048576 000000                        ??_convertCANid2Reg 001C  
          __end_of_PIN_MANAGER_Initialize 1320                       __CFG_BORPWR$ZPBORMV 000000  
              __size_of_ADC_GetConversion 0030                           _TMR1_Initialize 12B4  
