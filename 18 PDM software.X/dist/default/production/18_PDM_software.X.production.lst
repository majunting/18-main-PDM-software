

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sat Nov 04 15:31:44 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F45K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35  0000                     
    36                           ; Version 1.42
    37                           ; Generated 13/04/2017 GMT
    38                           ; 
    39                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F45K80 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     
    71                           	psect	nvCOMRAM
    72  00003A                     __pnvCOMRAM:
    73                           	opt stack 0
    74  00003A                     _TMR1_InterruptHandler:
    75                           	opt stack 0
    76  00003A                     	ds	2
    77  00003C                     _timer1ReloadVal:
    78                           	opt stack 0
    79  00003C                     	ds	2
    80  0000                     _BRGCON3	set	3653
    81  0000                     _BRGCON2	set	3652
    82  0000                     _BRGCON1	set	3651
    83  0000                     _RXF5SIDL	set	3829
    84  0000                     _RXF5SIDH	set	3828
    85  0000                     _RXF5EIDL	set	3831
    86  0000                     _RXF5EIDH	set	3830
    87  0000                     _RXF4SIDL	set	3825
    88  0000                     _RXF4SIDH	set	3824
    89  0000                     _RXF4EIDL	set	3827
    90  0000                     _RXF4EIDH	set	3826
    91  0000                     _RXF3SIDL	set	3821
    92  0000                     _RXF3SIDH	set	3820
    93  0000                     _RXF3EIDL	set	3823
    94  0000                     _RXF3EIDH	set	3822
    95  0000                     _RXF2SIDL	set	3817
    96  0000                     _RXF2SIDH	set	3816
    97  0000                     _RXF2EIDL	set	3819
    98  0000                     _RXF2EIDH	set	3818
    99  0000                     _RXF1SIDL	set	3813
   100  0000                     _RXF1SIDH	set	3812
   101  0000                     _RXF1EIDL	set	3815
   102  0000                     _RXF1EIDH	set	3814
   103  0000                     _RXF0SIDL	set	3809
   104  0000                     _RXF0SIDH	set	3808
   105  0000                     _RXF0EIDL	set	3811
   106  0000                     _RXF0EIDH	set	3810
   107  0000                     _RXM1SIDL	set	3837
   108  0000                     _RXM1SIDH	set	3836
   109  0000                     _RXM1EIDL	set	3839
   110  0000                     _RXM1EIDH	set	3838
   111  0000                     _RXM0SIDL	set	3833
   112  0000                     _RXM0SIDH	set	3832
   113  0000                     _RXM0EIDL	set	3835
   114  0000                     _RXM0EIDH	set	3834
   115  0000                     _RXB1D7	set	3901
   116  0000                     _RXB1D6	set	3900
   117  0000                     _RXB1D5	set	3899
   118  0000                     _RXB1D4	set	3898
   119  0000                     _RXB1D3	set	3897
   120  0000                     _RXB1D2	set	3896
   121  0000                     _RXB1D1	set	3895
   122  0000                     _RXB1D0	set	3894
   123  0000                     _RXB1DLC	set	3893
   124  0000                     _RXB1SIDH	set	3889
   125  0000                     _RXB1EIDL	set	3892
   126  0000                     _RXB1EIDH	set	3891
   127  0000                     _RXB1SIDL	set	3890
   128  0000                     _RXB1CONbits	set	3888
   129  0000                     _TXB2D7	set	3853
   130  0000                     _TXB2D6	set	3852
   131  0000                     _TXB2D5	set	3851
   132  0000                     _TXB2D4	set	3850
   133  0000                     _TXB2D3	set	3849
   134  0000                     _TXB2D2	set	3848
   135  0000                     _TXB2D1	set	3847
   136  0000                     _TXB2D0	set	3846
   137  0000                     _TXB2DLC	set	3845
   138  0000                     _TXB2SIDL	set	3842
   139  0000                     _TXB2SIDH	set	3841
   140  0000                     _TXB2EIDL	set	3844
   141  0000                     _TXB2EIDH	set	3843
   142  0000                     _TXB2CONbits	set	3840
   143  0000                     _TXB1D7	set	3869
   144  0000                     _TXB1D6	set	3868
   145  0000                     _TXB1D5	set	3867
   146  0000                     _TXB1D4	set	3866
   147  0000                     _TXB1D3	set	3865
   148  0000                     _TXB1D2	set	3864
   149  0000                     _TXB1D1	set	3863
   150  0000                     _TXB1D0	set	3862
   151  0000                     _TXB1DLC	set	3861
   152  0000                     _TXB1SIDL	set	3858
   153  0000                     _TXB1SIDH	set	3857
   154  0000                     _TXB1EIDL	set	3860
   155  0000                     _TXB1EIDH	set	3859
   156  0000                     _TXB1CONbits	set	3856
   157  0000                     _TXB0D7	set	3885
   158  0000                     _TXB0D6	set	3884
   159  0000                     _TXB0D5	set	3883
   160  0000                     _TXB0D4	set	3882
   161  0000                     _TXB0D3	set	3881
   162  0000                     _TXB0D2	set	3880
   163  0000                     _TXB0D1	set	3879
   164  0000                     _TXB0D0	set	3878
   165  0000                     _TXB0DLC	set	3877
   166  0000                     _TXB0SIDL	set	3874
   167  0000                     _TXB0SIDH	set	3873
   168  0000                     _TXB0EIDL	set	3876
   169  0000                     _TXB0EIDH	set	3875
   170  0000                     _TXB0CONbits	set	3872
   171  0000                     _WPUB	set	3931
   172  0000                     _ANCON1	set	3932
   173  0000                     _ANCON0	set	3933
   174  0000                     _T1GCONbits	set	4010
   175  0000                     _T1CONbits	set	4045
   176  0000                     _TMR1L	set	4046
   177  0000                     _TMR1H	set	4047
   178  0000                     _T1GCON	set	4010
   179  0000                     _T1CON	set	4045
   180  0000                     _COMSTATbits	set	3953
   181  0000                     _RXB0D7	set	3949
   182  0000                     _RXB0D6	set	3948
   183  0000                     _RXB0D5	set	3947
   184  0000                     _RXB0D4	set	3946
   185  0000                     _RXB0D3	set	3945
   186  0000                     _RXB0D2	set	3944
   187  0000                     _RXB0D1	set	3943
   188  0000                     _RXB0D0	set	3942
   189  0000                     _RXB0DLC	set	3941
   190  0000                     _RXB0SIDH	set	3937
   191  0000                     _RXB0EIDL	set	3940
   192  0000                     _RXB0EIDH	set	3939
   193  0000                     _RXB0SIDL	set	3938
   194  0000                     _RXB0CONbits	set	3936
   195  0000                     _PIE5bits	set	3958
   196  0000                     _PIR5bits	set	3959
   197  0000                     _ECANCON	set	3954
   198  0000                     _CANSTAT	set	3950
   199  0000                     _CANCON	set	3951
   200  0000                     _PIR1bits	set	3998
   201  0000                     _PIE1bits	set	3997
   202  0000                     _INTCONbits	set	4082
   203  0000                     _RCONbits	set	4048
   204  0000                     _TRISD	set	3989
   205  0000                     _TRISC	set	3988
   206  0000                     _TRISB	set	3987
   207  0000                     _TRISA	set	3986
   208  0000                     _TRISE	set	3990
   209  0000                     _LATC	set	3979
   210  0000                     _LATB	set	3978
   211  0000                     _LATA	set	3977
   212  0000                     _LATD	set	3980
   213  0000                     _LATE	set	3981
   214  0000                     _REFOCON	set	3994
   215  0000                     _OSCTUNE	set	3995
   216  0000                     _OSCCON2	set	4050
   217  0000                     _OSCCON	set	4051
   218  0000                     _ADCON0bits	set	4034
   219  0000                     _ADRESL	set	4035
   220  0000                     _ADRESH	set	4036
   221  0000                     _ADCON2	set	4032
   222  0000                     _ADCON1	set	4033
   223  0000                     _ADCON0	set	4034
   224                           
   225                           ; #config settings
   226  0000                     
   227                           	psect	cinit
   228  000EB0                     __pcinit:
   229                           	opt stack 0
   230  000EB0                     start_initialization:
   231                           	opt stack 0
   232  000EB0                     __initialization:
   233                           	opt stack 0
   234  000EB0                     end_of_initialization:
   235                           	opt stack 0
   236  000EB0                     __end_of__initialization:
   237                           	opt stack 0
   238  000EB0  903E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   239  000EB2  923E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   240  000EB4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   241  000EB6  6EF8               	movwf	tblptru,c
   242  000EB8  0100               	movlb	0
   243  000EBA  EF47  F000         	goto	_main	;jump to C main() function
   244                           tblptru	equ	0xFF8
   245                           
   246                           	psect	cstackBANK0
   247  000060                     __pcstackBANK0:
   248                           	opt stack 0
   249  000060                     main@timer_diff:
   250                           	opt stack 0
   251                           
   252                           ; 2 bytes @ 0x0
   253  000060                     	ds	2
   254  000062                     main@Vref:
   255                           	opt stack 0
   256                           
   257                           ; 3 bytes @ 0x2
   258  000062                     	ds	3
   259  000065                     main@up_sol:
   260                           	opt stack 0
   261                           
   262                           ; 2 bytes @ 0x5
   263  000065                     	ds	2
   264  000067                     main@clutch_sol:
   265                           	opt stack 0
   266                           
   267                           ; 2 bytes @ 0x7
   268  000067                     	ds	2
   269  000069                     main@battery:
   270                           	opt stack 0
   271                           
   272                           ; 2 bytes @ 0x9
   273  000069                     	ds	2
   274  00006B                     main@radiator:
   275                           	opt stack 0
   276                           
   277                           ; 2 bytes @ 0xB
   278  00006B                     	ds	2
   279  00006D                     main@fuel_pump:
   280                           	opt stack 0
   281                           
   282                           ; 2 bytes @ 0xD
   283  00006D                     	ds	2
   284  00006F                     main@ewp:
   285                           	opt stack 0
   286                           
   287                           ; 2 bytes @ 0xF
   288  00006F                     	ds	2
   289  000071                     main@drs:
   290                           	opt stack 0
   291                           
   292                           ; 2 bytes @ 0x11
   293  000071                     	ds	2
   294  000073                     main@down_sol:
   295                           	opt stack 0
   296                           
   297                           ; 2 bytes @ 0x13
   298  000073                     	ds	2
   299  000075                     main@timer_prev:
   300                           	opt stack 0
   301                           
   302                           ; 2 bytes @ 0x15
   303  000075                     	ds	2
   304  000077                     main@timer_cur:
   305                           	opt stack 0
   306                           
   307                           ; 2 bytes @ 0x17
   308  000077                     	ds	2
   309  000079                     main@x:
   310                           	opt stack 0
   311                           
   312                           ; 3 bytes @ 0x19
   313  000079                     	ds	3
   314  00007C                     main@ADCResult:
   315                           	opt stack 0
   316                           
   317                           ; 2 bytes @ 0x1C
   318  00007C                     	ds	2
   319  00007E                     main@cur_data1:
   320                           	opt stack 0
   321                           
   322                           ; 14 bytes @ 0x1E
   323  00007E                     	ds	14
   324                           tblptru	equ	0xFF8
   325                           
   326                           	psect	cstackCOMRAM
   327  000001                     __pcstackCOMRAM:
   328                           	opt stack 0
   329  000001                     ??_INTERRUPT_InterruptManager:
   330  000001                     
   331                           ; 1 bytes @ 0x0
   332  000001                     	ds	14
   333  00000F                     ??_ECAN_Initialize:
   334  00000F                     ?_TMR1_ReadTimer:
   335                           	opt stack 0
   336  00000F                     ?_ADC_GetConversion:
   337                           	opt stack 0
   338  00000F                     ?___ftpack:
   339                           	opt stack 0
   340  00000F                     TMR1_SetInterruptHandler@InterruptHandler:
   341                           	opt stack 0
   342  00000F                     ___ftpack@arg:
   343                           	opt stack 0
   344  00000F                     convertCANid2Reg@tempPassedInID:
   345                           	opt stack 0
   346                           
   347                           ; 4 bytes @ 0xE
   348  00000F                     	ds	2
   349  000011                     ??_TMR1_Initialize:
   350  000011                     ??_TMR1_ReadTimer:
   351  000011                     ??_ADC_GetConversion:
   352                           
   353                           ; 1 bytes @ 0x10
   354  000011                     	ds	1
   355  000012                     ___ftpack@exp:
   356                           	opt stack 0
   357                           
   358                           ; 1 bytes @ 0x11
   359  000012                     	ds	1
   360  000013                     ADC_GetConversion@channel:
   361                           	opt stack 0
   362  000013                     convertCANid2Reg@canIdType:
   363                           	opt stack 0
   364  000013                     ___ftpack@sign:
   365                           	opt stack 0
   366  000013                     TMR1_ReadTimer@readVal:
   367                           	opt stack 0
   368                           
   369                           ; 2 bytes @ 0x12
   370  000013                     	ds	1
   371  000014                     ??___ftpack:
   372  000014                     convertCANid2Reg@passedInEIDH:
   373                           	opt stack 0
   374                           
   375                           ; 2 bytes @ 0x13
   376  000014                     	ds	1
   377  000015                     TMR1_ReadTimer@readValHigh:
   378                           	opt stack 0
   379                           
   380                           ; 1 bytes @ 0x14
   381  000015                     	ds	1
   382  000016                     TMR1_ReadTimer@readValLow:
   383                           	opt stack 0
   384  000016                     convertCANid2Reg@passedInEIDL:
   385                           	opt stack 0
   386                           
   387                           ; 2 bytes @ 0x15
   388  000016                     	ds	1
   389  000017                     ?___ftdiv:
   390                           	opt stack 0
   391  000017                     ?___lwtoft:
   392                           	opt stack 0
   393  000017                     ___lwtoft@c:
   394                           	opt stack 0
   395  000017                     ___ftdiv@f1:
   396                           	opt stack 0
   397                           
   398                           ; 3 bytes @ 0x16
   399  000017                     	ds	1
   400  000018                     convertCANid2Reg@passedInSIDH:
   401                           	opt stack 0
   402                           
   403                           ; 2 bytes @ 0x17
   404  000018                     	ds	2
   405  00001A                     ?___ftmul:
   406                           	opt stack 0
   407  00001A                     convertCANid2Reg@passedInSIDL:
   408                           	opt stack 0
   409  00001A                     ___ftdiv@f2:
   410                           	opt stack 0
   411  00001A                     ___ftmul@f1:
   412                           	opt stack 0
   413                           
   414                           ; 3 bytes @ 0x19
   415  00001A                     	ds	2
   416  00001C                     ??_convertCANid2Reg:
   417                           
   418                           ; 1 bytes @ 0x1B
   419  00001C                     	ds	1
   420  00001D                     ??___ftdiv:
   421  00001D                     ___ftmul@f2:
   422                           	opt stack 0
   423                           
   424                           ; 3 bytes @ 0x1C
   425  00001D                     	ds	3
   426  000020                     ??___ftmul:
   427  000020                     convertCANid2Reg@wipSIDL:
   428                           	opt stack 0
   429  000020                     ___ftdiv@cntr:
   430                           	opt stack 0
   431                           
   432                           ; 1 bytes @ 0x1F
   433  000020                     	ds	1
   434  000021                     CAN_transmit@tempCanMsg:
   435                           	opt stack 0
   436  000021                     ___ftdiv@f3:
   437                           	opt stack 0
   438                           
   439                           ; 3 bytes @ 0x20
   440  000021                     	ds	2
   441  000023                     CAN_transmit@returnValue:
   442                           	opt stack 0
   443  000023                     ___ftmul@exp:
   444                           	opt stack 0
   445                           
   446                           ; 1 bytes @ 0x22
   447  000023                     	ds	1
   448  000024                     CAN_transmit@tempEIDH:
   449                           	opt stack 0
   450  000024                     ___ftdiv@exp:
   451                           	opt stack 0
   452  000024                     ___ftmul@f3_as_product:
   453                           	opt stack 0
   454                           
   455                           ; 3 bytes @ 0x23
   456  000024                     	ds	1
   457  000025                     CAN_transmit@tempEIDL:
   458                           	opt stack 0
   459  000025                     ___ftdiv@sign:
   460                           	opt stack 0
   461                           
   462                           ; 1 bytes @ 0x24
   463  000025                     	ds	1
   464  000026                     CAN_transmit@tempSIDH:
   465                           	opt stack 0
   466                           
   467                           ; 1 bytes @ 0x25
   468  000026                     	ds	1
   469  000027                     CAN_transmit@tempSIDL:
   470                           	opt stack 0
   471  000027                     ___ftmul@cntr:
   472                           	opt stack 0
   473                           
   474                           ; 1 bytes @ 0x26
   475  000027                     	ds	1
   476  000028                     ___ftmul@sign:
   477                           	opt stack 0
   478                           
   479                           ; 1 bytes @ 0x27
   480  000028                     	ds	1
   481  000029                     ?___fttol:
   482                           	opt stack 0
   483  000029                     ___fttol@f1:
   484                           	opt stack 0
   485                           
   486                           ; 3 bytes @ 0x28
   487  000029                     	ds	4
   488  00002D                     ??___fttol:
   489                           
   490                           ; 1 bytes @ 0x2C
   491  00002D                     	ds	5
   492  000032                     ___fttol@sign1:
   493                           	opt stack 0
   494                           
   495                           ; 1 bytes @ 0x31
   496  000032                     	ds	1
   497  000033                     ___fttol@lval:
   498                           	opt stack 0
   499                           
   500                           ; 4 bytes @ 0x32
   501  000033                     	ds	4
   502  000037                     ___fttol@exp1:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0x36
   506  000037                     	ds	1
   507  000038                     ??_main:
   508                           
   509                           ; 1 bytes @ 0x37
   510  000038                     	ds	2
   511                           tblptru	equ	0xFF8
   512                           
   513 ;;
   514 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   515 ;;
   516 ;; *************** function _main *****************
   517 ;; Defined at:
   518 ;;		line 51 in file "main.c"
   519 ;; Parameters:    Size  Location     Type
   520 ;;		None
   521 ;; Auto vars:     Size  Location     Type
   522 ;;  cur_data1      14   30[BANK0 ] struct .
   523 ;;  x               3   25[BANK0 ] struct .
   524 ;;  Vref            3    2[BANK0 ] struct .
   525 ;;  ADCResult       2   28[BANK0 ] unsigned int 
   526 ;;  timer_cur       2   23[BANK0 ] unsigned int 
   527 ;;  timer_prev      2   21[BANK0 ] unsigned int 
   528 ;;  down_sol        2   19[BANK0 ] unsigned int 
   529 ;;  drs             2   17[BANK0 ] unsigned int 
   530 ;;  ewp             2   15[BANK0 ] unsigned int 
   531 ;;  fuel_pump       2   13[BANK0 ] unsigned int 
   532 ;;  radiator        2   11[BANK0 ] unsigned int 
   533 ;;  battery         2    9[BANK0 ] unsigned int 
   534 ;;  clutch_sol      2    7[BANK0 ] unsigned int 
   535 ;;  up_sol          2    5[BANK0 ] unsigned int 
   536 ;;  timer_diff      2    0[BANK0 ] unsigned int 
   537 ;; Return value:  Size  Location     Type
   538 ;;                  1    wreg      void 
   539 ;; Registers used:
   540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   541 ;; Tracked objects:
   542 ;;		On entry : 0/0
   543 ;;		On exit  : 0/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   547 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   548 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   549 ;;      Totals:         2      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   550 ;;Total ram usage:       46 bytes
   551 ;; Hardware stack levels required when called:    6
   552 ;; This function calls:
   553 ;;		_ADC_GetConversion
   554 ;;		_CAN_transmit
   555 ;;		_SYSTEM_Initialize
   556 ;;		_TMR1_ReadTimer
   557 ;;		___ftdiv
   558 ;;		___ftmul
   559 ;;		___fttol
   560 ;;		___lwtoft
   561 ;; This function is called by:
   562 ;;		Startup code after reset
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           	psect	text0
   567  00008E                     __ptext0:
   568                           	opt stack 0
   569  00008E                     _main:
   570                           	opt stack 25
   571                           
   572                           ;main.c: 54: SYSTEM_Initialize();
   573                           
   574                           ;incstack = 0
   575  00008E  EC37  F007         	call	_SYSTEM_Initialize	;wreg free
   576                           
   577                           ;main.c: 84: double Vref = 5000.0 ;
   578  000092  0E40               	movlw	64
   579  000094  0100               	movlb	0	; () banked
   580  000096  6F62               	movwf	main@Vref& (0+255),b
   581  000098  0E9C               	movlw	156
   582  00009A  0100               	movlb	0	; () banked
   583  00009C  6F63               	movwf	(main@Vref+1)& (0+255),b
   584  00009E  0E45               	movlw	69
   585  0000A0  0100               	movlb	0	; () banked
   586  0000A2  6F64               	movwf	(main@Vref+2)& (0+255),b
   587                           
   588                           ; BSR set to: 0
   589                           ;main.c: 85: double x = Vref / 4096.0 ;
   590  0000A4  C062  F017         	movff	main@Vref,___ftdiv@f1
   591  0000A8  C063  F018         	movff	main@Vref+1,___ftdiv@f1+1
   592  0000AC  C064  F019         	movff	main@Vref+2,___ftdiv@f1+2
   593  0000B0  0E00               	movlw	0
   594  0000B2  6E1A               	movwf	___ftdiv@f2,c
   595  0000B4  0E80               	movlw	128
   596  0000B6  6E1B               	movwf	___ftdiv@f2+1,c
   597  0000B8  0E45               	movlw	69
   598  0000BA  6E1C               	movwf	___ftdiv@f2+2,c
   599  0000BC  ECE9  F005         	call	___ftdiv	;wreg free
   600  0000C0  C017  F079         	movff	?___ftdiv,main@x
   601  0000C4  C018  F07A         	movff	?___ftdiv+1,main@x+1
   602  0000C8  C019  F07B         	movff	?___ftdiv+2,main@x+2
   603                           
   604                           ;main.c: 87: uint16_t timer_prev, timer_diff ;
   605                           ;main.c: 88: uint16_t timer_cur = TMR1_ReadTimer() ;
   606  0000CC  EC28  F007         	call	_TMR1_ReadTimer	;wreg free
   607  0000D0  C00F  F077         	movff	?_TMR1_ReadTimer,main@timer_cur
   608  0000D4  C010  F078         	movff	?_TMR1_ReadTimer+1,main@timer_cur+1
   609  0000D8                     l2177:
   610                           
   611                           ;main.c: 96: {
   612                           ;main.c: 98: ADCResult = ADC_GetConversion(up_sol) * x ;
   613  0000D8  C079  F01D         	movff	main@x,___ftmul@f2
   614  0000DC  C07A  F01E         	movff	main@x+1,___ftmul@f2+1
   615  0000E0  C07B  F01F         	movff	main@x+2,___ftmul@f2+2
   616  0000E4  0100               	movlb	0	; () banked
   617  0000E6  5165               	movf	main@up_sol& (0+255),w,b
   618  0000E8  ECE9  F006         	call	_ADC_GetConversion
   619  0000EC  C00F  F017         	movff	?_ADC_GetConversion,___lwtoft@c
   620  0000F0  C010  F018         	movff	?_ADC_GetConversion+1,___lwtoft@c+1
   621  0000F4  EC16  F007         	call	___lwtoft	;wreg free
   622  0000F8  C017  F01A         	movff	?___lwtoft,___ftmul@f1
   623  0000FC  C018  F01B         	movff	?___lwtoft+1,___ftmul@f1+1
   624  000100  C019  F01C         	movff	?___lwtoft+2,___ftmul@f1+2
   625  000104  ECF8  F004         	call	___ftmul	;wreg free
   626  000108  C01A  F029         	movff	?___ftmul,___fttol@f1
   627  00010C  C01B  F02A         	movff	?___ftmul+1,___fttol@f1+1
   628  000110  C01C  F02B         	movff	?___ftmul+2,___fttol@f1+2
   629  000114  EC7E  F004         	call	___fttol	;wreg free
   630  000118  C029  F07C         	movff	?___fttol,main@ADCResult
   631  00011C  C02A  F07D         	movff	?___fttol+1,main@ADCResult+1
   632                           
   633                           ;main.c: 99: up_sol = ADCResult ;
   634  000120  C07C  F065         	movff	main@ADCResult,main@up_sol
   635  000124  C07D  F066         	movff	main@ADCResult+1,main@up_sol+1
   636                           
   637                           ;main.c: 100: ADCResult = ADC_GetConversion(clutch_sol) * x ;
   638  000128  C079  F01D         	movff	main@x,___ftmul@f2
   639  00012C  C07A  F01E         	movff	main@x+1,___ftmul@f2+1
   640  000130  C07B  F01F         	movff	main@x+2,___ftmul@f2+2
   641  000134  0100               	movlb	0	; () banked
   642  000136  5167               	movf	main@clutch_sol& (0+255),w,b
   643  000138  ECE9  F006         	call	_ADC_GetConversion
   644  00013C  C00F  F017         	movff	?_ADC_GetConversion,___lwtoft@c
   645  000140  C010  F018         	movff	?_ADC_GetConversion+1,___lwtoft@c+1
   646  000144  EC16  F007         	call	___lwtoft	;wreg free
   647  000148  C017  F01A         	movff	?___lwtoft,___ftmul@f1
   648  00014C  C018  F01B         	movff	?___lwtoft+1,___ftmul@f1+1
   649  000150  C019  F01C         	movff	?___lwtoft+2,___ftmul@f1+2
   650  000154  ECF8  F004         	call	___ftmul	;wreg free
   651  000158  C01A  F029         	movff	?___ftmul,___fttol@f1
   652  00015C  C01B  F02A         	movff	?___ftmul+1,___fttol@f1+1
   653  000160  C01C  F02B         	movff	?___ftmul+2,___fttol@f1+2
   654  000164  EC7E  F004         	call	___fttol	;wreg free
   655  000168  C029  F07C         	movff	?___fttol,main@ADCResult
   656  00016C  C02A  F07D         	movff	?___fttol+1,main@ADCResult+1
   657                           
   658                           ;main.c: 101: clutch_sol = ADCResult ;
   659  000170  C07C  F067         	movff	main@ADCResult,main@clutch_sol
   660  000174  C07D  F068         	movff	main@ADCResult+1,main@clutch_sol+1
   661                           
   662                           ;main.c: 102: ADCResult = ADC_GetConversion(battery) * x ;
   663  000178  C079  F01D         	movff	main@x,___ftmul@f2
   664  00017C  C07A  F01E         	movff	main@x+1,___ftmul@f2+1
   665  000180  C07B  F01F         	movff	main@x+2,___ftmul@f2+2
   666  000184  0100               	movlb	0	; () banked
   667  000186  5169               	movf	main@battery& (0+255),w,b
   668  000188  ECE9  F006         	call	_ADC_GetConversion
   669  00018C  C00F  F017         	movff	?_ADC_GetConversion,___lwtoft@c
   670  000190  C010  F018         	movff	?_ADC_GetConversion+1,___lwtoft@c+1
   671  000194  EC16  F007         	call	___lwtoft	;wreg free
   672  000198  C017  F01A         	movff	?___lwtoft,___ftmul@f1
   673  00019C  C018  F01B         	movff	?___lwtoft+1,___ftmul@f1+1
   674  0001A0  C019  F01C         	movff	?___lwtoft+2,___ftmul@f1+2
   675  0001A4  ECF8  F004         	call	___ftmul	;wreg free
   676  0001A8  C01A  F029         	movff	?___ftmul,___fttol@f1
   677  0001AC  C01B  F02A         	movff	?___ftmul+1,___fttol@f1+1
   678  0001B0  C01C  F02B         	movff	?___ftmul+2,___fttol@f1+2
   679  0001B4  EC7E  F004         	call	___fttol	;wreg free
   680  0001B8  C029  F07C         	movff	?___fttol,main@ADCResult
   681  0001BC  C02A  F07D         	movff	?___fttol+1,main@ADCResult+1
   682                           
   683                           ;main.c: 103: battery = ADCResult ;
   684  0001C0  C07C  F069         	movff	main@ADCResult,main@battery
   685  0001C4  C07D  F06A         	movff	main@ADCResult+1,main@battery+1
   686                           
   687                           ;main.c: 104: ADCResult = ADC_GetConversion(radiator) * x ;
   688  0001C8  C079  F01D         	movff	main@x,___ftmul@f2
   689  0001CC  C07A  F01E         	movff	main@x+1,___ftmul@f2+1
   690  0001D0  C07B  F01F         	movff	main@x+2,___ftmul@f2+2
   691  0001D4  0100               	movlb	0	; () banked
   692  0001D6  516B               	movf	main@radiator& (0+255),w,b
   693  0001D8  ECE9  F006         	call	_ADC_GetConversion
   694  0001DC  C00F  F017         	movff	?_ADC_GetConversion,___lwtoft@c
   695  0001E0  C010  F018         	movff	?_ADC_GetConversion+1,___lwtoft@c+1
   696  0001E4  EC16  F007         	call	___lwtoft	;wreg free
   697  0001E8  C017  F01A         	movff	?___lwtoft,___ftmul@f1
   698  0001EC  C018  F01B         	movff	?___lwtoft+1,___ftmul@f1+1
   699  0001F0  C019  F01C         	movff	?___lwtoft+2,___ftmul@f1+2
   700  0001F4  ECF8  F004         	call	___ftmul	;wreg free
   701  0001F8  C01A  F029         	movff	?___ftmul,___fttol@f1
   702  0001FC  C01B  F02A         	movff	?___ftmul+1,___fttol@f1+1
   703  000200  C01C  F02B         	movff	?___ftmul+2,___fttol@f1+2
   704  000204  EC7E  F004         	call	___fttol	;wreg free
   705  000208  C029  F07C         	movff	?___fttol,main@ADCResult
   706  00020C  C02A  F07D         	movff	?___fttol+1,main@ADCResult+1
   707                           
   708                           ;main.c: 105: radiator = ADCResult ;
   709  000210  C07C  F06B         	movff	main@ADCResult,main@radiator
   710  000214  C07D  F06C         	movff	main@ADCResult+1,main@radiator+1
   711                           
   712                           ;main.c: 106: ADCResult = ADC_GetConversion(fuel_pump) * x ;
   713  000218  C079  F01D         	movff	main@x,___ftmul@f2
   714  00021C  C07A  F01E         	movff	main@x+1,___ftmul@f2+1
   715  000220  C07B  F01F         	movff	main@x+2,___ftmul@f2+2
   716  000224  0100               	movlb	0	; () banked
   717  000226  516D               	movf	main@fuel_pump& (0+255),w,b
   718  000228  ECE9  F006         	call	_ADC_GetConversion
   719  00022C  C00F  F017         	movff	?_ADC_GetConversion,___lwtoft@c
   720  000230  C010  F018         	movff	?_ADC_GetConversion+1,___lwtoft@c+1
   721  000234  EC16  F007         	call	___lwtoft	;wreg free
   722  000238  C017  F01A         	movff	?___lwtoft,___ftmul@f1
   723  00023C  C018  F01B         	movff	?___lwtoft+1,___ftmul@f1+1
   724  000240  C019  F01C         	movff	?___lwtoft+2,___ftmul@f1+2
   725  000244  ECF8  F004         	call	___ftmul	;wreg free
   726  000248  C01A  F029         	movff	?___ftmul,___fttol@f1
   727  00024C  C01B  F02A         	movff	?___ftmul+1,___fttol@f1+1
   728  000250  C01C  F02B         	movff	?___ftmul+2,___fttol@f1+2
   729  000254  EC7E  F004         	call	___fttol	;wreg free
   730  000258  C029  F07C         	movff	?___fttol,main@ADCResult
   731  00025C  C02A  F07D         	movff	?___fttol+1,main@ADCResult+1
   732                           
   733                           ;main.c: 107: fuel_pump = ADCResult ;
   734  000260  C07C  F06D         	movff	main@ADCResult,main@fuel_pump
   735  000264  C07D  F06E         	movff	main@ADCResult+1,main@fuel_pump+1
   736                           
   737                           ;main.c: 108: ADCResult = ADC_GetConversion(ewp) * x ;
   738  000268  C079  F01D         	movff	main@x,___ftmul@f2
   739  00026C  C07A  F01E         	movff	main@x+1,___ftmul@f2+1
   740  000270  C07B  F01F         	movff	main@x+2,___ftmul@f2+2
   741  000274  0100               	movlb	0	; () banked
   742  000276  516F               	movf	main@ewp& (0+255),w,b
   743  000278  ECE9  F006         	call	_ADC_GetConversion
   744  00027C  C00F  F017         	movff	?_ADC_GetConversion,___lwtoft@c
   745  000280  C010  F018         	movff	?_ADC_GetConversion+1,___lwtoft@c+1
   746  000284  EC16  F007         	call	___lwtoft	;wreg free
   747  000288  C017  F01A         	movff	?___lwtoft,___ftmul@f1
   748  00028C  C018  F01B         	movff	?___lwtoft+1,___ftmul@f1+1
   749  000290  C019  F01C         	movff	?___lwtoft+2,___ftmul@f1+2
   750  000294  ECF8  F004         	call	___ftmul	;wreg free
   751  000298  C01A  F029         	movff	?___ftmul,___fttol@f1
   752  00029C  C01B  F02A         	movff	?___ftmul+1,___fttol@f1+1
   753  0002A0  C01C  F02B         	movff	?___ftmul+2,___fttol@f1+2
   754  0002A4  EC7E  F004         	call	___fttol	;wreg free
   755  0002A8  C029  F07C         	movff	?___fttol,main@ADCResult
   756  0002AC  C02A  F07D         	movff	?___fttol+1,main@ADCResult+1
   757                           
   758                           ;main.c: 109: ewp = ADCResult ;
   759  0002B0  C07C  F06F         	movff	main@ADCResult,main@ewp
   760  0002B4  C07D  F070         	movff	main@ADCResult+1,main@ewp+1
   761                           
   762                           ;main.c: 110: ADCResult = ADC_GetConversion(drs) * x ;
   763  0002B8  C079  F01D         	movff	main@x,___ftmul@f2
   764  0002BC  C07A  F01E         	movff	main@x+1,___ftmul@f2+1
   765  0002C0  C07B  F01F         	movff	main@x+2,___ftmul@f2+2
   766  0002C4  0100               	movlb	0	; () banked
   767  0002C6  5171               	movf	main@drs& (0+255),w,b
   768  0002C8  ECE9  F006         	call	_ADC_GetConversion
   769  0002CC  C00F  F017         	movff	?_ADC_GetConversion,___lwtoft@c
   770  0002D0  C010  F018         	movff	?_ADC_GetConversion+1,___lwtoft@c+1
   771  0002D4  EC16  F007         	call	___lwtoft	;wreg free
   772  0002D8  C017  F01A         	movff	?___lwtoft,___ftmul@f1
   773  0002DC  C018  F01B         	movff	?___lwtoft+1,___ftmul@f1+1
   774  0002E0  C019  F01C         	movff	?___lwtoft+2,___ftmul@f1+2
   775  0002E4  ECF8  F004         	call	___ftmul	;wreg free
   776  0002E8  C01A  F029         	movff	?___ftmul,___fttol@f1
   777  0002EC  C01B  F02A         	movff	?___ftmul+1,___fttol@f1+1
   778  0002F0  C01C  F02B         	movff	?___ftmul+2,___fttol@f1+2
   779  0002F4  EC7E  F004         	call	___fttol	;wreg free
   780  0002F8  C029  F07C         	movff	?___fttol,main@ADCResult
   781  0002FC  C02A  F07D         	movff	?___fttol+1,main@ADCResult+1
   782                           
   783                           ;main.c: 111: drs = ADCResult ;
   784  000300  C07C  F071         	movff	main@ADCResult,main@drs
   785  000304  C07D  F072         	movff	main@ADCResult+1,main@drs+1
   786                           
   787                           ;main.c: 112: ADCResult = ADC_GetConversion(down_sol) * x ;
   788  000308  C079  F01D         	movff	main@x,___ftmul@f2
   789  00030C  C07A  F01E         	movff	main@x+1,___ftmul@f2+1
   790  000310  C07B  F01F         	movff	main@x+2,___ftmul@f2+2
   791  000314  0100               	movlb	0	; () banked
   792  000316  5173               	movf	main@down_sol& (0+255),w,b
   793  000318  ECE9  F006         	call	_ADC_GetConversion
   794  00031C  C00F  F017         	movff	?_ADC_GetConversion,___lwtoft@c
   795  000320  C010  F018         	movff	?_ADC_GetConversion+1,___lwtoft@c+1
   796  000324  EC16  F007         	call	___lwtoft	;wreg free
   797  000328  C017  F01A         	movff	?___lwtoft,___ftmul@f1
   798  00032C  C018  F01B         	movff	?___lwtoft+1,___ftmul@f1+1
   799  000330  C019  F01C         	movff	?___lwtoft+2,___ftmul@f1+2
   800  000334  ECF8  F004         	call	___ftmul	;wreg free
   801  000338  C01A  F029         	movff	?___ftmul,___fttol@f1
   802  00033C  C01B  F02A         	movff	?___ftmul+1,___fttol@f1+1
   803  000340  C01C  F02B         	movff	?___ftmul+2,___fttol@f1+2
   804  000344  EC7E  F004         	call	___fttol	;wreg free
   805  000348  C029  F07C         	movff	?___fttol,main@ADCResult
   806  00034C  C02A  F07D         	movff	?___fttol+1,main@ADCResult+1
   807                           
   808                           ;main.c: 113: down_sol = ADCResult ;
   809  000350  C07C  F073         	movff	main@ADCResult,main@down_sol
   810  000354  C07D  F074         	movff	main@ADCResult+1,main@down_sol+1
   811                           
   812                           ;main.c: 115: timer_prev = timer_cur ;
   813  000358  C077  F075         	movff	main@timer_cur,main@timer_prev
   814  00035C  C078  F076         	movff	main@timer_cur+1,main@timer_prev+1
   815                           
   816                           ;main.c: 116: timer_cur = TMR1_ReadTimer() ;
   817  000360  EC28  F007         	call	_TMR1_ReadTimer	;wreg free
   818  000364  C00F  F077         	movff	?_TMR1_ReadTimer,main@timer_cur
   819  000368  C010  F078         	movff	?_TMR1_ReadTimer+1,main@timer_cur+1
   820                           
   821                           ;main.c: 117: if (timer_cur < timer_prev) timer_diff = 0xFFFF -
   822  00036C  0100               	movlb	0	; () banked
   823  00036E  5175               	movf	main@timer_prev& (0+255),w,b
   824  000370  0100               	movlb	0	; () banked
   825  000372  5D77               	subwf	main@timer_cur& (0+255),w,b
   826  000374  0100               	movlb	0	; () banked
   827  000376  5176               	movf	(main@timer_prev+1)& (0+255),w,b
   828  000378  0100               	movlb	0	; () banked
   829  00037A  5978               	subwfb	(main@timer_cur+1)& (0+255),w,b
   830  00037C  B0D8               	btfsc	status,0,c
   831  00037E  D018               	goto	l2217
   832                           
   833                           ; BSR set to: 0
   834                           ;main.c: 118: (timer_prev - timer_cur) ;
   835  000380  C077  F038         	movff	main@timer_cur,??_main
   836  000384  C078  F039         	movff	main@timer_cur+1,??_main+1
   837  000388  1E38               	comf	??_main,f,c
   838  00038A  1E39               	comf	??_main+1,f,c
   839  00038C  4A38               	infsnz	??_main,f,c
   840  00038E  2A39               	incf	??_main+1,f,c
   841  000390  0100               	movlb	0	; () banked
   842  000392  5175               	movf	main@timer_prev& (0+255),w,b
   843  000394  2638               	addwf	??_main,f,c
   844  000396  0100               	movlb	0	; () banked
   845  000398  5176               	movf	(main@timer_prev+1)& (0+255),w,b
   846  00039A  2239               	addwfc	??_main+1,f,c
   847  00039C  1E38               	comf	??_main,f,c
   848  00039E  1E39               	comf	??_main+1,f,c
   849  0003A0  4A38               	infsnz	??_main,f,c
   850  0003A2  2A39               	incf	??_main+1,f,c
   851  0003A4  0EFF               	movlw	255
   852  0003A6  2438               	addwf	??_main,w,c
   853  0003A8  0100               	movlb	0	; () banked
   854  0003AA  6F60               	movwf	main@timer_diff& (0+255),b
   855  0003AC  0EFF               	movlw	255
   856  0003AE  D00F               	goto	L1
   857  0003B0                     l2217:
   858                           
   859                           ; BSR set to: 0
   860                           ;main.c: 119: else timer_diff = timer_cur - timer_prev ;
   861  0003B0  C075  F038         	movff	main@timer_prev,??_main
   862  0003B4  C076  F039         	movff	main@timer_prev+1,??_main+1
   863  0003B8  1E38               	comf	??_main,f,c
   864  0003BA  1E39               	comf	??_main+1,f,c
   865  0003BC  4A38               	infsnz	??_main,f,c
   866  0003BE  2A39               	incf	??_main+1,f,c
   867  0003C0  0100               	movlb	0	; () banked
   868  0003C2  5177               	movf	main@timer_cur& (0+255),w,b
   869  0003C4  2438               	addwf	??_main,w,c
   870  0003C6  0100               	movlb	0	; () banked
   871  0003C8  6F60               	movwf	main@timer_diff& (0+255),b
   872  0003CA  0100               	movlb	0	; () banked
   873  0003CC  5178               	movf	(main@timer_cur+1)& (0+255),w,b
   874  0003CE                     L1:
   875  0003CE  2039               	addwfc	??_main+1,w,c
   876  0003D0  0100               	movlb	0	; () banked
   877  0003D2  6F61               	movwf	(main@timer_diff+1)& (0+255),b
   878                           
   879                           ; BSR set to: 0
   880                           ;main.c: 121: uCAN_MSG cur_data1 ;
   881                           ;main.c: 122: cur_data1.frame.idType = 1 ;
   882                           
   883                           ; BSR set to: 0
   884  0003D4  0E01               	movlw	1
   885  0003D6  0100               	movlb	0	; () banked
   886  0003D8  6F7E               	movwf	main@cur_data1& (0+255),b
   887                           
   888                           ; BSR set to: 0
   889                           ;main.c: 123: cur_data1.frame.id = 0x634 ;
   890  0003DA  0E34               	movlw	52
   891  0003DC  0100               	movlb	0	; () banked
   892  0003DE  6F7F               	movwf	(main@cur_data1+1)& (0+255),b
   893  0003E0  0E06               	movlw	6
   894  0003E2  6F80               	movwf	(main@cur_data1+2)& (0+255),b
   895  0003E4  0E00               	movlw	0
   896  0003E6  6F81               	movwf	(main@cur_data1+3)& (0+255),b
   897  0003E8  0E00               	movlw	0
   898  0003EA  6F82               	movwf	(main@cur_data1+4)& (0+255),b
   899                           
   900                           ; BSR set to: 0
   901                           ;main.c: 124: cur_data1.frame.dlc = 8 ;
   902  0003EC  0E08               	movlw	8
   903  0003EE  0100               	movlb	0	; () banked
   904  0003F0  6F83               	movwf	(main@cur_data1+5)& (0+255),b
   905                           
   906                           ; BSR set to: 0
   907                           ;main.c: 125: cur_data1.frame.data0 = up_sol ;
   908  0003F2  C065  F084         	movff	main@up_sol,main@cur_data1+6
   909                           
   910                           ; BSR set to: 0
   911                           ;main.c: 126: cur_data1.frame.data1 = clutch_sol ;
   912  0003F6  C067  F085         	movff	main@clutch_sol,main@cur_data1+7
   913                           
   914                           ; BSR set to: 0
   915                           ;main.c: 127: cur_data1.frame.data2 = battery ;
   916  0003FA  C069  F086         	movff	main@battery,main@cur_data1+8
   917                           
   918                           ; BSR set to: 0
   919                           ;main.c: 128: cur_data1.frame.data3 = radiator ;
   920  0003FE  C06B  F087         	movff	main@radiator,main@cur_data1+9
   921                           
   922                           ; BSR set to: 0
   923                           ;main.c: 129: cur_data1.frame.data4 = fuel_pump ;
   924  000402  C06D  F088         	movff	main@fuel_pump,main@cur_data1+10
   925                           
   926                           ; BSR set to: 0
   927                           ;main.c: 130: cur_data1.frame.data5 = ewp ;
   928  000406  C06F  F089         	movff	main@ewp,main@cur_data1+11
   929                           
   930                           ; BSR set to: 0
   931                           ;main.c: 131: cur_data1.frame.data6 = drs ;
   932  00040A  C071  F08A         	movff	main@drs,main@cur_data1+12
   933                           
   934                           ; BSR set to: 0
   935                           ;main.c: 132: cur_data1.frame.data7 = down_sol ;
   936  00040E  C073  F08B         	movff	main@down_sol,main@cur_data1+13
   937                           
   938                           ; BSR set to: 0
   939                           ;main.c: 134: CAN_transmit(&cur_data1) ;
   940  000412  0E7E               	movlw	low main@cur_data1
   941  000414  6E21               	movwf	CAN_transmit@tempCanMsg,c
   942  000416  0E00               	movlw	high main@cur_data1
   943  000418  6E22               	movwf	CAN_transmit@tempCanMsg+1,c
   944  00041A  EC10  F002         	call	_CAN_transmit	;wreg free
   945  00041E  D65C               	goto	l2177
   946  000420                     __end_of_main:
   947                           	opt stack 0
   948                           tblptru	equ	0xFF8
   949                           status	equ	0xFD8
   950                           
   951 ;; *************** function ___lwtoft *****************
   952 ;; Defined at:
   953 ;;		line 28 in file "D:\Atmel\xc8\sources\common\lwtoft.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;  c               2   22[COMRAM] unsigned int 
   956 ;; Auto vars:     Size  Location     Type
   957 ;;		None
   958 ;; Return value:  Size  Location     Type
   959 ;;                  3   22[COMRAM] float 
   960 ;; Registers used:
   961 ;;		wreg, status,2, status,0, cstack
   962 ;; Tracked objects:
   963 ;;		On entry : 0/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   967 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   970 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   971 ;;Total ram usage:        3 bytes
   972 ;; Hardware stack levels used:    1
   973 ;; Hardware stack levels required when called:    4
   974 ;; This function calls:
   975 ;;		___ftpack
   976 ;; This function is called by:
   977 ;;		_main
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981                           	psect	text1
   982  000E2C                     __ptext1:
   983                           	opt stack 0
   984  000E2C                     ___lwtoft:
   985                           	opt stack 26
   986                           
   987                           ;incstack = 0
   988  000E2C  C017  F00F         	movff	___lwtoft@c,___ftpack@arg
   989  000E30  C018  F010         	movff	___lwtoft@c+1,___ftpack@arg+1
   990  000E34  6A11               	clrf	___ftpack@arg+2,c
   991  000E36  0E8E               	movlw	142
   992  000E38  6E12               	movwf	___ftpack@exp,c
   993  000E3A  0E00               	movlw	0
   994  000E3C  6E13               	movwf	___ftpack@sign,c
   995  000E3E  EC5C  F006         	call	___ftpack	;wreg free
   996  000E42  C00F  F017         	movff	?___ftpack,?___lwtoft
   997  000E46  C010  F018         	movff	?___ftpack+1,?___lwtoft+1
   998  000E4A  C011  F019         	movff	?___ftpack+2,?___lwtoft+2
   999  000E4E  0012               	return	
  1000  000E50                     __end_of___lwtoft:
  1001                           	opt stack 0
  1002                           tblptru	equ	0xFF8
  1003                           status	equ	0xFD8
  1004                           
  1005 ;; *************** function ___fttol *****************
  1006 ;; Defined at:
  1007 ;;		line 44 in file "D:\Atmel\xc8\sources\common\fttol.c"
  1008 ;; Parameters:    Size  Location     Type
  1009 ;;  f1              3   40[COMRAM] float 
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;  lval            4   50[COMRAM] unsigned long 
  1012 ;;  exp1            1   54[COMRAM] unsigned char 
  1013 ;;  sign1           1   49[COMRAM] unsigned char 
  1014 ;; Return value:  Size  Location     Type
  1015 ;;                  4   40[COMRAM] long 
  1016 ;; Registers used:
  1017 ;;		wreg, status,2, status,0
  1018 ;; Tracked objects:
  1019 ;;		On entry : 0/0
  1020 ;;		On exit  : 0/0
  1021 ;;		Unchanged: 0/0
  1022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1023 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1024 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1025 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1026 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1027 ;;Total ram usage:       15 bytes
  1028 ;; Hardware stack levels used:    1
  1029 ;; Hardware stack levels required when called:    3
  1030 ;; This function calls:
  1031 ;;		Nothing
  1032 ;; This function is called by:
  1033 ;;		_main
  1034 ;; This function uses a non-reentrant model
  1035 ;;
  1036                           
  1037                           	psect	text2
  1038  0008FC                     __ptext2:
  1039                           	opt stack 0
  1040  0008FC                     ___fttol:
  1041                           	opt stack 27
  1042                           
  1043                           ;incstack = 0
  1044  0008FC  C02B  F02D         	movff	___fttol@f1+2,??___fttol
  1045  000900  6A2E               	clrf	(??___fttol+1)& (0+255),c
  1046  000902  6A2F               	clrf	(??___fttol+2)& (0+255),c
  1047  000904  342A               	rlcf	___fttol@f1+1,w,c
  1048  000906  362D               	rlcf	??___fttol& (0+255),f,c
  1049  000908  E301               	bnc	u841
  1050  00090A  802E               	bsf	(??___fttol+1)& (0+255),0,c
  1051  00090C                     u841:
  1052  00090C  502D               	movf	??___fttol,w,c
  1053  00090E  6E37               	movwf	___fttol@exp1,c
  1054  000910  5037               	movf	___fttol@exp1,w,c
  1055  000912  A4D8               	btfss	status,2,c
  1056  000914  D009               	goto	l2125
  1057  000916  0E00               	movlw	0
  1058  000918  6E29               	movwf	?___fttol,c
  1059  00091A  0E00               	movlw	0
  1060  00091C  6E2A               	movwf	?___fttol+1,c
  1061  00091E  0E00               	movlw	0
  1062  000920  6E2B               	movwf	?___fttol+2,c
  1063  000922  0E00               	movlw	0
  1064  000924  6E2C               	movwf	?___fttol+3,c
  1065  000926  0012               	return	
  1066  000928                     l2125:
  1067  000928  0E17               	movlw	23
  1068  00092A  6E2D               	movwf	??___fttol& (0+255),c
  1069  00092C  C029  F02E         	movff	___fttol@f1,??___fttol+1
  1070  000930  C02A  F02F         	movff	___fttol@f1+1,??___fttol+2
  1071  000934  C02B  F030         	movff	___fttol@f1+2,??___fttol+3
  1072  000938  282D               	incf	??___fttol,w,c
  1073  00093A  6E31               	movwf	(??___fttol+4)& (0+255),c
  1074  00093C  D004               	goto	u860
  1075  00093E                     u865:
  1076  00093E  90D8               	bcf	status,0,c
  1077  000940  3230               	rrcf	??___fttol+3,f,c
  1078  000942  322F               	rrcf	??___fttol+2,f,c
  1079  000944  322E               	rrcf	??___fttol+1,f,c
  1080  000946                     u860:
  1081  000946  2E31               	decfsz	(??___fttol+4)& (0+255),f,c
  1082  000948  D7FA               	goto	u865
  1083  00094A  502E               	movf	??___fttol+1,w,c
  1084  00094C  6E32               	movwf	___fttol@sign1,c
  1085  00094E  8E2A               	bsf	___fttol@f1+1,7,c
  1086  000950  0EFF               	movlw	255
  1087  000952  1629               	andwf	___fttol@f1,f,c
  1088  000954  0EFF               	movlw	255
  1089  000956  162A               	andwf	___fttol@f1+1,f,c
  1090  000958  0E00               	movlw	0
  1091  00095A  162B               	andwf	___fttol@f1+2,f,c
  1092  00095C  5029               	movf	___fttol@f1,w,c
  1093  00095E  6E33               	movwf	___fttol@lval,c
  1094  000960  502A               	movf	___fttol@f1+1,w,c
  1095  000962  6E34               	movwf	___fttol@lval+1,c
  1096  000964  502B               	movf	___fttol@f1+2,w,c
  1097  000966  6E35               	movwf	___fttol@lval+2,c
  1098  000968  6A36               	clrf	___fttol@lval+3,c
  1099  00096A  0E8E               	movlw	142
  1100  00096C  5E37               	subwf	___fttol@exp1,f,c
  1101  00096E  AE37               	btfss	___fttol@exp1,7,c
  1102  000970  D016               	goto	l2147
  1103  000972  5037               	movf	___fttol@exp1,w,c
  1104  000974  0A80               	xorlw	128
  1105  000976  0F8F               	addlw	143
  1106  000978  B0D8               	btfsc	status,0,c
  1107  00097A  D009               	goto	l2143
  1108  00097C  0E00               	movlw	0
  1109  00097E  6E29               	movwf	?___fttol,c
  1110  000980  0E00               	movlw	0
  1111  000982  6E2A               	movwf	?___fttol+1,c
  1112  000984  0E00               	movlw	0
  1113  000986  6E2B               	movwf	?___fttol+2,c
  1114  000988  0E00               	movlw	0
  1115  00098A  6E2C               	movwf	?___fttol+3,c
  1116  00098C  0012               	return	
  1117  00098E                     l2143:
  1118  00098E  90D8               	bcf	status,0,c
  1119  000990  3236               	rrcf	___fttol@lval+3,f,c
  1120  000992  3235               	rrcf	___fttol@lval+2,f,c
  1121  000994  3234               	rrcf	___fttol@lval+1,f,c
  1122  000996  3233               	rrcf	___fttol@lval,f,c
  1123  000998  3E37               	incfsz	___fttol@exp1,f,c
  1124  00099A  D7F9               	goto	l2143
  1125  00099C  D015               	goto	l2157
  1126  00099E                     l2147:
  1127  00099E  0E17               	movlw	23
  1128  0009A0  6437               	cpfsgt	___fttol@exp1,c
  1129  0009A2  D00F               	goto	l2155
  1130  0009A4  0E00               	movlw	0
  1131  0009A6  6E29               	movwf	?___fttol,c
  1132  0009A8  0E00               	movlw	0
  1133  0009AA  6E2A               	movwf	?___fttol+1,c
  1134  0009AC  0E00               	movlw	0
  1135  0009AE  6E2B               	movwf	?___fttol+2,c
  1136  0009B0  0E00               	movlw	0
  1137  0009B2  6E2C               	movwf	?___fttol+3,c
  1138  0009B4  0012               	return	
  1139  0009B6                     l2153:
  1140  0009B6  90D8               	bcf	status,0,c
  1141  0009B8  3633               	rlcf	___fttol@lval,f,c
  1142  0009BA  3634               	rlcf	___fttol@lval+1,f,c
  1143  0009BC  3635               	rlcf	___fttol@lval+2,f,c
  1144  0009BE  3636               	rlcf	___fttol@lval+3,f,c
  1145  0009C0  0637               	decf	___fttol@exp1,f,c
  1146  0009C2                     l2155:
  1147  0009C2  5037               	movf	___fttol@exp1,w,c
  1148  0009C4  A4D8               	btfss	status,2,c
  1149  0009C6  D7F7               	goto	l2153
  1150  0009C8                     l2157:
  1151  0009C8  5032               	movf	___fttol@sign1,w,c
  1152  0009CA  B4D8               	btfsc	status,2,c
  1153  0009CC  D008               	goto	l2161
  1154  0009CE  1E36               	comf	___fttol@lval+3,f,c
  1155  0009D0  1E35               	comf	___fttol@lval+2,f,c
  1156  0009D2  1E34               	comf	___fttol@lval+1,f,c
  1157  0009D4  6C33               	negf	___fttol@lval,c
  1158  0009D6  0E00               	movlw	0
  1159  0009D8  2234               	addwfc	___fttol@lval+1,f,c
  1160  0009DA  2235               	addwfc	___fttol@lval+2,f,c
  1161  0009DC  2236               	addwfc	___fttol@lval+3,f,c
  1162  0009DE                     l2161:
  1163  0009DE  C033  F029         	movff	___fttol@lval,?___fttol
  1164  0009E2  C034  F02A         	movff	___fttol@lval+1,?___fttol+1
  1165  0009E6  C035  F02B         	movff	___fttol@lval+2,?___fttol+2
  1166  0009EA  C036  F02C         	movff	___fttol@lval+3,?___fttol+3
  1167  0009EE  0012               	return	
  1168  0009F0                     __end_of___fttol:
  1169                           	opt stack 0
  1170                           tblptru	equ	0xFF8
  1171                           status	equ	0xFD8
  1172                           
  1173 ;; *************** function ___ftmul *****************
  1174 ;; Defined at:
  1175 ;;		line 62 in file "D:\Atmel\xc8\sources\common\ftmul.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;  f1              3   25[COMRAM] float 
  1178 ;;  f2              3   28[COMRAM] float 
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;  f3_as_produc    3   35[COMRAM] unsigned um
  1181 ;;  sign            1   39[COMRAM] unsigned char 
  1182 ;;  cntr            1   38[COMRAM] unsigned char 
  1183 ;;  exp             1   34[COMRAM] unsigned char 
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  3   25[COMRAM] float 
  1186 ;; Registers used:
  1187 ;;		wreg, status,2, status,0, cstack
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1193 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1194 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1195 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1196 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1197 ;;Total ram usage:       15 bytes
  1198 ;; Hardware stack levels used:    1
  1199 ;; Hardware stack levels required when called:    4
  1200 ;; This function calls:
  1201 ;;		___ftpack
  1202 ;; This function is called by:
  1203 ;;		_main
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207                           	psect	text3
  1208  0009F0                     __ptext3:
  1209                           	opt stack 0
  1210  0009F0                     ___ftmul:
  1211                           	opt stack 26
  1212                           
  1213                           ;incstack = 0
  1214  0009F0  C01C  F020         	movff	___ftmul@f1+2,??___ftmul
  1215  0009F4  6A21               	clrf	(??___ftmul+1)& (0+255),c
  1216  0009F6  6A22               	clrf	(??___ftmul+2)& (0+255),c
  1217  0009F8  341B               	rlcf	___ftmul@f1+1,w,c
  1218  0009FA  3620               	rlcf	??___ftmul& (0+255),f,c
  1219  0009FC  E301               	bnc	u781
  1220  0009FE  8021               	bsf	(??___ftmul+1)& (0+255),0,c
  1221  000A00                     u781:
  1222  000A00  5020               	movf	??___ftmul,w,c
  1223  000A02  6E23               	movwf	___ftmul@exp,c
  1224  000A04  5023               	movf	___ftmul@exp,w,c
  1225  000A06  A4D8               	btfss	status,2,c
  1226  000A08  D007               	goto	l2077
  1227  000A0A  0E00               	movlw	0
  1228  000A0C  6E1A               	movwf	?___ftmul,c
  1229  000A0E  0E00               	movlw	0
  1230  000A10  6E1B               	movwf	?___ftmul+1,c
  1231  000A12  0E00               	movlw	0
  1232  000A14  6E1C               	movwf	?___ftmul+2,c
  1233  000A16  0012               	return	
  1234  000A18                     l2077:
  1235  000A18  C01F  F020         	movff	___ftmul@f2+2,??___ftmul
  1236  000A1C  6A21               	clrf	(??___ftmul+1)& (0+255),c
  1237  000A1E  6A22               	clrf	(??___ftmul+2)& (0+255),c
  1238  000A20  341E               	rlcf	___ftmul@f2+1,w,c
  1239  000A22  3620               	rlcf	??___ftmul& (0+255),f,c
  1240  000A24  E301               	bnc	u801
  1241  000A26  8021               	bsf	(??___ftmul+1)& (0+255),0,c
  1242  000A28                     u801:
  1243  000A28  5020               	movf	??___ftmul,w,c
  1244  000A2A  6E28               	movwf	___ftmul@sign,c
  1245  000A2C  5028               	movf	___ftmul@sign,w,c
  1246  000A2E  A4D8               	btfss	status,2,c
  1247  000A30  D007               	goto	l2083
  1248  000A32  0E00               	movlw	0
  1249  000A34  6E1A               	movwf	?___ftmul,c
  1250  000A36  0E00               	movlw	0
  1251  000A38  6E1B               	movwf	?___ftmul+1,c
  1252  000A3A  0E00               	movlw	0
  1253  000A3C  6E1C               	movwf	?___ftmul+2,c
  1254  000A3E  0012               	return	
  1255  000A40                     l2083:
  1256  000A40  5028               	movf	___ftmul@sign,w,c
  1257  000A42  0F7B               	addlw	123
  1258  000A44  2623               	addwf	___ftmul@exp,f,c
  1259  000A46  C01C  F028         	movff	___ftmul@f1+2,___ftmul@sign
  1260  000A4A  501F               	movf	___ftmul@f2+2,w,c
  1261  000A4C  1A28               	xorwf	___ftmul@sign,f,c
  1262  000A4E  0E80               	movlw	128
  1263  000A50  1628               	andwf	___ftmul@sign,f,c
  1264  000A52  8E1B               	bsf	___ftmul@f1+1,7,c
  1265  000A54  8E1E               	bsf	___ftmul@f2+1,7,c
  1266  000A56  0EFF               	movlw	255
  1267  000A58  161D               	andwf	___ftmul@f2,f,c
  1268  000A5A  0EFF               	movlw	255
  1269  000A5C  161E               	andwf	___ftmul@f2+1,f,c
  1270  000A5E  0E00               	movlw	0
  1271  000A60  161F               	andwf	___ftmul@f2+2,f,c
  1272  000A62  0E00               	movlw	0
  1273  000A64  6E24               	movwf	___ftmul@f3_as_product,c
  1274  000A66  0E00               	movlw	0
  1275  000A68  6E25               	movwf	___ftmul@f3_as_product+1,c
  1276  000A6A  0E00               	movlw	0
  1277  000A6C  6E26               	movwf	___ftmul@f3_as_product+2,c
  1278  000A6E  0E07               	movlw	7
  1279  000A70  6E27               	movwf	___ftmul@cntr,c
  1280  000A72                     l2097:
  1281  000A72  A01A               	btfss	___ftmul@f1,0,c
  1282  000A74  D006               	goto	l2101
  1283  000A76  501D               	movf	___ftmul@f2,w,c
  1284  000A78  2624               	addwf	___ftmul@f3_as_product,f,c
  1285  000A7A  501E               	movf	___ftmul@f2+1,w,c
  1286  000A7C  2225               	addwfc	___ftmul@f3_as_product+1,f,c
  1287  000A7E  501F               	movf	___ftmul@f2+2,w,c
  1288  000A80  2226               	addwfc	___ftmul@f3_as_product+2,f,c
  1289  000A82                     l2101:
  1290  000A82  90D8               	bcf	status,0,c
  1291  000A84  321C               	rrcf	___ftmul@f1+2,f,c
  1292  000A86  321B               	rrcf	___ftmul@f1+1,f,c
  1293  000A88  321A               	rrcf	___ftmul@f1,f,c
  1294  000A8A  90D8               	bcf	status,0,c
  1295  000A8C  361D               	rlcf	___ftmul@f2,f,c
  1296  000A8E  361E               	rlcf	___ftmul@f2+1,f,c
  1297  000A90  361F               	rlcf	___ftmul@f2+2,f,c
  1298  000A92  2E27               	decfsz	___ftmul@cntr,f,c
  1299  000A94  D7EE               	goto	l2097
  1300  000A96  0E09               	movlw	9
  1301  000A98  6E27               	movwf	___ftmul@cntr,c
  1302  000A9A                     l2107:
  1303  000A9A  A01A               	btfss	___ftmul@f1,0,c
  1304  000A9C  D006               	goto	l2111
  1305  000A9E  501D               	movf	___ftmul@f2,w,c
  1306  000AA0  2624               	addwf	___ftmul@f3_as_product,f,c
  1307  000AA2  501E               	movf	___ftmul@f2+1,w,c
  1308  000AA4  2225               	addwfc	___ftmul@f3_as_product+1,f,c
  1309  000AA6  501F               	movf	___ftmul@f2+2,w,c
  1310  000AA8  2226               	addwfc	___ftmul@f3_as_product+2,f,c
  1311  000AAA                     l2111:
  1312  000AAA  90D8               	bcf	status,0,c
  1313  000AAC  321C               	rrcf	___ftmul@f1+2,f,c
  1314  000AAE  321B               	rrcf	___ftmul@f1+1,f,c
  1315  000AB0  321A               	rrcf	___ftmul@f1,f,c
  1316  000AB2  90D8               	bcf	status,0,c
  1317  000AB4  3226               	rrcf	___ftmul@f3_as_product+2,f,c
  1318  000AB6  3225               	rrcf	___ftmul@f3_as_product+1,f,c
  1319  000AB8  3224               	rrcf	___ftmul@f3_as_product,f,c
  1320  000ABA  2E27               	decfsz	___ftmul@cntr,f,c
  1321  000ABC  D7EE               	goto	l2107
  1322  000ABE  C024  F00F         	movff	___ftmul@f3_as_product,___ftpack@arg
  1323  000AC2  C025  F010         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1324  000AC6  C026  F011         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1325  000ACA  C023  F012         	movff	___ftmul@exp,___ftpack@exp
  1326  000ACE  C028  F013         	movff	___ftmul@sign,___ftpack@sign
  1327  000AD2  EC5C  F006         	call	___ftpack	;wreg free
  1328  000AD6  C00F  F01A         	movff	?___ftpack,?___ftmul
  1329  000ADA  C010  F01B         	movff	?___ftpack+1,?___ftmul+1
  1330  000ADE  C011  F01C         	movff	?___ftpack+2,?___ftmul+2
  1331  000AE2  0012               	return	
  1332  000AE4                     __end_of___ftmul:
  1333                           	opt stack 0
  1334                           tblptru	equ	0xFF8
  1335                           status	equ	0xFD8
  1336                           
  1337 ;; *************** function ___ftdiv *****************
  1338 ;; Defined at:
  1339 ;;		line 54 in file "D:\Atmel\xc8\sources\common\ftdiv.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;  f1              3   22[COMRAM] float 
  1342 ;;  f2              3   25[COMRAM] float 
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;  f3              3   32[COMRAM] float 
  1345 ;;  sign            1   36[COMRAM] unsigned char 
  1346 ;;  exp             1   35[COMRAM] unsigned char 
  1347 ;;  cntr            1   31[COMRAM] unsigned char 
  1348 ;; Return value:  Size  Location     Type
  1349 ;;                  3   22[COMRAM] float 
  1350 ;; Registers used:
  1351 ;;		wreg, status,2, status,0, cstack
  1352 ;; Tracked objects:
  1353 ;;		On entry : 0/0
  1354 ;;		On exit  : 0/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1357 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1358 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1359 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1360 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1361 ;;Total ram usage:       15 bytes
  1362 ;; Hardware stack levels used:    1
  1363 ;; Hardware stack levels required when called:    4
  1364 ;; This function calls:
  1365 ;;		___ftpack
  1366 ;; This function is called by:
  1367 ;;		_main
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           	psect	text4
  1372  000BD2                     __ptext4:
  1373                           	opt stack 0
  1374  000BD2                     ___ftdiv:
  1375                           	opt stack 26
  1376                           
  1377                           ;incstack = 0
  1378  000BD2  C019  F01D         	movff	___ftdiv@f1+2,??___ftdiv
  1379  000BD6  6A1E               	clrf	(??___ftdiv+1)& (0+255),c
  1380  000BD8  6A1F               	clrf	(??___ftdiv+2)& (0+255),c
  1381  000BDA  3418               	rlcf	___ftdiv@f1+1,w,c
  1382  000BDC  361D               	rlcf	??___ftdiv& (0+255),f,c
  1383  000BDE  E301               	bnc	u731
  1384  000BE0  801E               	bsf	(??___ftdiv+1)& (0+255),0,c
  1385  000BE2                     u731:
  1386  000BE2  501D               	movf	??___ftdiv,w,c
  1387  000BE4  6E24               	movwf	___ftdiv@exp,c
  1388  000BE6  5024               	movf	___ftdiv@exp,w,c
  1389  000BE8  A4D8               	btfss	status,2,c
  1390  000BEA  D007               	goto	l2031
  1391  000BEC  0E00               	movlw	0
  1392  000BEE  6E17               	movwf	?___ftdiv,c
  1393  000BF0  0E00               	movlw	0
  1394  000BF2  6E18               	movwf	?___ftdiv+1,c
  1395  000BF4  0E00               	movlw	0
  1396  000BF6  6E19               	movwf	?___ftdiv+2,c
  1397  000BF8  0012               	return	
  1398  000BFA                     l2031:
  1399  000BFA  C01C  F01D         	movff	___ftdiv@f2+2,??___ftdiv
  1400  000BFE  6A1E               	clrf	(??___ftdiv+1)& (0+255),c
  1401  000C00  6A1F               	clrf	(??___ftdiv+2)& (0+255),c
  1402  000C02  341B               	rlcf	___ftdiv@f2+1,w,c
  1403  000C04  361D               	rlcf	??___ftdiv& (0+255),f,c
  1404  000C06  E301               	bnc	u751
  1405  000C08  801E               	bsf	(??___ftdiv+1)& (0+255),0,c
  1406  000C0A                     u751:
  1407  000C0A  501D               	movf	??___ftdiv,w,c
  1408  000C0C  6E25               	movwf	___ftdiv@sign,c
  1409  000C0E  5025               	movf	___ftdiv@sign,w,c
  1410  000C10  A4D8               	btfss	status,2,c
  1411  000C12  D007               	goto	l2037
  1412  000C14  0E00               	movlw	0
  1413  000C16  6E17               	movwf	?___ftdiv,c
  1414  000C18  0E00               	movlw	0
  1415  000C1A  6E18               	movwf	?___ftdiv+1,c
  1416  000C1C  0E00               	movlw	0
  1417  000C1E  6E19               	movwf	?___ftdiv+2,c
  1418  000C20  0012               	return	
  1419  000C22                     l2037:
  1420  000C22  0E00               	movlw	0
  1421  000C24  6E21               	movwf	___ftdiv@f3,c
  1422  000C26  0E00               	movlw	0
  1423  000C28  6E22               	movwf	___ftdiv@f3+1,c
  1424  000C2A  0E00               	movlw	0
  1425  000C2C  6E23               	movwf	___ftdiv@f3+2,c
  1426  000C2E  5025               	movf	___ftdiv@sign,w,c
  1427  000C30  0F89               	addlw	137
  1428  000C32  5E24               	subwf	___ftdiv@exp,f,c
  1429  000C34  C019  F025         	movff	___ftdiv@f1+2,___ftdiv@sign
  1430  000C38  501C               	movf	___ftdiv@f2+2,w,c
  1431  000C3A  1A25               	xorwf	___ftdiv@sign,f,c
  1432  000C3C  0E80               	movlw	128
  1433  000C3E  1625               	andwf	___ftdiv@sign,f,c
  1434  000C40  8E18               	bsf	___ftdiv@f1+1,7,c
  1435  000C42  0EFF               	movlw	255
  1436  000C44  1617               	andwf	___ftdiv@f1,f,c
  1437  000C46  0EFF               	movlw	255
  1438  000C48  1618               	andwf	___ftdiv@f1+1,f,c
  1439  000C4A  0E00               	movlw	0
  1440  000C4C  1619               	andwf	___ftdiv@f1+2,f,c
  1441  000C4E  8E1B               	bsf	___ftdiv@f2+1,7,c
  1442  000C50  0EFF               	movlw	255
  1443  000C52  161A               	andwf	___ftdiv@f2,f,c
  1444  000C54  0EFF               	movlw	255
  1445  000C56  161B               	andwf	___ftdiv@f2+1,f,c
  1446  000C58  0E00               	movlw	0
  1447  000C5A  161C               	andwf	___ftdiv@f2+2,f,c
  1448  000C5C  0E18               	movlw	24
  1449  000C5E  6E20               	movwf	___ftdiv@cntr,c
  1450  000C60                     l2057:
  1451  000C60  90D8               	bcf	status,0,c
  1452  000C62  3621               	rlcf	___ftdiv@f3,f,c
  1453  000C64  3622               	rlcf	___ftdiv@f3+1,f,c
  1454  000C66  3623               	rlcf	___ftdiv@f3+2,f,c
  1455  000C68  501A               	movf	___ftdiv@f2,w,c
  1456  000C6A  5C17               	subwf	___ftdiv@f1,w,c
  1457  000C6C  501B               	movf	___ftdiv@f2+1,w,c
  1458  000C6E  5818               	subwfb	___ftdiv@f1+1,w,c
  1459  000C70  501C               	movf	___ftdiv@f2+2,w,c
  1460  000C72  5819               	subwfb	___ftdiv@f1+2,w,c
  1461  000C74  A0D8               	btfss	status,0,c
  1462  000C76  D007               	goto	l760
  1463  000C78  501A               	movf	___ftdiv@f2,w,c
  1464  000C7A  5E17               	subwf	___ftdiv@f1,f,c
  1465  000C7C  501B               	movf	___ftdiv@f2+1,w,c
  1466  000C7E  5A18               	subwfb	___ftdiv@f1+1,f,c
  1467  000C80  501C               	movf	___ftdiv@f2+2,w,c
  1468  000C82  5A19               	subwfb	___ftdiv@f1+2,f,c
  1469  000C84  8021               	bsf	___ftdiv@f3,0,c
  1470  000C86                     l760:
  1471  000C86  90D8               	bcf	status,0,c
  1472  000C88  3617               	rlcf	___ftdiv@f1,f,c
  1473  000C8A  3618               	rlcf	___ftdiv@f1+1,f,c
  1474  000C8C  3619               	rlcf	___ftdiv@f1+2,f,c
  1475  000C8E  2E20               	decfsz	___ftdiv@cntr,f,c
  1476  000C90  D7E7               	goto	l2057
  1477  000C92  C021  F00F         	movff	___ftdiv@f3,___ftpack@arg
  1478  000C96  C022  F010         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1479  000C9A  C023  F011         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1480  000C9E  C024  F012         	movff	___ftdiv@exp,___ftpack@exp
  1481  000CA2  C025  F013         	movff	___ftdiv@sign,___ftpack@sign
  1482  000CA6  EC5C  F006         	call	___ftpack	;wreg free
  1483  000CAA  C00F  F017         	movff	?___ftpack,?___ftdiv
  1484  000CAE  C010  F018         	movff	?___ftpack+1,?___ftdiv+1
  1485  000CB2  C011  F019         	movff	?___ftpack+2,?___ftdiv+2
  1486  000CB6  0012               	return	
  1487  000CB8                     __end_of___ftdiv:
  1488                           	opt stack 0
  1489                           tblptru	equ	0xFF8
  1490                           status	equ	0xFD8
  1491                           
  1492 ;; *************** function ___ftpack *****************
  1493 ;; Defined at:
  1494 ;;		line 62 in file "D:\Atmel\xc8\sources\common\float.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;  arg             3   14[COMRAM] unsigned um
  1497 ;;  exp             1   17[COMRAM] unsigned char 
  1498 ;;  sign            1   18[COMRAM] unsigned char 
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;		None
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  3   14[COMRAM] float 
  1503 ;; Registers used:
  1504 ;;		wreg, status,2, status,0
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1510 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1512 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1513 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1514 ;;Total ram usage:        8 bytes
  1515 ;; Hardware stack levels used:    1
  1516 ;; Hardware stack levels required when called:    3
  1517 ;; This function calls:
  1518 ;;		Nothing
  1519 ;; This function is called by:
  1520 ;;		___ftdiv
  1521 ;;		___ftmul
  1522 ;;		___lwtoft
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           	psect	text5
  1527  000CB8                     __ptext5:
  1528                           	opt stack 0
  1529  000CB8                     ___ftpack:
  1530                           	opt stack 26
  1531                           
  1532                           ;incstack = 0
  1533  000CB8  5012               	movf	___ftpack@exp,w,c
  1534  000CBA  B4D8               	btfsc	status,2,c
  1535  000CBC  D005               	goto	l1861
  1536  000CBE  500F               	movf	___ftpack@arg,w,c
  1537  000CC0  1010               	iorwf	___ftpack@arg+1,w,c
  1538  000CC2  1011               	iorwf	___ftpack@arg+2,w,c
  1539  000CC4  A4D8               	btfss	status,2,c
  1540  000CC6  D00C               	goto	l1867
  1541  000CC8                     l1861:
  1542  000CC8  0E00               	movlw	0
  1543  000CCA  6E0F               	movwf	?___ftpack,c
  1544  000CCC  0E00               	movlw	0
  1545  000CCE  6E10               	movwf	?___ftpack+1,c
  1546  000CD0  0E00               	movlw	0
  1547  000CD2  6E11               	movwf	?___ftpack+2,c
  1548  000CD4  0012               	return	
  1549  000CD6                     l1865:
  1550  000CD6  2A12               	incf	___ftpack@exp,f,c
  1551  000CD8  90D8               	bcf	status,0,c
  1552  000CDA  3211               	rrcf	___ftpack@arg+2,f,c
  1553  000CDC  3210               	rrcf	___ftpack@arg+1,f,c
  1554  000CDE  320F               	rrcf	___ftpack@arg,f,c
  1555  000CE0                     l1867:
  1556  000CE0  0E00               	movlw	0
  1557  000CE2  140F               	andwf	___ftpack@arg,w,c
  1558  000CE4  6E14               	movwf	??___ftpack& (0+255),c
  1559  000CE6  0E00               	movlw	0
  1560  000CE8  1410               	andwf	___ftpack@arg+1,w,c
  1561  000CEA  6E15               	movwf	(??___ftpack+1)& (0+255),c
  1562  000CEC  0EFE               	movlw	254
  1563  000CEE  1411               	andwf	___ftpack@arg+2,w,c
  1564  000CF0  6E16               	movwf	(??___ftpack+2)& (0+255),c
  1565  000CF2  5014               	movf	??___ftpack,w,c
  1566  000CF4  1015               	iorwf	??___ftpack+1,w,c
  1567  000CF6  1016               	iorwf	??___ftpack+2,w,c
  1568  000CF8  B4D8               	btfsc	status,2,c
  1569  000CFA  D00C               	goto	l1873
  1570  000CFC  D7EC               	goto	l1865
  1571  000CFE                     l1869:
  1572  000CFE  2A12               	incf	___ftpack@exp,f,c
  1573  000D00  0E01               	movlw	1
  1574  000D02  260F               	addwf	___ftpack@arg,f,c
  1575  000D04  0E00               	movlw	0
  1576  000D06  2210               	addwfc	___ftpack@arg+1,f,c
  1577  000D08  0E00               	movlw	0
  1578  000D0A  2211               	addwfc	___ftpack@arg+2,f,c
  1579  000D0C  90D8               	bcf	status,0,c
  1580  000D0E  3211               	rrcf	___ftpack@arg+2,f,c
  1581  000D10  3210               	rrcf	___ftpack@arg+1,f,c
  1582  000D12  320F               	rrcf	___ftpack@arg,f,c
  1583  000D14                     l1873:
  1584  000D14  0E00               	movlw	0
  1585  000D16  140F               	andwf	___ftpack@arg,w,c
  1586  000D18  6E14               	movwf	??___ftpack& (0+255),c
  1587  000D1A  0E00               	movlw	0
  1588  000D1C  1410               	andwf	___ftpack@arg+1,w,c
  1589  000D1E  6E15               	movwf	(??___ftpack+1)& (0+255),c
  1590  000D20  0EFF               	movlw	255
  1591  000D22  1411               	andwf	___ftpack@arg+2,w,c
  1592  000D24  6E16               	movwf	(??___ftpack+2)& (0+255),c
  1593  000D26  5014               	movf	??___ftpack,w,c
  1594  000D28  1015               	iorwf	??___ftpack+1,w,c
  1595  000D2A  1016               	iorwf	??___ftpack+2,w,c
  1596  000D2C  B4D8               	btfsc	status,2,c
  1597  000D2E  D006               	goto	l1877
  1598  000D30  D7E6               	goto	l1869
  1599  000D32                     l1875:
  1600  000D32  0612               	decf	___ftpack@exp,f,c
  1601  000D34  90D8               	bcf	status,0,c
  1602  000D36  360F               	rlcf	___ftpack@arg,f,c
  1603  000D38  3610               	rlcf	___ftpack@arg+1,f,c
  1604  000D3A  3611               	rlcf	___ftpack@arg+2,f,c
  1605  000D3C                     l1877:
  1606  000D3C  BE10               	btfsc	___ftpack@arg+1,7,c
  1607  000D3E  D003               	goto	l702
  1608  000D40  0E02               	movlw	2
  1609  000D42  6012               	cpfslt	___ftpack@exp,c
  1610  000D44  D7F6               	goto	l1875
  1611  000D46                     l702:
  1612  000D46  A012               	btfss	___ftpack@exp,0,c
  1613  000D48  9E10               	bcf	___ftpack@arg+1,7,c
  1614  000D4A  90D8               	bcf	status,0,c
  1615  000D4C  3212               	rrcf	___ftpack@exp,f,c
  1616  000D4E  5012               	movf	___ftpack@exp,w,c
  1617  000D50  1211               	iorwf	___ftpack@arg+2,f,c
  1618  000D52  5013               	movf	___ftpack@sign,w,c
  1619  000D54  A4D8               	btfss	status,2,c
  1620  000D56  8E11               	bsf	___ftpack@arg+2,7,c
  1621  000D58  C00F  F00F         	movff	___ftpack@arg,?___ftpack
  1622  000D5C  C010  F010         	movff	___ftpack@arg+1,?___ftpack+1
  1623  000D60  C011  F011         	movff	___ftpack@arg+2,?___ftpack+2
  1624  000D64  0012               	return	
  1625  000D66                     __end_of___ftpack:
  1626                           	opt stack 0
  1627                           tblptru	equ	0xFF8
  1628                           status	equ	0xFD8
  1629                           
  1630 ;; *************** function _TMR1_ReadTimer *****************
  1631 ;; Defined at:
  1632 ;;		line 107 in file "mcc_generated_files/tmr1.c"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;		None
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;  readVal         2   18[COMRAM] unsigned int 
  1637 ;;  readValLow      1   21[COMRAM] unsigned char 
  1638 ;;  readValHigh     1   20[COMRAM] unsigned char 
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  2   14[COMRAM] unsigned int 
  1641 ;; Registers used:
  1642 ;;		wreg, status,2
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1648 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1649 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1650 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1651 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1652 ;;Total ram usage:        8 bytes
  1653 ;; Hardware stack levels used:    1
  1654 ;; Hardware stack levels required when called:    3
  1655 ;; This function calls:
  1656 ;;		Nothing
  1657 ;; This function is called by:
  1658 ;;		_main
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662                           	psect	text6
  1663  000E50                     __ptext6:
  1664                           	opt stack 0
  1665  000E50                     _TMR1_ReadTimer:
  1666                           	opt stack 27
  1667                           
  1668                           ;tmr1.c: 109: uint16_t readVal;
  1669                           ;tmr1.c: 110: uint8_t readValHigh;
  1670                           ;tmr1.c: 111: uint8_t readValLow;
  1671                           ;tmr1.c: 113: readValLow = TMR1L;
  1672                           
  1673                           ;incstack = 0
  1674  000E50  CFCE F016          	movff	4046,TMR1_ReadTimer@readValLow	;volatile
  1675                           
  1676                           ;tmr1.c: 114: readValHigh = TMR1H;
  1677  000E54  CFCF F015          	movff	4047,TMR1_ReadTimer@readValHigh	;volatile
  1678                           
  1679                           ;tmr1.c: 116: readVal = ((uint16_t)readValHigh << 8) | readValLow;
  1680  000E58  5015               	movf	TMR1_ReadTimer@readValHigh,w,c
  1681  000E5A  6E11               	movwf	??_TMR1_ReadTimer& (0+255),c
  1682  000E5C  5016               	movf	TMR1_ReadTimer@readValLow,w,c
  1683  000E5E  6E13               	movwf	TMR1_ReadTimer@readVal,c
  1684  000E60  C011  F014         	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
  1685                           
  1686                           ;tmr1.c: 118: return readVal;
  1687  000E64  C013  F00F         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
  1688  000E68  C014  F010         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
  1689  000E6C  0012               	return	
  1690  000E6E                     __end_of_TMR1_ReadTimer:
  1691                           	opt stack 0
  1692                           tblptru	equ	0xFF8
  1693                           status	equ	0xFD8
  1694                           
  1695 ;; *************** function _SYSTEM_Initialize *****************
  1696 ;; Defined at:
  1697 ;;		line 111 in file "mcc_generated_files/mcc.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;		None
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;		None
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      void 
  1704 ;; Registers used:
  1705 ;;		wreg, status,2, status,0, cstack
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1715 ;;Total ram usage:        0 bytes
  1716 ;; Hardware stack levels used:    1
  1717 ;; Hardware stack levels required when called:    5
  1718 ;; This function calls:
  1719 ;;		_ADC_Initialize
  1720 ;;		_ECAN_Initialize
  1721 ;;		_INTERRUPT_Initialize
  1722 ;;		_OSCILLATOR_Initialize
  1723 ;;		_PIN_MANAGER_Initialize
  1724 ;;		_TMR1_Initialize
  1725 ;; This function is called by:
  1726 ;;		_main
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           	psect	text7
  1731  000E6E                     __ptext7:
  1732                           	opt stack 0
  1733  000E6E                     _SYSTEM_Initialize:
  1734                           	opt stack 25
  1735                           
  1736                           ;mcc.c: 114: INTERRUPT_Initialize();
  1737                           
  1738                           ;incstack = 0
  1739  000E6E  EC66  F007         	call	_INTERRUPT_Initialize	;wreg free
  1740                           
  1741                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1742  000E72  ECCF  F006         	call	_PIN_MANAGER_Initialize	;wreg free
  1743                           
  1744                           ;mcc.c: 116: OSCILLATOR_Initialize();
  1745  000E76  EC4F  F007         	call	_OSCILLATOR_Initialize	;wreg free
  1746                           
  1747                           ;mcc.c: 117: TMR1_Initialize();
  1748  000E7A  ECB3  F006         	call	_TMR1_Initialize	;wreg free
  1749                           
  1750                           ;mcc.c: 118: ADC_Initialize();
  1751  000E7E  EC44  F007         	call	_ADC_Initialize	;wreg free
  1752                           
  1753                           ;mcc.c: 119: ECAN_Initialize();
  1754  000E82  EC72  F005         	call	_ECAN_Initialize	;wreg free
  1755  000E86  0012               	return		;funcret
  1756  000E88                     __end_of_SYSTEM_Initialize:
  1757                           	opt stack 0
  1758                           tblptru	equ	0xFF8
  1759                           status	equ	0xFD8
  1760                           
  1761 ;; *************** function _TMR1_Initialize *****************
  1762 ;; Defined at:
  1763 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;		None
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;		None
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  1    wreg      void 
  1770 ;; Registers used:
  1771 ;;		wreg, status,2, status,0, cstack
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1779 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1780 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1781 ;;Total ram usage:        2 bytes
  1782 ;; Hardware stack levels used:    1
  1783 ;; Hardware stack levels required when called:    4
  1784 ;; This function calls:
  1785 ;;		_TMR1_SetInterruptHandler
  1786 ;;		_TMR1_StartTimer
  1787 ;; This function is called by:
  1788 ;;		_SYSTEM_Initialize
  1789 ;; This function uses a non-reentrant model
  1790 ;;
  1791                           
  1792                           	psect	text8
  1793  000D66                     __ptext8:
  1794                           	opt stack 0
  1795  000D66                     _TMR1_Initialize:
  1796                           	opt stack 25
  1797                           
  1798                           ;tmr1.c: 68: T1CON = 0x40;
  1799                           
  1800                           ;incstack = 0
  1801  000D66  0E40               	movlw	64
  1802  000D68  6ECD               	movwf	4045,c	;volatile
  1803                           
  1804                           ;tmr1.c: 71: T1GCON = 0x00;
  1805  000D6A  0E00               	movlw	0
  1806  000D6C  6EAA               	movwf	4010,c	;volatile
  1807                           
  1808                           ;tmr1.c: 74: TMR1H = 0xFF;
  1809  000D6E  68CF               	setf	4047,c	;volatile
  1810                           
  1811                           ;tmr1.c: 77: TMR1L = 0xFF;
  1812  000D70  68CE               	setf	4046,c	;volatile
  1813                           
  1814                           ;tmr1.c: 80: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1815  000D72  50CE               	movf	4046,w,c	;volatile
  1816  000D74  CFCF F011          	movff	4047,??_TMR1_Initialize	;volatile
  1817  000D78  6A12               	clrf	(??_TMR1_Initialize+1)& (0+255),c
  1818  000D7A  C011  F012         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  1819  000D7E  6A11               	clrf	??_TMR1_Initialize,c
  1820  000D80  1011               	iorwf	??_TMR1_Initialize,w,c
  1821  000D82  6E3C               	movwf	_timer1ReloadVal,c	;volatile
  1822  000D84  5012               	movf	??_TMR1_Initialize+1,w,c
  1823  000D86  6E3D               	movwf	_timer1ReloadVal+1,c	;volatile
  1824                           
  1825                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
  1826  000D88  909E               	bcf	3998,0,c	;volatile
  1827                           
  1828                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
  1829  000D8A  809D               	bsf	3997,0,c	;volatile
  1830                           
  1831                           ;tmr1.c: 89: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  1832  000D8C  0ED0               	movlw	low _TMR1_DefaultInterruptHandler
  1833  000D8E  6E0F               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
  1834  000D90  0E0E               	movlw	high _TMR1_DefaultInterruptHandler
  1835  000D92  6E10               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
  1836  000D94  EC5F  F007         	call	_TMR1_SetInterruptHandler	;wreg free
  1837                           
  1838                           ;tmr1.c: 92: TMR1_StartTimer();
  1839  000D98  EC64  F007         	call	_TMR1_StartTimer	;wreg free
  1840  000D9C  0012               	return		;funcret
  1841  000D9E                     __end_of_TMR1_Initialize:
  1842                           	opt stack 0
  1843                           tblptru	equ	0xFF8
  1844                           status	equ	0xFD8
  1845                           
  1846 ;; *************** function _TMR1_StartTimer *****************
  1847 ;; Defined at:
  1848 ;;		line 95 in file "mcc_generated_files/tmr1.c"
  1849 ;; Parameters:    Size  Location     Type
  1850 ;;		None
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;		None
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  1    wreg      void 
  1855 ;; Registers used:
  1856 ;;		None
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1866 ;;Total ram usage:        0 bytes
  1867 ;; Hardware stack levels used:    1
  1868 ;; Hardware stack levels required when called:    3
  1869 ;; This function calls:
  1870 ;;		Nothing
  1871 ;; This function is called by:
  1872 ;;		_TMR1_Initialize
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           	psect	text9
  1877  000EC8                     __ptext9:
  1878                           	opt stack 0
  1879  000EC8                     _TMR1_StartTimer:
  1880                           	opt stack 25
  1881                           
  1882                           ;tmr1.c: 98: T1CONbits.TMR1ON = 1;
  1883                           
  1884                           ;incstack = 0
  1885  000EC8  80CD               	bsf	4045,0,c	;volatile
  1886  000ECA  0012               	return		;funcret
  1887  000ECC                     __end_of_TMR1_StartTimer:
  1888                           	opt stack 0
  1889                           tblptru	equ	0xFF8
  1890                           status	equ	0xFD8
  1891                           
  1892 ;; *************** function _TMR1_SetInterruptHandler *****************
  1893 ;; Defined at:
  1894 ;;		line 176 in file "mcc_generated_files/tmr1.c"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;  InterruptHan    2   14[COMRAM] PTR FTN()void 
  1897 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;		None
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  1    wreg      void 
  1902 ;; Registers used:
  1903 ;;		wreg, status,2, status,0
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1909 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1912 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1913 ;;Total ram usage:        2 bytes
  1914 ;; Hardware stack levels used:    1
  1915 ;; Hardware stack levels required when called:    3
  1916 ;; This function calls:
  1917 ;;		Nothing
  1918 ;; This function is called by:
  1919 ;;		_TMR1_Initialize
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923                           	psect	text10
  1924  000EBE                     __ptext10:
  1925                           	opt stack 0
  1926  000EBE                     _TMR1_SetInterruptHandler:
  1927                           	opt stack 25
  1928                           
  1929                           ;tmr1.c: 177: TMR1_InterruptHandler = InterruptHandler;
  1930                           
  1931                           ;incstack = 0
  1932  000EBE  C00F  F03A         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  1933  000EC2  C010  F03B         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  1934  000EC6  0012               	return		;funcret
  1935  000EC8                     __end_of_TMR1_SetInterruptHandler:
  1936                           	opt stack 0
  1937                           tblptru	equ	0xFF8
  1938                           status	equ	0xFD8
  1939                           
  1940 ;; *************** function _PIN_MANAGER_Initialize *****************
  1941 ;; Defined at:
  1942 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;		None
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;		None
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  1    wreg      void 
  1949 ;; Registers used:
  1950 ;;		wreg, status,2
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1960 ;;Total ram usage:        0 bytes
  1961 ;; Hardware stack levels used:    1
  1962 ;; Hardware stack levels required when called:    3
  1963 ;; This function calls:
  1964 ;;		Nothing
  1965 ;; This function is called by:
  1966 ;;		_SYSTEM_Initialize
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           	psect	text11
  1971  000D9E                     __ptext11:
  1972                           	opt stack 0
  1973  000D9E                     _PIN_MANAGER_Initialize:
  1974                           	opt stack 26
  1975                           
  1976                           ;pin_manager.c: 57: LATE = 0x00;
  1977                           
  1978                           ;incstack = 0
  1979  000D9E  0E00               	movlw	0
  1980  000DA0  6E8D               	movwf	3981,c	;volatile
  1981                           
  1982                           ;pin_manager.c: 58: LATD = 0x00;
  1983  000DA2  0E00               	movlw	0
  1984  000DA4  6E8C               	movwf	3980,c	;volatile
  1985                           
  1986                           ;pin_manager.c: 59: LATA = 0x00;
  1987  000DA6  0E00               	movlw	0
  1988  000DA8  6E89               	movwf	3977,c	;volatile
  1989                           
  1990                           ;pin_manager.c: 60: LATB = 0x00;
  1991  000DAA  0E00               	movlw	0
  1992  000DAC  6E8A               	movwf	3978,c	;volatile
  1993                           
  1994                           ;pin_manager.c: 61: LATC = 0x00;
  1995  000DAE  0E00               	movlw	0
  1996  000DB0  6E8B               	movwf	3979,c	;volatile
  1997                           
  1998                           ;pin_manager.c: 66: TRISE = 0x07;
  1999  000DB2  0E07               	movlw	7
  2000  000DB4  6E96               	movwf	3990,c	;volatile
  2001                           
  2002                           ;pin_manager.c: 67: TRISA = 0xEF;
  2003  000DB6  0EEF               	movlw	239
  2004  000DB8  6E92               	movwf	3986,c	;volatile
  2005                           
  2006                           ;pin_manager.c: 68: TRISB = 0xFB;
  2007  000DBA  0EFB               	movlw	251
  2008  000DBC  6E93               	movwf	3987,c	;volatile
  2009                           
  2010                           ;pin_manager.c: 69: TRISC = 0xFF;
  2011  000DBE  6894               	setf	3988,c	;volatile
  2012                           
  2013                           ;pin_manager.c: 70: TRISD = 0xFF;
  2014  000DC0  6895               	setf	3989,c	;volatile
  2015                           
  2016                           ;pin_manager.c: 75: ANCON0 = 0xFF;
  2017  000DC2  010F               	movlb	15	; () banked
  2018  000DC4  695D               	setf	93,b	;volatile
  2019                           
  2020                           ;pin_manager.c: 76: ANCON1 = 0x7F;
  2021  000DC6  0E7F               	movlw	127
  2022  000DC8  010F               	movlb	15	; () banked
  2023  000DCA  6F5C               	movwf	92,b	;volatile
  2024                           
  2025                           ; BSR set to: 15
  2026                           ;pin_manager.c: 81: WPUB = 0xFF;
  2027  000DCC  010F               	movlb	15	; () banked
  2028  000DCE  695B               	setf	91,b	;volatile
  2029                           
  2030                           ; BSR set to: 15
  2031  000DD0  0012               	return		;funcret
  2032  000DD2                     __end_of_PIN_MANAGER_Initialize:
  2033                           	opt stack 0
  2034                           tblptru	equ	0xFF8
  2035                           status	equ	0xFD8
  2036                           
  2037 ;; *************** function _OSCILLATOR_Initialize *****************
  2038 ;; Defined at:
  2039 ;;		line 122 in file "mcc_generated_files/mcc.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;		None
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;		None
  2044 ;; Return value:  Size  Location     Type
  2045 ;;                  1    wreg      void 
  2046 ;; Registers used:
  2047 ;;		wreg, status,2
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2057 ;;Total ram usage:        0 bytes
  2058 ;; Hardware stack levels used:    1
  2059 ;; Hardware stack levels required when called:    3
  2060 ;; This function calls:
  2061 ;;		Nothing
  2062 ;; This function is called by:
  2063 ;;		_SYSTEM_Initialize
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           	psect	text12
  2068  000E9E                     __ptext12:
  2069                           	opt stack 0
  2070  000E9E                     _OSCILLATOR_Initialize:
  2071                           	opt stack 26
  2072                           
  2073                           ;mcc.c: 125: OSCCON = 0x60;
  2074                           
  2075                           ; BSR set to: 15
  2076                           ;incstack = 0
  2077  000E9E  0E60               	movlw	96
  2078  000EA0  6ED3               	movwf	4051,c	;volatile
  2079                           
  2080                           ;mcc.c: 127: OSCCON2 = 0x00;
  2081  000EA2  0E00               	movlw	0
  2082  000EA4  6ED2               	movwf	4050,c	;volatile
  2083                           
  2084                           ;mcc.c: 129: OSCTUNE = 0x00;
  2085  000EA6  0E00               	movlw	0
  2086  000EA8  6E9B               	movwf	3995,c	;volatile
  2087                           
  2088                           ;mcc.c: 131: REFOCON = 0x00;
  2089  000EAA  0E00               	movlw	0
  2090  000EAC  6E9A               	movwf	3994,c	;volatile
  2091  000EAE  0012               	return		;funcret
  2092  000EB0                     __end_of_OSCILLATOR_Initialize:
  2093                           	opt stack 0
  2094                           tblptru	equ	0xFF8
  2095                           status	equ	0xFD8
  2096                           
  2097 ;; *************** function _INTERRUPT_Initialize *****************
  2098 ;; Defined at:
  2099 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;		None
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;		None
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  1    wreg      void 
  2106 ;; Registers used:
  2107 ;;		None
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2117 ;;Total ram usage:        0 bytes
  2118 ;; Hardware stack levels used:    1
  2119 ;; Hardware stack levels required when called:    3
  2120 ;; This function calls:
  2121 ;;		Nothing
  2122 ;; This function is called by:
  2123 ;;		_SYSTEM_Initialize
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           	psect	text13
  2128  000ECC                     __ptext13:
  2129                           	opt stack 0
  2130  000ECC                     _INTERRUPT_Initialize:
  2131                           	opt stack 26
  2132                           
  2133                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  2134                           
  2135                           ;incstack = 0
  2136  000ECC  9ED0               	bcf	4048,7,c	;volatile
  2137  000ECE  0012               	return		;funcret
  2138  000ED0                     __end_of_INTERRUPT_Initialize:
  2139                           	opt stack 0
  2140                           tblptru	equ	0xFF8
  2141                           status	equ	0xFD8
  2142                           
  2143 ;; *************** function _ECAN_Initialize *****************
  2144 ;; Defined at:
  2145 ;;		line 63 in file "mcc_generated_files/ecan.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;		None
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;		None
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  1    wreg      void 
  2152 ;; Registers used:
  2153 ;;		wreg, status,2, status,0
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2161 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2162 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2163 ;;Total ram usage:        1 bytes
  2164 ;; Hardware stack levels used:    1
  2165 ;; Hardware stack levels required when called:    3
  2166 ;; This function calls:
  2167 ;;		Nothing
  2168 ;; This function is called by:
  2169 ;;		_SYSTEM_Initialize
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           	psect	text14
  2174  000AE4                     __ptext14:
  2175                           	opt stack 0
  2176  000AE4                     _ECAN_Initialize:
  2177                           	opt stack 26
  2178                           
  2179                           ;ecan.c: 65: CANCON = 0x80;
  2180                           
  2181                           ;incstack = 0
  2182  000AE4  0E80               	movlw	128
  2183  000AE6  6E6F               	movwf	3951,c	;volatile
  2184  000AE8                     l1809:
  2185  000AE8  506E               	movf	3950,w,c	;volatile
  2186  000AEA  0BE0               	andlw	224
  2187  000AEC  0A80               	xorlw	128
  2188  000AEE  A4D8               	btfss	status,2,c
  2189  000AF0  D7FB               	goto	l1809
  2190                           
  2191                           ;ecan.c: 71: ECANCON = 0x00;
  2192  000AF2  0E00               	movlw	0
  2193  000AF4  6E72               	movwf	3954,c	;volatile
  2194                           
  2195                           ;ecan.c: 88: RXM0EIDH = 0x00;
  2196  000AF6  0E00               	movlw	0
  2197  000AF8  010E               	movlb	14	; () banked
  2198  000AFA  6FFA               	movwf	250,b	;volatile
  2199                           
  2200                           ;ecan.c: 89: RXM0EIDL = 0x00;
  2201  000AFC  0E00               	movlw	0
  2202  000AFE  010E               	movlb	14	; () banked
  2203  000B00  6FFB               	movwf	251,b	;volatile
  2204                           
  2205                           ;ecan.c: 90: RXM0SIDH = 0x00;
  2206  000B02  0E00               	movlw	0
  2207  000B04  010E               	movlb	14	; () banked
  2208  000B06  6FF8               	movwf	248,b	;volatile
  2209                           
  2210                           ;ecan.c: 91: RXM0SIDL = 0x00;
  2211  000B08  0E00               	movlw	0
  2212  000B0A  010E               	movlb	14	; () banked
  2213  000B0C  6FF9               	movwf	249,b	;volatile
  2214                           
  2215                           ; BSR set to: 14
  2216                           ;ecan.c: 93: RXM1EIDH = 0xFF;
  2217  000B0E  010E               	movlb	14	; () banked
  2218  000B10  69FE               	setf	254,b	;volatile
  2219                           
  2220                           ; BSR set to: 14
  2221                           ;ecan.c: 94: RXM1EIDL = 0xFF;
  2222  000B12  010E               	movlb	14	; () banked
  2223  000B14  69FF               	setf	255,b	;volatile
  2224                           
  2225                           ; BSR set to: 14
  2226                           ;ecan.c: 95: RXM1SIDH = 0xFF;
  2227  000B16  010E               	movlb	14	; () banked
  2228  000B18  69FC               	setf	252,b	;volatile
  2229                           
  2230                           ; BSR set to: 14
  2231                           ;ecan.c: 96: RXM1SIDL = 0xFF;
  2232  000B1A  010E               	movlb	14	; () banked
  2233  000B1C  69FD               	setf	253,b	;volatile
  2234                           
  2235                           ;ecan.c: 102: RXF0EIDH = 0x00;
  2236  000B1E  0E00               	movlw	0
  2237  000B20  010E               	movlb	14	; () banked
  2238  000B22  6FE2               	movwf	226,b	;volatile
  2239                           
  2240                           ;ecan.c: 103: RXF0EIDL = 0x00;
  2241  000B24  0E00               	movlw	0
  2242  000B26  010E               	movlb	14	; () banked
  2243  000B28  6FE3               	movwf	227,b	;volatile
  2244                           
  2245                           ;ecan.c: 104: RXF0SIDH = 0x88;
  2246  000B2A  0E88               	movlw	136
  2247  000B2C  010E               	movlb	14	; () banked
  2248  000B2E  6FE0               	movwf	224,b	;volatile
  2249                           
  2250                           ;ecan.c: 105: RXF0SIDL = 0x80;
  2251  000B30  0E80               	movlw	128
  2252  000B32  010E               	movlb	14	; () banked
  2253  000B34  6FE1               	movwf	225,b	;volatile
  2254                           
  2255                           ;ecan.c: 107: RXF1EIDH = 0x00;
  2256  000B36  0E00               	movlw	0
  2257  000B38  010E               	movlb	14	; () banked
  2258  000B3A  6FE6               	movwf	230,b	;volatile
  2259                           
  2260                           ;ecan.c: 108: RXF1EIDL = 0x00;
  2261  000B3C  0E00               	movlw	0
  2262  000B3E  010E               	movlb	14	; () banked
  2263  000B40  6FE7               	movwf	231,b	;volatile
  2264                           
  2265                           ;ecan.c: 109: RXF1SIDH = 0xCC;
  2266  000B42  0ECC               	movlw	204
  2267  000B44  010E               	movlb	14	; () banked
  2268  000B46  6FE4               	movwf	228,b	;volatile
  2269                           
  2270                           ;ecan.c: 110: RXF1SIDL = 0xC0;
  2271  000B48  0EC0               	movlw	192
  2272  000B4A  010E               	movlb	14	; () banked
  2273  000B4C  6FE5               	movwf	229,b	;volatile
  2274                           
  2275                           ;ecan.c: 112: RXF2EIDH = 0x00;
  2276  000B4E  0E00               	movlw	0
  2277  000B50  010E               	movlb	14	; () banked
  2278  000B52  6FEA               	movwf	234,b	;volatile
  2279                           
  2280                           ;ecan.c: 113: RXF2EIDL = 0x00;
  2281  000B54  0E00               	movlw	0
  2282  000B56  010E               	movlb	14	; () banked
  2283  000B58  6FEB               	movwf	235,b	;volatile
  2284                           
  2285                           ;ecan.c: 114: RXF2SIDH = 0x00;
  2286  000B5A  0E00               	movlw	0
  2287  000B5C  010E               	movlb	14	; () banked
  2288  000B5E  6FE8               	movwf	232,b	;volatile
  2289                           
  2290                           ;ecan.c: 115: RXF2SIDL = 0x00;
  2291  000B60  0E00               	movlw	0
  2292  000B62  010E               	movlb	14	; () banked
  2293  000B64  6FE9               	movwf	233,b	;volatile
  2294                           
  2295                           ;ecan.c: 117: RXF3EIDH = 0x00;
  2296  000B66  0E00               	movlw	0
  2297  000B68  010E               	movlb	14	; () banked
  2298  000B6A  6FEE               	movwf	238,b	;volatile
  2299                           
  2300                           ;ecan.c: 118: RXF3EIDL = 0x00;
  2301  000B6C  0E00               	movlw	0
  2302  000B6E  010E               	movlb	14	; () banked
  2303  000B70  6FEF               	movwf	239,b	;volatile
  2304                           
  2305                           ;ecan.c: 119: RXF3SIDH = 0x00;
  2306  000B72  0E00               	movlw	0
  2307  000B74  010E               	movlb	14	; () banked
  2308  000B76  6FEC               	movwf	236,b	;volatile
  2309                           
  2310                           ;ecan.c: 120: RXF3SIDL = 0x00;
  2311  000B78  0E00               	movlw	0
  2312  000B7A  010E               	movlb	14	; () banked
  2313  000B7C  6FED               	movwf	237,b	;volatile
  2314                           
  2315                           ;ecan.c: 122: RXF4EIDH = 0x00;
  2316  000B7E  0E00               	movlw	0
  2317  000B80  010E               	movlb	14	; () banked
  2318  000B82  6FF2               	movwf	242,b	;volatile
  2319                           
  2320                           ;ecan.c: 123: RXF4EIDL = 0x00;
  2321  000B84  0E00               	movlw	0
  2322  000B86  010E               	movlb	14	; () banked
  2323  000B88  6FF3               	movwf	243,b	;volatile
  2324                           
  2325                           ;ecan.c: 124: RXF4SIDH = 0x00;
  2326  000B8A  0E00               	movlw	0
  2327  000B8C  010E               	movlb	14	; () banked
  2328  000B8E  6FF0               	movwf	240,b	;volatile
  2329                           
  2330                           ;ecan.c: 125: RXF4SIDL = 0x00;
  2331  000B90  0E00               	movlw	0
  2332  000B92  010E               	movlb	14	; () banked
  2333  000B94  6FF1               	movwf	241,b	;volatile
  2334                           
  2335                           ;ecan.c: 127: RXF5EIDH = 0x00;
  2336  000B96  0E00               	movlw	0
  2337  000B98  010E               	movlb	14	; () banked
  2338  000B9A  6FF6               	movwf	246,b	;volatile
  2339                           
  2340                           ;ecan.c: 128: RXF5EIDL = 0x00;
  2341  000B9C  0E00               	movlw	0
  2342  000B9E  010E               	movlb	14	; () banked
  2343  000BA0  6FF7               	movwf	247,b	;volatile
  2344                           
  2345                           ;ecan.c: 129: RXF5SIDH = 0x00;
  2346  000BA2  0E00               	movlw	0
  2347  000BA4  010E               	movlb	14	; () banked
  2348  000BA6  6FF4               	movwf	244,b	;volatile
  2349                           
  2350                           ;ecan.c: 130: RXF5SIDL = 0x00;
  2351  000BA8  0E00               	movlw	0
  2352  000BAA  010E               	movlb	14	; () banked
  2353  000BAC  6FF5               	movwf	245,b	;volatile
  2354                           
  2355                           ;ecan.c: 145: BRGCON1 = 0x03;
  2356  000BAE  0E03               	movlw	3
  2357  000BB0  010E               	movlb	14	; () banked
  2358  000BB2  6F43               	movwf	67,b	;volatile
  2359                           
  2360                           ;ecan.c: 146: BRGCON2 = 0x98;
  2361  000BB4  0E98               	movlw	152
  2362  000BB6  010E               	movlb	14	; () banked
  2363  000BB8  6F44               	movwf	68,b	;volatile
  2364                           
  2365                           ;ecan.c: 147: BRGCON3 = 0x01;
  2366  000BBA  0E01               	movlw	1
  2367  000BBC  010E               	movlb	14	; () banked
  2368  000BBE  6F45               	movwf	69,b	;volatile
  2369                           
  2370                           ;ecan.c: 149: CANCON = 0x00;
  2371  000BC0  0E00               	movlw	0
  2372  000BC2  6E6F               	movwf	3951,c	;volatile
  2373  000BC4                     l1821:
  2374  000BC4  CF6E F00F          	movff	3950,??_ECAN_Initialize	;volatile
  2375  000BC8  0EE0               	movlw	224
  2376  000BCA  160F               	andwf	??_ECAN_Initialize,f,c
  2377  000BCC  B4D8               	btfsc	status,2,c
  2378  000BCE  0012               	return	
  2379  000BD0  D7F9               	goto	l1821
  2380  000BD2                     __end_of_ECAN_Initialize:
  2381                           	opt stack 0
  2382                           tblptru	equ	0xFF8
  2383                           status	equ	0xFD8
  2384                           
  2385 ;; *************** function _ADC_Initialize *****************
  2386 ;; Defined at:
  2387 ;;		line 58 in file "mcc_generated_files/adc.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;		None
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;		None
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  1    wreg      void 
  2394 ;; Registers used:
  2395 ;;		wreg, status,2
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2405 ;;Total ram usage:        0 bytes
  2406 ;; Hardware stack levels used:    1
  2407 ;; Hardware stack levels required when called:    3
  2408 ;; This function calls:
  2409 ;;		Nothing
  2410 ;; This function is called by:
  2411 ;;		_SYSTEM_Initialize
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415                           	psect	text15
  2416  000E88                     __ptext15:
  2417                           	opt stack 0
  2418  000E88                     _ADC_Initialize:
  2419                           	opt stack 26
  2420                           
  2421                           ;adc.c: 63: ADCON0 = 0x01;
  2422                           
  2423                           ;incstack = 0
  2424  000E88  0E01               	movlw	1
  2425  000E8A  6EC2               	movwf	4034,c	;volatile
  2426                           
  2427                           ;adc.c: 66: ADCON1 = 0x98;
  2428  000E8C  0E98               	movlw	152
  2429  000E8E  6EC1               	movwf	4033,c	;volatile
  2430                           
  2431                           ;adc.c: 69: ADCON2 = 0x8E;
  2432  000E90  0E8E               	movlw	142
  2433  000E92  6EC0               	movwf	4032,c	;volatile
  2434                           
  2435                           ;adc.c: 72: ADRESH = 0x00;
  2436  000E94  0E00               	movlw	0
  2437  000E96  6EC4               	movwf	4036,c	;volatile
  2438                           
  2439                           ;adc.c: 75: ADRESL = 0x00;
  2440  000E98  0E00               	movlw	0
  2441  000E9A  6EC3               	movwf	4035,c	;volatile
  2442  000E9C  0012               	return		;funcret
  2443  000E9E                     __end_of_ADC_Initialize:
  2444                           	opt stack 0
  2445                           tblptru	equ	0xFF8
  2446                           status	equ	0xFD8
  2447                           
  2448 ;; *************** function _CAN_transmit *****************
  2449 ;; Defined at:
  2450 ;;		line 167 in file "mcc_generated_files/ecan.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;  tempCanMsg      2   32[COMRAM] PTR struct .
  2453 ;;		 -> main@cur_data1(14), 
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;  tempSIDL        1   38[COMRAM] unsigned char 
  2456 ;;  tempSIDH        1   37[COMRAM] unsigned char 
  2457 ;;  tempEIDL        1   36[COMRAM] unsigned char 
  2458 ;;  tempEIDH        1   35[COMRAM] unsigned char 
  2459 ;;  returnValue     1   34[COMRAM] unsigned char 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  1    wreg      unsigned char 
  2462 ;; Registers used:
  2463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2469 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2470 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2472 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2473 ;;Total ram usage:        7 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    4
  2476 ;; This function calls:
  2477 ;;		_convertCANid2Reg
  2478 ;; This function is called by:
  2479 ;;		_main
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           	psect	text16
  2484  000420                     __ptext16:
  2485                           	opt stack 0
  2486  000420                     _CAN_transmit:
  2487                           	opt stack 26
  2488                           
  2489                           ;ecan.c: 168: unsigned char tempEIDH = 0;
  2490                           
  2491                           ;incstack = 0
  2492  000420  0E00               	movlw	0
  2493  000422  6E24               	movwf	CAN_transmit@tempEIDH,c
  2494                           
  2495                           ;ecan.c: 169: unsigned char tempEIDL = 0;
  2496  000424  0E00               	movlw	0
  2497  000426  6E25               	movwf	CAN_transmit@tempEIDL,c
  2498                           
  2499                           ;ecan.c: 170: unsigned char tempSIDH = 0;
  2500  000428  0E00               	movlw	0
  2501  00042A  6E26               	movwf	CAN_transmit@tempSIDH,c
  2502                           
  2503                           ;ecan.c: 171: unsigned char tempSIDL = 0;
  2504  00042C  0E00               	movlw	0
  2505  00042E  6E27               	movwf	CAN_transmit@tempSIDL,c
  2506                           
  2507                           ;ecan.c: 173: unsigned char returnValue = 0;
  2508  000430  0E00               	movlw	0
  2509  000432  6E23               	movwf	CAN_transmit@returnValue,c
  2510                           
  2511                           ;ecan.c: 175: if (TXB0CONbits.TXREQ != 1) {
  2512  000434  010F               	movlb	15	; () banked
  2513  000436  B720               	btfsc	32,3,b	;volatile
  2514  000438  D084               	goto	l354
  2515                           
  2516                           ; BSR set to: 15
  2517                           ;ecan.c: 177: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  2518  00043A  EE20 F001          	lfsr	2,1
  2519  00043E  5021               	movf	CAN_transmit@tempCanMsg,w,c
  2520  000440  26D9               	addwf	fsr2l,f,c
  2521  000442  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  2522  000444  22DA               	addwfc	fsr2h,f,c
  2523  000446  CFDE F00F          	movff	postinc2,convertCANid2Reg@tempPassedInID
  2524  00044A  CFDE F010          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  2525  00044E  CFDE F011          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  2526  000452  CFDE F012          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  2527  000456  C021  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  2528  00045A  C022  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  2529  00045E  50DF               	movf	indf2,w,c
  2530  000460  6E13               	movwf	convertCANid2Reg@canIdType,c
  2531  000462  0E24               	movlw	low CAN_transmit@tempEIDH
  2532  000464  6E14               	movwf	convertCANid2Reg@passedInEIDH,c
  2533  000466  0E00               	movlw	high CAN_transmit@tempEIDH
  2534  000468  6E15               	movwf	convertCANid2Reg@passedInEIDH+1,c
  2535  00046A  0E25               	movlw	low CAN_transmit@tempEIDL
  2536  00046C  6E16               	movwf	convertCANid2Reg@passedInEIDL,c
  2537  00046E  0E00               	movlw	high CAN_transmit@tempEIDL
  2538  000470  6E17               	movwf	convertCANid2Reg@passedInEIDL+1,c
  2539  000472  0E26               	movlw	low CAN_transmit@tempSIDH
  2540  000474  6E18               	movwf	convertCANid2Reg@passedInSIDH,c
  2541  000476  0E00               	movlw	high CAN_transmit@tempSIDH
  2542  000478  6E19               	movwf	convertCANid2Reg@passedInSIDH+1,c
  2543  00047A  0E27               	movlw	low CAN_transmit@tempSIDL
  2544  00047C  6E1A               	movwf	convertCANid2Reg@passedInSIDL,c
  2545  00047E  0E00               	movlw	high CAN_transmit@tempSIDL
  2546  000480  6E1B               	movwf	convertCANid2Reg@passedInSIDL+1,c
  2547  000482  ECAF  F003         	call	_convertCANid2Reg	;wreg free
  2548                           
  2549                           ;ecan.c: 179: TXB0EIDH = tempEIDH;
  2550  000486  C024  FF23         	movff	CAN_transmit@tempEIDH,3875	;volatile
  2551                           
  2552                           ;ecan.c: 180: TXB0EIDL = tempEIDL;
  2553  00048A  C025  FF24         	movff	CAN_transmit@tempEIDL,3876	;volatile
  2554                           
  2555                           ;ecan.c: 181: TXB0SIDH = tempSIDH;
  2556  00048E  C026  FF21         	movff	CAN_transmit@tempSIDH,3873	;volatile
  2557                           
  2558                           ;ecan.c: 182: TXB0SIDL = tempSIDL;
  2559  000492  C027  FF22         	movff	CAN_transmit@tempSIDL,3874	;volatile
  2560                           
  2561                           ;ecan.c: 183: TXB0DLC = tempCanMsg->frame.dlc;
  2562  000496  EE20 F005          	lfsr	2,5
  2563  00049A  5021               	movf	CAN_transmit@tempCanMsg,w,c
  2564  00049C  26D9               	addwf	fsr2l,f,c
  2565  00049E  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  2566  0004A0  22DA               	addwfc	fsr2h,f,c
  2567  0004A2  50DF               	movf	indf2,w,c
  2568  0004A4  010F               	movlb	15	; () banked
  2569  0004A6  6F25               	movwf	37,b	;volatile
  2570                           
  2571                           ; BSR set to: 15
  2572                           ;ecan.c: 184: TXB0D0 = tempCanMsg->frame.data0;
  2573  0004A8  EE20 F006          	lfsr	2,6
  2574  0004AC  5021               	movf	CAN_transmit@tempCanMsg,w,c
  2575  0004AE  26D9               	addwf	fsr2l,f,c
  2576  0004B0  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  2577  0004B2  22DA               	addwfc	fsr2h,f,c
  2578  0004B4  50DF               	movf	indf2,w,c
  2579  0004B6  010F               	movlb	15	; () banked
  2580  0004B8  6F26               	movwf	38,b	;volatile
  2581                           
  2582                           ; BSR set to: 15
  2583                           ;ecan.c: 185: TXB0D1 = tempCanMsg->frame.data1;
  2584  0004BA  EE20 F007          	lfsr	2,7
  2585  0004BE  5021               	movf	CAN_transmit@tempCanMsg,w,c
  2586  0004C0  26D9               	addwf	fsr2l,f,c
  2587  0004C2  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  2588  0004C4  22DA               	addwfc	fsr2h,f,c
  2589  0004C6  50DF               	movf	indf2,w,c
  2590  0004C8  010F               	movlb	15	; () banked
  2591  0004CA  6F27               	movwf	39,b	;volatile
  2592                           
  2593                           ; BSR set to: 15
  2594                           ;ecan.c: 186: TXB0D2 = tempCanMsg->frame.data2;
  2595  0004CC  EE20 F008          	lfsr	2,8
  2596  0004D0  5021               	movf	CAN_transmit@tempCanMsg,w,c
  2597  0004D2  26D9               	addwf	fsr2l,f,c
  2598  0004D4  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  2599  0004D6  22DA               	addwfc	fsr2h,f,c
  2600  0004D8  50DF               	movf	indf2,w,c
  2601  0004DA  010F               	movlb	15	; () banked
  2602  0004DC  6F28               	movwf	40,b	;volatile
  2603                           
  2604                           ; BSR set to: 15
  2605                           ;ecan.c: 187: TXB0D3 = tempCanMsg->frame.data3;
  2606  0004DE  EE20 F009          	lfsr	2,9
  2607  0004E2  5021               	movf	CAN_transmit@tempCanMsg,w,c
  2608  0004E4  26D9               	addwf	fsr2l,f,c
  2609  0004E6  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  2610  0004E8  22DA               	addwfc	fsr2h,f,c
  2611  0004EA  50DF               	movf	indf2,w,c
  2612  0004EC  010F               	movlb	15	; () banked
  2613  0004EE  6F29               	movwf	41,b	;volatile
  2614                           
  2615                           ; BSR set to: 15
  2616                           ;ecan.c: 188: TXB0D4 = tempCanMsg->frame.data4;
  2617  0004F0  EE20 F00A          	lfsr	2,10
  2618  0004F4  5021               	movf	CAN_transmit@tempCanMsg,w,c
  2619  0004F6  26D9               	addwf	fsr2l,f,c
  2620  0004F8  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  2621  0004FA  22DA               	addwfc	fsr2h,f,c
  2622  0004FC  50DF               	movf	indf2,w,c
  2623  0004FE  010F               	movlb	15	; () banked
  2624  000500  6F2A               	movwf	42,b	;volatile
  2625                           
  2626                           ; BSR set to: 15
  2627                           ;ecan.c: 189: TXB0D5 = tempCanMsg->frame.data5;
  2628  000502  EE20 F00B          	lfsr	2,11
  2629  000506  5021               	movf	CAN_transmit@tempCanMsg,w,c
  2630  000508  26D9               	addwf	fsr2l,f,c
  2631  00050A  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  2632  00050C  22DA               	addwfc	fsr2h,f,c
  2633  00050E  50DF               	movf	indf2,w,c
  2634  000510  010F               	movlb	15	; () banked
  2635  000512  6F2B               	movwf	43,b	;volatile
  2636                           
  2637                           ; BSR set to: 15
  2638                           ;ecan.c: 190: TXB0D6 = tempCanMsg->frame.data6;
  2639  000514  EE20 F00C          	lfsr	2,12
  2640  000518  5021               	movf	CAN_transmit@tempCanMsg,w,c
  2641  00051A  26D9               	addwf	fsr2l,f,c
  2642  00051C  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  2643  00051E  22DA               	addwfc	fsr2h,f,c
  2644  000520  50DF               	movf	indf2,w,c
  2645  000522  010F               	movlb	15	; () banked
  2646  000524  6F2C               	movwf	44,b	;volatile
  2647                           
  2648                           ; BSR set to: 15
  2649                           ;ecan.c: 191: TXB0D7 = tempCanMsg->frame.data7;
  2650  000526  EE20 F00D          	lfsr	2,13
  2651  00052A  5021               	movf	CAN_transmit@tempCanMsg,w,c
  2652  00052C  26D9               	addwf	fsr2l,f,c
  2653  00052E  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  2654  000530  22DA               	addwfc	fsr2h,f,c
  2655  000532  50DF               	movf	indf2,w,c
  2656  000534  010F               	movlb	15	; () banked
  2657  000536  6F2D               	movwf	45,b	;volatile
  2658                           
  2659                           ; BSR set to: 15
  2660                           ;ecan.c: 193: TXB0CONbits.TXREQ = 1;
  2661  000538  010F               	movlb	15	; () banked
  2662  00053A  8720               	bsf	32,3,b	;volatile
  2663                           
  2664                           ; BSR set to: 15
  2665                           ;ecan.c: 194: returnValue = 1;
  2666  00053C  0E01               	movlw	1
  2667  00053E  6E23               	movwf	CAN_transmit@returnValue,c
  2668                           
  2669                           ;ecan.c: 195: } else if (TXB1CONbits.TXREQ != 1) {
  2670  000540  0012               	return	
  2671  000542                     l354:
  2672                           
  2673                           ; BSR set to: 15
  2674  000542  010F               	movlb	15	; () banked
  2675  000544  B710               	btfsc	16,3,b	;volatile
  2676  000546  D084               	goto	l356
  2677                           
  2678                           ; BSR set to: 15
  2679                           ;ecan.c: 197: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  2680  000548  EE20 F001          	lfsr	2,1
  2681  00054C  5021               	movf	CAN_transmit@tempCanMsg,w,c
  2682  00054E  26D9               	addwf	fsr2l,f,c
  2683  000550  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  2684  000552  22DA               	addwfc	fsr2h,f,c
  2685  000554  CFDE F00F          	movff	postinc2,convertCANid2Reg@tempPassedInID
  2686  000558  CFDE F010          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  2687  00055C  CFDE F011          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  2688  000560  CFDE F012          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  2689  000564  C021  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  2690  000568  C022  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  2691  00056C  50DF               	movf	indf2,w,c
  2692  00056E  6E13               	movwf	convertCANid2Reg@canIdType,c
  2693  000570  0E24               	movlw	low CAN_transmit@tempEIDH
  2694  000572  6E14               	movwf	convertCANid2Reg@passedInEIDH,c
  2695  000574  0E00               	movlw	high CAN_transmit@tempEIDH
  2696  000576  6E15               	movwf	convertCANid2Reg@passedInEIDH+1,c
  2697  000578  0E25               	movlw	low CAN_transmit@tempEIDL
  2698  00057A  6E16               	movwf	convertCANid2Reg@passedInEIDL,c
  2699  00057C  0E00               	movlw	high CAN_transmit@tempEIDL
  2700  00057E  6E17               	movwf	convertCANid2Reg@passedInEIDL+1,c
  2701  000580  0E26               	movlw	low CAN_transmit@tempSIDH
  2702  000582  6E18               	movwf	convertCANid2Reg@passedInSIDH,c
  2703  000584  0E00               	movlw	high CAN_transmit@tempSIDH
  2704  000586  6E19               	movwf	convertCANid2Reg@passedInSIDH+1,c
  2705  000588  0E27               	movlw	low CAN_transmit@tempSIDL
  2706  00058A  6E1A               	movwf	convertCANid2Reg@passedInSIDL,c
  2707  00058C  0E00               	movlw	high CAN_transmit@tempSIDL
  2708  00058E  6E1B               	movwf	convertCANid2Reg@passedInSIDL+1,c
  2709  000590  ECAF  F003         	call	_convertCANid2Reg	;wreg free
  2710                           
  2711                           ;ecan.c: 199: TXB1EIDH = tempEIDH;
  2712  000594  C024  FF13         	movff	CAN_transmit@tempEIDH,3859	;volatile
  2713                           
  2714                           ;ecan.c: 200: TXB1EIDL = tempEIDL;
  2715  000598  C025  FF14         	movff	CAN_transmit@tempEIDL,3860	;volatile
  2716                           
  2717                           ;ecan.c: 201: TXB1SIDH = tempSIDH;
  2718  00059C  C026  FF11         	movff	CAN_transmit@tempSIDH,3857	;volatile
  2719                           
  2720                           ;ecan.c: 202: TXB1SIDL = tempSIDL;
  2721  0005A0  C027  FF12         	movff	CAN_transmit@tempSIDL,3858	;volatile
  2722                           
  2723                           ;ecan.c: 203: TXB1DLC = tempCanMsg->frame.dlc;
  2724  0005A4  EE20 F005          	lfsr	2,5
  2725  0005A8  5021               	movf	CAN_transmit@tempCanMsg,w,c
  2726  0005AA  26D9               	addwf	fsr2l,f,c
  2727  0005AC  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  2728  0005AE  22DA               	addwfc	fsr2h,f,c
  2729  0005B0  50DF               	movf	indf2,w,c
  2730  0005B2  010F               	movlb	15	; () banked
  2731  0005B4  6F15               	movwf	21,b	;volatile
  2732                           
  2733                           ; BSR set to: 15
  2734                           ;ecan.c: 204: TXB1D0 = tempCanMsg->frame.data0;
  2735  0005B6  EE20 F006          	lfsr	2,6
  2736  0005BA  5021               	movf	CAN_transmit@tempCanMsg,w,c
  2737  0005BC  26D9               	addwf	fsr2l,f,c
  2738  0005BE  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  2739  0005C0  22DA               	addwfc	fsr2h,f,c
  2740  0005C2  50DF               	movf	indf2,w,c
  2741  0005C4  010F               	movlb	15	; () banked
  2742  0005C6  6F16               	movwf	22,b	;volatile
  2743                           
  2744                           ; BSR set to: 15
  2745                           ;ecan.c: 205: TXB1D1 = tempCanMsg->frame.data1;
  2746  0005C8  EE20 F007          	lfsr	2,7
  2747  0005CC  5021               	movf	CAN_transmit@tempCanMsg,w,c
  2748  0005CE  26D9               	addwf	fsr2l,f,c
  2749  0005D0  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  2750  0005D2  22DA               	addwfc	fsr2h,f,c
  2751  0005D4  50DF               	movf	indf2,w,c
  2752  0005D6  010F               	movlb	15	; () banked
  2753  0005D8  6F17               	movwf	23,b	;volatile
  2754                           
  2755                           ; BSR set to: 15
  2756                           ;ecan.c: 206: TXB1D2 = tempCanMsg->frame.data2;
  2757  0005DA  EE20 F008          	lfsr	2,8
  2758  0005DE  5021               	movf	CAN_transmit@tempCanMsg,w,c
  2759  0005E0  26D9               	addwf	fsr2l,f,c
  2760  0005E2  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  2761  0005E4  22DA               	addwfc	fsr2h,f,c
  2762  0005E6  50DF               	movf	indf2,w,c
  2763  0005E8  010F               	movlb	15	; () banked
  2764  0005EA  6F18               	movwf	24,b	;volatile
  2765                           
  2766                           ; BSR set to: 15
  2767                           ;ecan.c: 207: TXB1D3 = tempCanMsg->frame.data3;
  2768  0005EC  EE20 F009          	lfsr	2,9
  2769  0005F0  5021               	movf	CAN_transmit@tempCanMsg,w,c
  2770  0005F2  26D9               	addwf	fsr2l,f,c
  2771  0005F4  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  2772  0005F6  22DA               	addwfc	fsr2h,f,c
  2773  0005F8  50DF               	movf	indf2,w,c
  2774  0005FA  010F               	movlb	15	; () banked
  2775  0005FC  6F19               	movwf	25,b	;volatile
  2776                           
  2777                           ; BSR set to: 15
  2778                           ;ecan.c: 208: TXB1D4 = tempCanMsg->frame.data4;
  2779  0005FE  EE20 F00A          	lfsr	2,10
  2780  000602  5021               	movf	CAN_transmit@tempCanMsg,w,c
  2781  000604  26D9               	addwf	fsr2l,f,c
  2782  000606  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  2783  000608  22DA               	addwfc	fsr2h,f,c
  2784  00060A  50DF               	movf	indf2,w,c
  2785  00060C  010F               	movlb	15	; () banked
  2786  00060E  6F1A               	movwf	26,b	;volatile
  2787                           
  2788                           ; BSR set to: 15
  2789                           ;ecan.c: 209: TXB1D5 = tempCanMsg->frame.data5;
  2790  000610  EE20 F00B          	lfsr	2,11
  2791  000614  5021               	movf	CAN_transmit@tempCanMsg,w,c
  2792  000616  26D9               	addwf	fsr2l,f,c
  2793  000618  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  2794  00061A  22DA               	addwfc	fsr2h,f,c
  2795  00061C  50DF               	movf	indf2,w,c
  2796  00061E  010F               	movlb	15	; () banked
  2797  000620  6F1B               	movwf	27,b	;volatile
  2798                           
  2799                           ; BSR set to: 15
  2800                           ;ecan.c: 210: TXB1D6 = tempCanMsg->frame.data6;
  2801  000622  EE20 F00C          	lfsr	2,12
  2802  000626  5021               	movf	CAN_transmit@tempCanMsg,w,c
  2803  000628  26D9               	addwf	fsr2l,f,c
  2804  00062A  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  2805  00062C  22DA               	addwfc	fsr2h,f,c
  2806  00062E  50DF               	movf	indf2,w,c
  2807  000630  010F               	movlb	15	; () banked
  2808  000632  6F1C               	movwf	28,b	;volatile
  2809                           
  2810                           ; BSR set to: 15
  2811                           ;ecan.c: 211: TXB1D7 = tempCanMsg->frame.data7;
  2812  000634  EE20 F00D          	lfsr	2,13
  2813  000638  5021               	movf	CAN_transmit@tempCanMsg,w,c
  2814  00063A  26D9               	addwf	fsr2l,f,c
  2815  00063C  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  2816  00063E  22DA               	addwfc	fsr2h,f,c
  2817  000640  50DF               	movf	indf2,w,c
  2818  000642  010F               	movlb	15	; () banked
  2819  000644  6F1D               	movwf	29,b	;volatile
  2820                           
  2821                           ; BSR set to: 15
  2822                           ;ecan.c: 213: TXB1CONbits.TXREQ = 1;
  2823  000646  010F               	movlb	15	; () banked
  2824  000648  8710               	bsf	16,3,b	;volatile
  2825                           
  2826                           ; BSR set to: 15
  2827                           ;ecan.c: 214: returnValue = 1;
  2828  00064A  0E01               	movlw	1
  2829  00064C  6E23               	movwf	CAN_transmit@returnValue,c
  2830                           
  2831                           ;ecan.c: 215: } else if (TXB2CONbits.TXREQ != 1) {
  2832  00064E  0012               	return	
  2833  000650                     l356:
  2834                           
  2835                           ; BSR set to: 15
  2836  000650  010F               	movlb	15	; () banked
  2837  000652  B700               	btfsc	0,3,b	;volatile
  2838  000654  0012               	return	
  2839                           
  2840                           ; BSR set to: 15
  2841                           ;ecan.c: 217: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  2842  000656  EE20 F001          	lfsr	2,1
  2843  00065A  5021               	movf	CAN_transmit@tempCanMsg,w,c
  2844  00065C  26D9               	addwf	fsr2l,f,c
  2845  00065E  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  2846  000660  22DA               	addwfc	fsr2h,f,c
  2847  000662  CFDE F00F          	movff	postinc2,convertCANid2Reg@tempPassedInID
  2848  000666  CFDE F010          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  2849  00066A  CFDE F011          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  2850  00066E  CFDE F012          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  2851  000672  C021  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  2852  000676  C022  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  2853  00067A  50DF               	movf	indf2,w,c
  2854  00067C  6E13               	movwf	convertCANid2Reg@canIdType,c
  2855  00067E  0E24               	movlw	low CAN_transmit@tempEIDH
  2856  000680  6E14               	movwf	convertCANid2Reg@passedInEIDH,c
  2857  000682  0E00               	movlw	high CAN_transmit@tempEIDH
  2858  000684  6E15               	movwf	convertCANid2Reg@passedInEIDH+1,c
  2859  000686  0E25               	movlw	low CAN_transmit@tempEIDL
  2860  000688  6E16               	movwf	convertCANid2Reg@passedInEIDL,c
  2861  00068A  0E00               	movlw	high CAN_transmit@tempEIDL
  2862  00068C  6E17               	movwf	convertCANid2Reg@passedInEIDL+1,c
  2863  00068E  0E26               	movlw	low CAN_transmit@tempSIDH
  2864  000690  6E18               	movwf	convertCANid2Reg@passedInSIDH,c
  2865  000692  0E00               	movlw	high CAN_transmit@tempSIDH
  2866  000694  6E19               	movwf	convertCANid2Reg@passedInSIDH+1,c
  2867  000696  0E27               	movlw	low CAN_transmit@tempSIDL
  2868  000698  6E1A               	movwf	convertCANid2Reg@passedInSIDL,c
  2869  00069A  0E00               	movlw	high CAN_transmit@tempSIDL
  2870  00069C  6E1B               	movwf	convertCANid2Reg@passedInSIDL+1,c
  2871  00069E  ECAF  F003         	call	_convertCANid2Reg	;wreg free
  2872                           
  2873                           ;ecan.c: 219: TXB2EIDH = tempEIDH;
  2874  0006A2  C024  FF03         	movff	CAN_transmit@tempEIDH,3843	;volatile
  2875                           
  2876                           ;ecan.c: 220: TXB2EIDL = tempEIDL;
  2877  0006A6  C025  FF04         	movff	CAN_transmit@tempEIDL,3844	;volatile
  2878                           
  2879                           ;ecan.c: 221: TXB2SIDH = tempSIDH;
  2880  0006AA  C026  FF01         	movff	CAN_transmit@tempSIDH,3841	;volatile
  2881                           
  2882                           ;ecan.c: 222: TXB2SIDL = tempSIDL;
  2883  0006AE  C027  FF02         	movff	CAN_transmit@tempSIDL,3842	;volatile
  2884                           
  2885                           ;ecan.c: 223: TXB2DLC = tempCanMsg->frame.dlc;
  2886  0006B2  EE20 F005          	lfsr	2,5
  2887  0006B6  5021               	movf	CAN_transmit@tempCanMsg,w,c
  2888  0006B8  26D9               	addwf	fsr2l,f,c
  2889  0006BA  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  2890  0006BC  22DA               	addwfc	fsr2h,f,c
  2891  0006BE  50DF               	movf	indf2,w,c
  2892  0006C0  010F               	movlb	15	; () banked
  2893  0006C2  6F05               	movwf	5,b	;volatile
  2894                           
  2895                           ; BSR set to: 15
  2896                           ;ecan.c: 224: TXB2D0 = tempCanMsg->frame.data0;
  2897  0006C4  EE20 F006          	lfsr	2,6
  2898  0006C8  5021               	movf	CAN_transmit@tempCanMsg,w,c
  2899  0006CA  26D9               	addwf	fsr2l,f,c
  2900  0006CC  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  2901  0006CE  22DA               	addwfc	fsr2h,f,c
  2902  0006D0  50DF               	movf	indf2,w,c
  2903  0006D2  010F               	movlb	15	; () banked
  2904  0006D4  6F06               	movwf	6,b	;volatile
  2905                           
  2906                           ; BSR set to: 15
  2907                           ;ecan.c: 225: TXB2D1 = tempCanMsg->frame.data1;
  2908  0006D6  EE20 F007          	lfsr	2,7
  2909  0006DA  5021               	movf	CAN_transmit@tempCanMsg,w,c
  2910  0006DC  26D9               	addwf	fsr2l,f,c
  2911  0006DE  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  2912  0006E0  22DA               	addwfc	fsr2h,f,c
  2913  0006E2  50DF               	movf	indf2,w,c
  2914  0006E4  010F               	movlb	15	; () banked
  2915  0006E6  6F07               	movwf	7,b	;volatile
  2916                           
  2917                           ; BSR set to: 15
  2918                           ;ecan.c: 226: TXB2D2 = tempCanMsg->frame.data2;
  2919  0006E8  EE20 F008          	lfsr	2,8
  2920  0006EC  5021               	movf	CAN_transmit@tempCanMsg,w,c
  2921  0006EE  26D9               	addwf	fsr2l,f,c
  2922  0006F0  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  2923  0006F2  22DA               	addwfc	fsr2h,f,c
  2924  0006F4  50DF               	movf	indf2,w,c
  2925  0006F6  010F               	movlb	15	; () banked
  2926  0006F8  6F08               	movwf	8,b	;volatile
  2927                           
  2928                           ; BSR set to: 15
  2929                           ;ecan.c: 227: TXB2D3 = tempCanMsg->frame.data3;
  2930  0006FA  EE20 F009          	lfsr	2,9
  2931  0006FE  5021               	movf	CAN_transmit@tempCanMsg,w,c
  2932  000700  26D9               	addwf	fsr2l,f,c
  2933  000702  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  2934  000704  22DA               	addwfc	fsr2h,f,c
  2935  000706  50DF               	movf	indf2,w,c
  2936  000708  010F               	movlb	15	; () banked
  2937  00070A  6F09               	movwf	9,b	;volatile
  2938                           
  2939                           ; BSR set to: 15
  2940                           ;ecan.c: 228: TXB2D4 = tempCanMsg->frame.data4;
  2941  00070C  EE20 F00A          	lfsr	2,10
  2942  000710  5021               	movf	CAN_transmit@tempCanMsg,w,c
  2943  000712  26D9               	addwf	fsr2l,f,c
  2944  000714  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  2945  000716  22DA               	addwfc	fsr2h,f,c
  2946  000718  50DF               	movf	indf2,w,c
  2947  00071A  010F               	movlb	15	; () banked
  2948  00071C  6F0A               	movwf	10,b	;volatile
  2949                           
  2950                           ; BSR set to: 15
  2951                           ;ecan.c: 229: TXB2D5 = tempCanMsg->frame.data5;
  2952  00071E  EE20 F00B          	lfsr	2,11
  2953  000722  5021               	movf	CAN_transmit@tempCanMsg,w,c
  2954  000724  26D9               	addwf	fsr2l,f,c
  2955  000726  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  2956  000728  22DA               	addwfc	fsr2h,f,c
  2957  00072A  50DF               	movf	indf2,w,c
  2958  00072C  010F               	movlb	15	; () banked
  2959  00072E  6F0B               	movwf	11,b	;volatile
  2960                           
  2961                           ; BSR set to: 15
  2962                           ;ecan.c: 230: TXB2D6 = tempCanMsg->frame.data6;
  2963  000730  EE20 F00C          	lfsr	2,12
  2964  000734  5021               	movf	CAN_transmit@tempCanMsg,w,c
  2965  000736  26D9               	addwf	fsr2l,f,c
  2966  000738  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  2967  00073A  22DA               	addwfc	fsr2h,f,c
  2968  00073C  50DF               	movf	indf2,w,c
  2969  00073E  010F               	movlb	15	; () banked
  2970  000740  6F0C               	movwf	12,b	;volatile
  2971                           
  2972                           ; BSR set to: 15
  2973                           ;ecan.c: 231: TXB2D7 = tempCanMsg->frame.data7;
  2974  000742  EE20 F00D          	lfsr	2,13
  2975  000746  5021               	movf	CAN_transmit@tempCanMsg,w,c
  2976  000748  26D9               	addwf	fsr2l,f,c
  2977  00074A  5022               	movf	CAN_transmit@tempCanMsg+1,w,c
  2978  00074C  22DA               	addwfc	fsr2h,f,c
  2979  00074E  50DF               	movf	indf2,w,c
  2980  000750  010F               	movlb	15	; () banked
  2981  000752  6F0D               	movwf	13,b	;volatile
  2982                           
  2983                           ; BSR set to: 15
  2984                           ;ecan.c: 233: TXB2CONbits.TXREQ = 1;
  2985  000754  010F               	movlb	15	; () banked
  2986  000756  8700               	bsf	0,3,b	;volatile
  2987                           
  2988                           ; BSR set to: 15
  2989                           ;ecan.c: 234: returnValue = 1;
  2990  000758  0E01               	movlw	1
  2991  00075A  6E23               	movwf	CAN_transmit@returnValue,c
  2992                           
  2993                           ; BSR set to: 15
  2994                           
  2995                           ; BSR set to: 15
  2996                           
  2997                           ; BSR set to: 15
  2998  00075C  0012               	return	
  2999  00075E                     __end_of_CAN_transmit:
  3000                           	opt stack 0
  3001                           tblptru	equ	0xFF8
  3002                           indf2	equ	0xFDF
  3003                           postinc2	equ	0xFDE
  3004                           fsr2h	equ	0xFDA
  3005                           fsr2l	equ	0xFD9
  3006                           status	equ	0xFD8
  3007                           
  3008 ;; *************** function _convertCANid2Reg *****************
  3009 ;; Defined at:
  3010 ;;		line 400 in file "mcc_generated_files/ecan.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;  tempPassedIn    4   14[COMRAM] unsigned long 
  3013 ;;  canIdType       1   18[COMRAM] unsigned char 
  3014 ;;  passedInEIDH    2   19[COMRAM] PTR unsigned char 
  3015 ;;		 -> CAN_transmit@tempEIDH(1), 
  3016 ;;  passedInEIDL    2   21[COMRAM] PTR unsigned char 
  3017 ;;		 -> CAN_transmit@tempEIDL(1), 
  3018 ;;  passedInSIDH    2   23[COMRAM] PTR unsigned char 
  3019 ;;		 -> CAN_transmit@tempSIDH(1), 
  3020 ;;  passedInSIDL    2   25[COMRAM] PTR unsigned char 
  3021 ;;		 -> CAN_transmit@tempSIDL(1), 
  3022 ;; Auto vars:     Size  Location     Type
  3023 ;;  wipSIDL         1   31[COMRAM] unsigned char 
  3024 ;; Return value:  Size  Location     Type
  3025 ;;                  1    wreg      void 
  3026 ;; Registers used:
  3027 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3028 ;; Tracked objects:
  3029 ;;		On entry : 0/0
  3030 ;;		On exit  : 0/0
  3031 ;;		Unchanged: 0/0
  3032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3033 ;;      Params:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3034 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3035 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3036 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3037 ;;Total ram usage:       18 bytes
  3038 ;; Hardware stack levels used:    1
  3039 ;; Hardware stack levels required when called:    3
  3040 ;; This function calls:
  3041 ;;		Nothing
  3042 ;; This function is called by:
  3043 ;;		_CAN_transmit
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           	psect	text17
  3048  00075E                     __ptext17:
  3049                           	opt stack 0
  3050  00075E                     _convertCANid2Reg:
  3051                           	opt stack 26
  3052                           
  3053                           ;ecan.c: 401: unsigned char wipSIDL = 0;
  3054                           
  3055                           ; BSR set to: 15
  3056                           ;incstack = 0
  3057  00075E  0E00               	movlw	0
  3058  000760  6E20               	movwf	convertCANid2Reg@wipSIDL,c
  3059                           
  3060                           ;ecan.c: 403: if (canIdType == 2) {
  3061  000762  0E02               	movlw	2
  3062  000764  1813               	xorwf	convertCANid2Reg@canIdType,w,c
  3063  000766  A4D8               	btfss	status,2,c
  3064  000768  D081               	goto	l1847
  3065                           
  3066                           ;ecan.c: 406: *passedInEIDL = 0xFF & tempPassedInID;
  3067  00076A  C016  FFD9         	movff	convertCANid2Reg@passedInEIDL,fsr2l
  3068  00076E  C017  FFDA         	movff	convertCANid2Reg@passedInEIDL+1,fsr2h
  3069  000772  C00F  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  3070                           
  3071                           ;ecan.c: 407: tempPassedInID = tempPassedInID >> 8;
  3072  000776  C00F  F01C         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  3073  00077A  C010  F01D         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  3074  00077E  C011  F01E         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  3075  000782  C012  F01F         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  3076  000786  C01D  F01C         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  3077  00078A  C01E  F01D         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  3078  00078E  C01F  F01E         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  3079  000792  6A1F               	clrf	??_convertCANid2Reg+3,c
  3080  000794  C01C  F00F         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  3081  000798  C01D  F010         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  3082  00079C  C01E  F011         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  3083  0007A0  C01F  F012         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  3084                           
  3085                           ;ecan.c: 410: *passedInEIDH = 0xFF & tempPassedInID;
  3086  0007A4  C014  FFD9         	movff	convertCANid2Reg@passedInEIDH,fsr2l
  3087  0007A8  C015  FFDA         	movff	convertCANid2Reg@passedInEIDH+1,fsr2h
  3088  0007AC  C00F  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  3089                           
  3090                           ;ecan.c: 411: tempPassedInID = tempPassedInID >> 8;
  3091  0007B0  C00F  F01C         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  3092  0007B4  C010  F01D         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  3093  0007B8  C011  F01E         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  3094  0007BC  C012  F01F         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  3095  0007C0  C01D  F01C         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  3096  0007C4  C01E  F01D         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  3097  0007C8  C01F  F01E         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  3098  0007CC  6A1F               	clrf	??_convertCANid2Reg+3,c
  3099  0007CE  C01C  F00F         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  3100  0007D2  C01D  F010         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  3101  0007D6  C01E  F011         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  3102  0007DA  C01F  F012         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  3103                           
  3104                           ;ecan.c: 415: wipSIDL = 0x03 & tempPassedInID;
  3105  0007DE  500F               	movf	convertCANid2Reg@tempPassedInID,w,c
  3106  0007E0  0B03               	andlw	3
  3107  0007E2  6E20               	movwf	convertCANid2Reg@wipSIDL,c
  3108                           
  3109                           ;ecan.c: 416: tempPassedInID = tempPassedInID << 3;
  3110  0007E4  C00F  F01C         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  3111  0007E8  C010  F01D         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  3112  0007EC  C011  F01E         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  3113  0007F0  C012  F01F         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  3114  0007F4  0E03               	movlw	3
  3115  0007F6                     u595:
  3116  0007F6  90D8               	bcf	status,0,c
  3117  0007F8  361C               	rlcf	??_convertCANid2Reg,f,c
  3118  0007FA  361D               	rlcf	??_convertCANid2Reg+1,f,c
  3119  0007FC  361E               	rlcf	??_convertCANid2Reg+2,f,c
  3120  0007FE  361F               	rlcf	??_convertCANid2Reg+3,f,c
  3121  000800  2EE8               	decfsz	wreg,f,c
  3122  000802  D7F9               	goto	u595
  3123  000804  C01C  F00F         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  3124  000808  C01D  F010         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  3125  00080C  C01E  F011         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  3126  000810  C01F  F012         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  3127                           
  3128                           ;ecan.c: 417: wipSIDL = (0xE0 & tempPassedInID) + wipSIDL;
  3129  000814  500F               	movf	convertCANid2Reg@tempPassedInID,w,c
  3130  000816  0BE0               	andlw	224
  3131  000818  2420               	addwf	convertCANid2Reg@wipSIDL,w,c
  3132  00081A  6E20               	movwf	convertCANid2Reg@wipSIDL,c
  3133                           
  3134                           ;ecan.c: 418: wipSIDL = wipSIDL + 0x08;
  3135  00081C  5020               	movf	convertCANid2Reg@wipSIDL,w,c
  3136  00081E  0F08               	addlw	8
  3137  000820  6E20               	movwf	convertCANid2Reg@wipSIDL,c
  3138                           
  3139                           ;ecan.c: 419: *passedInSIDL = 0xEB & wipSIDL;
  3140  000822  5020               	movf	convertCANid2Reg@wipSIDL,w,c
  3141  000824  0BEB               	andlw	235
  3142  000826  C01A  FFD9         	movff	convertCANid2Reg@passedInSIDL,fsr2l
  3143  00082A  C01B  FFDA         	movff	convertCANid2Reg@passedInSIDL+1,fsr2h
  3144  00082E  6EDF               	movwf	indf2,c
  3145                           
  3146                           ;ecan.c: 422: tempPassedInID = tempPassedInID >> 8;
  3147  000830  C00F  F01C         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  3148  000834  C010  F01D         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  3149  000838  C011  F01E         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  3150  00083C  C012  F01F         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  3151  000840  C01D  F01C         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  3152  000844  C01E  F01D         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  3153  000848  C01F  F01E         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  3154  00084C  6A1F               	clrf	??_convertCANid2Reg+3,c
  3155  00084E  C01C  F00F         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  3156  000852  C01D  F010         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  3157  000856  C01E  F011         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  3158  00085A  C01F  F012         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  3159                           
  3160                           ;ecan.c: 423: *passedInSIDH = 0xFF & tempPassedInID;
  3161  00085E  C018  FFD9         	movff	convertCANid2Reg@passedInSIDH,fsr2l
  3162  000862  C019  FFDA         	movff	convertCANid2Reg@passedInSIDH+1,fsr2h
  3163  000866  C00F  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  3164                           
  3165                           ;ecan.c: 424: } else
  3166  00086A  0012               	return	
  3167  00086C                     l1847:
  3168                           
  3169                           ;ecan.c: 425: {
  3170                           ;ecan.c: 426: *passedInEIDH = 0;
  3171  00086C  C014  FFD9         	movff	convertCANid2Reg@passedInEIDH,fsr2l
  3172  000870  C015  FFDA         	movff	convertCANid2Reg@passedInEIDH+1,fsr2h
  3173  000874  0E00               	movlw	0
  3174  000876  6EDF               	movwf	indf2,c
  3175                           
  3176                           ;ecan.c: 427: *passedInEIDL = 0;
  3177  000878  C016  FFD9         	movff	convertCANid2Reg@passedInEIDL,fsr2l
  3178  00087C  C017  FFDA         	movff	convertCANid2Reg@passedInEIDL+1,fsr2h
  3179  000880  0E00               	movlw	0
  3180  000882  6EDF               	movwf	indf2,c
  3181                           
  3182                           ;ecan.c: 428: tempPassedInID = tempPassedInID << 5;
  3183  000884  C00F  F01C         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  3184  000888  C010  F01D         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  3185  00088C  C011  F01E         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  3186  000890  C012  F01F         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  3187  000894  0E05               	movlw	5
  3188  000896                     u605:
  3189  000896  90D8               	bcf	status,0,c
  3190  000898  361C               	rlcf	??_convertCANid2Reg,f,c
  3191  00089A  361D               	rlcf	??_convertCANid2Reg+1,f,c
  3192  00089C  361E               	rlcf	??_convertCANid2Reg+2,f,c
  3193  00089E  361F               	rlcf	??_convertCANid2Reg+3,f,c
  3194  0008A0  2EE8               	decfsz	wreg,f,c
  3195  0008A2  D7F9               	goto	u605
  3196  0008A4  C01C  F00F         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  3197  0008A8  C01D  F010         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  3198  0008AC  C01E  F011         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  3199  0008B0  C01F  F012         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  3200                           
  3201                           ;ecan.c: 429: *passedInSIDL = 0xFF & tempPassedInID;
  3202  0008B4  C01A  FFD9         	movff	convertCANid2Reg@passedInSIDL,fsr2l
  3203  0008B8  C01B  FFDA         	movff	convertCANid2Reg@passedInSIDL+1,fsr2h
  3204  0008BC  C00F  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  3205                           
  3206                           ;ecan.c: 430: tempPassedInID = tempPassedInID >> 8;
  3207  0008C0  C00F  F01C         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  3208  0008C4  C010  F01D         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  3209  0008C8  C011  F01E         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  3210  0008CC  C012  F01F         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  3211  0008D0  C01D  F01C         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  3212  0008D4  C01E  F01D         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  3213  0008D8  C01F  F01E         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  3214  0008DC  6A1F               	clrf	??_convertCANid2Reg+3,c
  3215  0008DE  C01C  F00F         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  3216  0008E2  C01D  F010         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  3217  0008E6  C01E  F011         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  3218  0008EA  C01F  F012         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  3219                           
  3220                           ;ecan.c: 431: *passedInSIDH = 0xFF & tempPassedInID;
  3221  0008EE  C018  FFD9         	movff	convertCANid2Reg@passedInSIDH,fsr2l
  3222  0008F2  C019  FFDA         	movff	convertCANid2Reg@passedInSIDH+1,fsr2h
  3223  0008F6  C00F  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  3224  0008FA  0012               	return	
  3225  0008FC                     __end_of_convertCANid2Reg:
  3226                           	opt stack 0
  3227                           tblptru	equ	0xFF8
  3228                           wreg	equ	0xFE8
  3229                           indf2	equ	0xFDF
  3230                           postinc2	equ	0xFDE
  3231                           fsr2h	equ	0xFDA
  3232                           fsr2l	equ	0xFD9
  3233                           status	equ	0xFD8
  3234                           
  3235 ;; *************** function _ADC_GetConversion *****************
  3236 ;; Defined at:
  3237 ;;		line 104 in file "mcc_generated_files/adc.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;  channel         1    wreg     enum E15090
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;  channel         1   18[COMRAM] enum E15090
  3242 ;; Return value:  Size  Location     Type
  3243 ;;                  2   14[COMRAM] unsigned int 
  3244 ;; Registers used:
  3245 ;;		wreg, status,2, status,0
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3251 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3252 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3253 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3254 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3255 ;;Total ram usage:        5 bytes
  3256 ;; Hardware stack levels used:    1
  3257 ;; Hardware stack levels required when called:    3
  3258 ;; This function calls:
  3259 ;;		Nothing
  3260 ;; This function is called by:
  3261 ;;		_main
  3262 ;; This function uses a non-reentrant model
  3263 ;;
  3264                           
  3265                           	psect	text18
  3266  000DD2                     __ptext18:
  3267                           	opt stack 0
  3268  000DD2                     _ADC_GetConversion:
  3269                           	opt stack 27
  3270                           
  3271                           ;incstack = 0
  3272                           ;ADC_GetConversion@channel stored from wreg
  3273  000DD2  6E13               	movwf	ADC_GetConversion@channel,c
  3274                           
  3275                           ;adc.c: 107: ADCON0bits.CHS = channel;
  3276  000DD4  C013  F011         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  3277  000DD8  4611               	rlncf	??_ADC_GetConversion,f,c
  3278  000DDA  4611               	rlncf	??_ADC_GetConversion,f,c
  3279  000DDC  50C2               	movf	4034,w,c	;volatile
  3280  000DDE  1811               	xorwf	??_ADC_GetConversion,w,c
  3281  000DE0  0B83               	andlw	-125
  3282  000DE2  1811               	xorwf	??_ADC_GetConversion,w,c
  3283  000DE4  6EC2               	movwf	4034,c	;volatile
  3284                           
  3285                           ;adc.c: 110: ADCON0bits.ADON = 1;
  3286  000DE6  80C2               	bsf	4034,0,c	;volatile
  3287                           
  3288                           ;adc.c: 114: ADCON0bits.GO_nDONE = 1;
  3289  000DE8  82C2               	bsf	4034,1,c	;volatile
  3290  000DEA                     l27:
  3291  000DEA  B2C2               	btfsc	4034,1,c	;volatile
  3292  000DEC  D7FE               	goto	l27
  3293                           
  3294                           ;adc.c: 119: }
  3295                           ;adc.c: 122: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3296  000DEE  50C4               	movf	4036,w,c	;volatile
  3297  000DF0  6E12               	movwf	(??_ADC_GetConversion+1)& (0+255),c
  3298  000DF2  6A11               	clrf	??_ADC_GetConversion& (0+255),c
  3299  000DF4  50C3               	movf	4035,w,c	;volatile
  3300  000DF6  2411               	addwf	??_ADC_GetConversion,w,c
  3301  000DF8  6E0F               	movwf	?_ADC_GetConversion,c
  3302  000DFA  0E00               	movlw	0
  3303  000DFC  2012               	addwfc	??_ADC_GetConversion+1,w,c
  3304  000DFE  6E10               	movwf	?_ADC_GetConversion+1,c
  3305  000E00  0012               	return	
  3306  000E02                     __end_of_ADC_GetConversion:
  3307                           	opt stack 0
  3308                           tblptru	equ	0xFF8
  3309                           wreg	equ	0xFE8
  3310                           indf2	equ	0xFDF
  3311                           postinc2	equ	0xFDE
  3312                           fsr2h	equ	0xFDA
  3313                           fsr2l	equ	0xFD9
  3314                           status	equ	0xFD8
  3315                           
  3316 ;; *************** function _INTERRUPT_InterruptManager *****************
  3317 ;; Defined at:
  3318 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  3319 ;; Parameters:    Size  Location     Type
  3320 ;;		None
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;		None
  3323 ;; Return value:  Size  Location     Type
  3324 ;;                  1    wreg      void 
  3325 ;; Registers used:
  3326 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3327 ;; Tracked objects:
  3328 ;;		On entry : 0/0
  3329 ;;		On exit  : 0/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3334 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3335 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3336 ;;Total ram usage:       14 bytes
  3337 ;; Hardware stack levels used:    1
  3338 ;; Hardware stack levels required when called:    2
  3339 ;; This function calls:
  3340 ;;		_TMR1_ISR
  3341 ;; This function is called by:
  3342 ;;		Interrupt level 2
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           
  3346                           	psect	intcode
  3347  000008                     __pintcode:
  3348                           	opt stack 0
  3349  000008                     _INTERRUPT_InterruptManager:
  3350                           	opt stack 25
  3351                           
  3352                           ;incstack = 0
  3353  000008  823E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3354  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  3355  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3356  000012  CFE9 F003          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  3357  000016  CFEA F004          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  3358  00001A  CFE1 F005          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  3359  00001E  CFE2 F006          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  3360  000022  CFD9 F007          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  3361  000026  CFDA F008          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  3362  00002A  CFF3 F009          	movff	prodl,??_INTERRUPT_InterruptManager+8
  3363  00002E  CFF4 F00A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  3364  000032  CFF6 F00B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  3365  000036  CFF7 F00C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  3366  00003A  CFF8 F00D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  3367  00003E  CFF5 F00E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  3368                           
  3369                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bits.TM
      +                          R1IF == 1)
  3370  000042  BCF2               	btfsc	intcon,6,c	;volatile
  3371  000044  A09D               	btfss	3997,0,c	;volatile
  3372  000046  D003               	goto	i2l108
  3373  000048  B09E               	btfsc	3998,0,c	;volatile
  3374                           
  3375                           ;interrupt_manager.c: 61: {
  3376                           ;interrupt_manager.c: 62: TMR1_ISR();
  3377  00004A  EC01  F007         	call	_TMR1_ISR	;wreg free
  3378  00004E                     i2l108:
  3379  00004E  C00E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  3380  000052  C00D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  3381  000056  C00C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  3382  00005A  C00B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  3383  00005E  C00A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  3384  000062  C009  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  3385  000066  C008  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  3386  00006A  C007  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  3387  00006E  C006  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  3388  000072  C005  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  3389  000076  C004  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  3390  00007A  C003  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  3391  00007E  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3392  000082  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3393  000086  923E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3394  000088  0011               	retfie		f
  3395  00008A                     __end_of_INTERRUPT_InterruptManager:
  3396                           	opt stack 0
  3397                           pclatu	equ	0xFFB
  3398                           pclath	equ	0xFFA
  3399                           tblptru	equ	0xFF8
  3400                           tblptrh	equ	0xFF7
  3401                           tblptrl	equ	0xFF6
  3402                           tablat	equ	0xFF5
  3403                           prodh	equ	0xFF4
  3404                           prodl	equ	0xFF3
  3405                           intcon	equ	0xFF2
  3406                           fsr0h	equ	0xFEA
  3407                           fsr0l	equ	0xFE9
  3408                           wreg	equ	0xFE8
  3409                           fsr1h	equ	0xFE2
  3410                           fsr1l	equ	0xFE1
  3411                           indf2	equ	0xFDF
  3412                           postinc2	equ	0xFDE
  3413                           fsr2h	equ	0xFDA
  3414                           fsr2l	equ	0xFD9
  3415                           status	equ	0xFD8
  3416                           
  3417 ;; *************** function _TMR1_ISR *****************
  3418 ;; Defined at:
  3419 ;;		line 160 in file "mcc_generated_files/tmr1.c"
  3420 ;; Parameters:    Size  Location     Type
  3421 ;;		None
  3422 ;; Auto vars:     Size  Location     Type
  3423 ;;		None
  3424 ;; Return value:  Size  Location     Type
  3425 ;;                  1    wreg      void 
  3426 ;; Registers used:
  3427 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3428 ;; Tracked objects:
  3429 ;;		On entry : 0/0
  3430 ;;		On exit  : 0/0
  3431 ;;		Unchanged: 0/0
  3432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3437 ;;Total ram usage:        0 bytes
  3438 ;; Hardware stack levels used:    1
  3439 ;; Hardware stack levels required when called:    1
  3440 ;; This function calls:
  3441 ;;		Absolute function
  3442 ;;		_TMR1_DefaultInterruptHandler
  3443 ;; This function is called by:
  3444 ;;		_INTERRUPT_InterruptManager
  3445 ;; This function uses a non-reentrant model
  3446 ;;
  3447                           
  3448                           	psect	text20
  3449  000E02                     __ptext20:
  3450                           	opt stack 0
  3451  000E02                     _TMR1_ISR:
  3452                           	opt stack 25
  3453                           
  3454                           ;tmr1.c: 164: PIR1bits.TMR1IF = 0;
  3455                           
  3456                           ;incstack = 0
  3457  000E02  909E               	bcf	3998,0,c	;volatile
  3458                           
  3459                           ;tmr1.c: 166: TMR1H = (timer1ReloadVal >> 8);
  3460  000E04  503D               	movf	_timer1ReloadVal+1,w,c	;volatile
  3461  000E06  6ECF               	movwf	4047,c	;volatile
  3462                           
  3463                           ;tmr1.c: 167: TMR1L = timer1ReloadVal;
  3464  000E08  C03C  FFCE         	movff	_timer1ReloadVal,4046	;volatile
  3465                           
  3466                           ;tmr1.c: 169: if(TMR1_InterruptHandler)
  3467  000E0C  503A               	movf	_TMR1_InterruptHandler,w,c
  3468  000E0E  103B               	iorwf	_TMR1_InterruptHandler+1,w,c
  3469  000E10  B4D8               	btfsc	status,2,c
  3470  000E12  0012               	return	
  3471                           
  3472                           ;tmr1.c: 170: {
  3473                           ;tmr1.c: 171: TMR1_InterruptHandler();
  3474  000E14  D801               	call	i2u16_48
  3475  000E16  0012               	return	
  3476  000E18                     i2u16_48:
  3477  000E18  0005               	push	
  3478  000E1A  6EFA               	movwf	pclath,c
  3479  000E1C  503A               	movf	_TMR1_InterruptHandler,w,c
  3480  000E1E  6EFD               	movwf	tosl,c
  3481  000E20  503B               	movf	_TMR1_InterruptHandler+1,w,c
  3482  000E22  6EFE               	movwf	tosh,c
  3483  000E24  50F8               	movf	tblptru,w,c
  3484  000E26  6EFF               	movwf	tosu,c
  3485  000E28  50FA               	movf	pclath,w,c
  3486  000E2A  0012               	return		;indir
  3487  000E2C                     __end_of_TMR1_ISR:
  3488                           	opt stack 0
  3489                           tosu	equ	0xFFF
  3490                           tosh	equ	0xFFE
  3491                           tosl	equ	0xFFD
  3492                           pclatu	equ	0xFFB
  3493                           pclath	equ	0xFFA
  3494                           tblptru	equ	0xFF8
  3495                           tblptrh	equ	0xFF7
  3496                           tblptrl	equ	0xFF6
  3497                           tablat	equ	0xFF5
  3498                           prodh	equ	0xFF4
  3499                           prodl	equ	0xFF3
  3500                           intcon	equ	0xFF2
  3501                           fsr0h	equ	0xFEA
  3502                           fsr0l	equ	0xFE9
  3503                           wreg	equ	0xFE8
  3504                           fsr1h	equ	0xFE2
  3505                           fsr1l	equ	0xFE1
  3506                           indf2	equ	0xFDF
  3507                           postinc2	equ	0xFDE
  3508                           fsr2h	equ	0xFDA
  3509                           fsr2l	equ	0xFD9
  3510                           status	equ	0xFD8
  3511                           
  3512 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  3513 ;; Defined at:
  3514 ;;		line 180 in file "mcc_generated_files/tmr1.c"
  3515 ;; Parameters:    Size  Location     Type
  3516 ;;		None
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;		None
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  1    wreg      void 
  3521 ;; Registers used:
  3522 ;;		None
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3532 ;;Total ram usage:        0 bytes
  3533 ;; Hardware stack levels used:    1
  3534 ;; This function calls:
  3535 ;;		Nothing
  3536 ;; This function is called by:
  3537 ;;		_TMR1_Initialize
  3538 ;;		_TMR1_ISR
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542                           	psect	text21
  3543  000ED0                     __ptext21:
  3544                           	opt stack 0
  3545  000ED0                     _TMR1_DefaultInterruptHandler:
  3546                           	opt stack 25
  3547                           
  3548                           ;incstack = 0
  3549  000ED0  0012               	return		;funcret
  3550  000ED2                     __end_of_TMR1_DefaultInterruptHandler:
  3551                           	opt stack 0
  3552  0000                     tosu	equ	0xFFF
  3553                           tosh	equ	0xFFE
  3554                           tosl	equ	0xFFD
  3555                           pclatu	equ	0xFFB
  3556                           pclath	equ	0xFFA
  3557                           tblptru	equ	0xFF8
  3558                           tblptrh	equ	0xFF7
  3559                           tblptrl	equ	0xFF6
  3560                           tablat	equ	0xFF5
  3561                           prodh	equ	0xFF4
  3562                           prodl	equ	0xFF3
  3563                           intcon	equ	0xFF2
  3564                           fsr0h	equ	0xFEA
  3565                           fsr0l	equ	0xFE9
  3566                           wreg	equ	0xFE8
  3567                           fsr1h	equ	0xFE2
  3568                           fsr1l	equ	0xFE1
  3569                           indf2	equ	0xFDF
  3570                           postinc2	equ	0xFDE
  3571                           fsr2h	equ	0xFDA
  3572                           fsr2l	equ	0xFD9
  3573                           status	equ	0xFD8
  3574                           tosu	equ	0xFFF
  3575                           tosh	equ	0xFFE
  3576                           tosl	equ	0xFFD
  3577                           pclatu	equ	0xFFB
  3578                           pclath	equ	0xFFA
  3579                           tblptru	equ	0xFF8
  3580                           tblptrh	equ	0xFF7
  3581                           tblptrl	equ	0xFF6
  3582                           tablat	equ	0xFF5
  3583                           prodh	equ	0xFF4
  3584                           prodl	equ	0xFF3
  3585                           intcon	equ	0xFF2
  3586                           fsr0h	equ	0xFEA
  3587                           fsr0l	equ	0xFE9
  3588                           wreg	equ	0xFE8
  3589                           fsr1h	equ	0xFE2
  3590                           fsr1l	equ	0xFE1
  3591                           indf2	equ	0xFDF
  3592                           postinc2	equ	0xFDE
  3593                           fsr2h	equ	0xFDA
  3594                           fsr2l	equ	0xFD9
  3595                           status	equ	0xFD8
  3596                           
  3597                           	psect	text22
  3598  000000                     __ptext22:
  3599                           	opt stack 0
  3600                           tosu	equ	0xFFF
  3601                           tosh	equ	0xFFE
  3602                           tosl	equ	0xFFD
  3603                           pclatu	equ	0xFFB
  3604                           pclath	equ	0xFFA
  3605                           tblptru	equ	0xFF8
  3606                           tblptrh	equ	0xFF7
  3607                           tblptrl	equ	0xFF6
  3608                           tablat	equ	0xFF5
  3609                           prodh	equ	0xFF4
  3610                           prodl	equ	0xFF3
  3611                           intcon	equ	0xFF2
  3612                           fsr0h	equ	0xFEA
  3613                           fsr0l	equ	0xFE9
  3614                           wreg	equ	0xFE8
  3615                           fsr1h	equ	0xFE2
  3616                           fsr1l	equ	0xFE1
  3617                           indf2	equ	0xFDF
  3618                           postinc2	equ	0xFDE
  3619                           fsr2h	equ	0xFDA
  3620                           fsr2l	equ	0xFD9
  3621                           status	equ	0xFD8
  3622                           
  3623                           	psect	rparam
  3624  0000                     tosu	equ	0xFFF
  3625                           tosh	equ	0xFFE
  3626                           tosl	equ	0xFFD
  3627                           pclatu	equ	0xFFB
  3628                           pclath	equ	0xFFA
  3629                           tblptru	equ	0xFF8
  3630                           tblptrh	equ	0xFF7
  3631                           tblptrl	equ	0xFF6
  3632                           tablat	equ	0xFF5
  3633                           prodh	equ	0xFF4
  3634                           prodl	equ	0xFF3
  3635                           intcon	equ	0xFF2
  3636                           fsr0h	equ	0xFEA
  3637                           fsr0l	equ	0xFE9
  3638                           wreg	equ	0xFE8
  3639                           fsr1h	equ	0xFE2
  3640                           fsr1l	equ	0xFE1
  3641                           indf2	equ	0xFDF
  3642                           postinc2	equ	0xFDE
  3643                           fsr2h	equ	0xFDA
  3644                           fsr2l	equ	0xFD9
  3645                           status	equ	0xFD8
  3646                           
  3647                           	psect	temp
  3648  00003E                     btemp:
  3649                           	opt stack 0
  3650  00003E                     	ds	1
  3651  0000                     int$flags	set	btemp
  3652                           tosu	equ	0xFFF
  3653                           tosh	equ	0xFFE
  3654                           tosl	equ	0xFFD
  3655                           pclatu	equ	0xFFB
  3656                           pclath	equ	0xFFA
  3657                           tblptru	equ	0xFF8
  3658                           tblptrh	equ	0xFF7
  3659                           tblptrl	equ	0xFF6
  3660                           tablat	equ	0xFF5
  3661                           prodh	equ	0xFF4
  3662                           prodl	equ	0xFF3
  3663                           intcon	equ	0xFF2
  3664                           fsr0h	equ	0xFEA
  3665                           fsr0l	equ	0xFE9
  3666                           wreg	equ	0xFE8
  3667                           fsr1h	equ	0xFE2
  3668                           fsr1l	equ	0xFE1
  3669                           indf2	equ	0xFDF
  3670                           postinc2	equ	0xFDE
  3671                           fsr2h	equ	0xFDA
  3672                           fsr2l	equ	0xFD9
  3673                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     57      61
    BANK0           160     44      44
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), 

    convertCANid2Reg@passedInSIDH	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempSIDH(COMRAM[1]), 

    convertCANid2Reg@passedInSIDL	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempSIDL(COMRAM[1]), 

    convertCANid2Reg@passedInEIDH	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempEIDH(COMRAM[1]), 

    convertCANid2Reg@passedInEIDL	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempEIDL(COMRAM[1]), 

    CAN_transmit@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> main@cur_data1(BANK0[14]), 


Critical Paths under _main in COMRAM

    _main->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    ___ftdiv->___ftpack
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _CAN_transmit->_convertCANid2Reg

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                46    46      0   15673
                                             55 COMRAM     2     2      0
                                              0 BANK0     44    44      0
                  _ADC_GetConversion
                       _CAN_transmit
                  _SYSTEM_Initialize
                     _TMR1_ReadTimer
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    3057
                                             22 COMRAM     3     0      3
                  _ADC_GetConversion (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     860
                                             40 COMRAM    15    11      4
                  _ADC_GetConversion (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    4095
                                             25 COMRAM    15     9      6
                  _ADC_GetConversion (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2985
                                             22 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2427
                                             14 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _TMR1_ReadTimer                                       8     6      2      69
                                             14 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
                     _ADC_Initialize
                    _ECAN_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0      98
                                             16 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      98
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECAN_Initialize                                      1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CAN_transmit                                         7     5      2    3288
                                             32 COMRAM     7     5      2
                   _convertCANid2Reg
 ---------------------------------------------------------------------------------
 (2) _convertCANid2Reg                                    18     5     13    1928
                                             14 COMRAM    18     5     13
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      22
                                             14 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _CAN_transmit
     _convertCANid2Reg
   _SYSTEM_Initialize
     _ADC_Initialize
     _ECAN_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer
   _TMR1_ReadTimer
   ___ftdiv
     ___ftpack
   ___ftmul
     _ADC_GetConversion (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       _ADC_GetConversion (ARG)
       ___ftpack (ARG)
   ___fttol
     _ADC_GetConversion (ARG)
     ___ftmul (ARG)
       _ADC_GetConversion (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         _ADC_GetConversion (ARG)
         ___ftpack (ARG)
     ___lwtoft (ARG)
       _ADC_GetConversion (ARG)
       ___ftpack (ARG)
   ___lwtoft
     _ADC_GetConversion (ARG)
     ___ftpack (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     39      3D       1       64.9%
STACK                0      0       0       2        0.0%
DATA                 0      0      69       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2C      2C       5       27.5%
ABS                  0      0      69       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BIGRAM             E40      0       0      35        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sat Nov 04 15:31:44 2017

                                      l27 0DEA                  __size_of_ECAN_Initialize 00EE  
                             __CFG_BORV$3 000000                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                                       l354 0542  
                                     l356 0650                                       l702 0D46  
                                     l760 0C86                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                                       u605 0896  
                                     u801 0A28                                       u731 0BE2  
                                     u751 0C0A                                       u841 090C  
                                     u595 07F6                                       u860 0946  
                                     u781 0A00                                       u865 093E  
                         _timer1ReloadVal 003C                                       tosl 000FFD  
                                     wreg 000FE8                               main@battery 0069  
                            ___ftdiv@cntr 0020                              ___ftdiv@sign 0025  
                                    l2101 0A82                                      l2031 0BFA  
                                    l2111 0AAA                                      l2107 0A9A  
                                    l2037 0C22                                      l2125 0928  
                                    l2143 098E                                      l2057 0C60  
                                    l2161 09DE                                      l2153 09B6  
                                    l2217 03B0                                      l2083 0A40  
                                    l2155 09C2                                      l2147 099E  
                                    l2077 0A18                                      l2157 09C8  
                                    l2097 0A72                                      l2177 00D8  
                                    l1821 0BC4                                      l1809 0AE8  
                                    l1861 0CC8                                      l1847 086C  
                                    l1873 0D14                                      l1865 0CD6  
                                    l1875 0D32                                      l1867 0CE0  
                                    l1877 0D3C                                      l1869 0CFE  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      _WPUB 000F5B  
                                    _main 008E                              ___ftpack@arg 000F  
            convertCANid2Reg@passedInEIDH 0014              convertCANid2Reg@passedInEIDL 0016  
                            ___ftpack@exp 0012                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 003E              convertCANid2Reg@passedInSIDH 0018  
            convertCANid2Reg@passedInSIDL 001A                   CAN_transmit@returnValue 0023  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 008A                             __CFG_IESO$OFF 000000  
                           __CFG_FOSC$HS1 000000                ??_TMR1_SetInterruptHandler 0011  
                           __CFG_MCLRE$ON 000000                              ___ftmul@cntr 0027  
                            ___param_bank 000000                              ___ftmul@sign 0028  
                            ___fttol@exp1 0037                              ___fttol@lval 0033  
          __size_of_OSCILLATOR_Initialize 0012             __end_of_OSCILLATOR_Initialize 0EB0  
                                   ?_main 0001                           __end_of___ftdiv 0CB8  
                         _TMR1_StartTimer 0EC8                           __end_of___ftmul 0AE4  
                                   _T1CON 000FCD                           __end_of___fttol 09F0  
                                   i2l108 004E                              main@down_sol 0073  
                                   _TMR1H 000FCF                                     _TMR1L 000FCE  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                              main@radiator 006B  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                          __end_of_TMR1_ISR 0E2C  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
                    __end_of_CAN_transmit 075E                             ___ftpack@sign 0013  
                                   main@x 0079                   __end_of_TMR1_Initialize 0D9E  
                                   pclath 000FFA                                     tablat 000FF5  
                                   status 000FD8                      CAN_transmit@tempEIDH 0024  
                    CAN_transmit@tempEIDL 0025                      CAN_transmit@tempSIDH 0026  
                    CAN_transmit@tempSIDL 0027                           __initialization 0EB0  
                            __end_of_main 0420               ?_INTERRUPT_InterruptManager 0001  
                                  ??_main 0038                             ___fttol@sign1 0032  
                           __activetblptr 000002                            __CFG_PLLCFG$ON 000000  
                          __CFG_RETEN$OFF 000000                         ??_ECAN_Initialize 000F  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                                    _CANCON 000F6F  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                                  _ANCON0 000F5D                                    _ANCON1 000F5C  
                        __end_of___ftpack 0D66                             main@cur_data1 007E  
                                  _T1GCON 000FAA                           __CFG_BBSIZ$BB2K 000000  
                          __CFG_WDTEN$OFF 000000                          __end_of___lwtoft 0E50  
                                  _OSCCON 000FD3                                    _RXB0D0 000F66  
                                  _RXB0D1 000F67                                    _RXB0D2 000F68  
                                  _RXB0D3 000F69                                    _RXB0D4 000F6A  
                                  _RXB1D0 000F36                                    _RXB0D5 000F6B  
                                  _RXB1D1 000F37                                    _RXB0D6 000F6C  
                                  _RXB1D2 000F38                                    _RXB0D7 000F6D  
                                  _RXB1D3 000F39                                    _RXB1D4 000F3A  
                                  _RXB1D5 000F3B                                    _RXB1D6 000F3C  
                                  _RXB1D7 000F3D                                    _TXB0D0 000F26  
                                  _TXB0D1 000F27                                    _TXB0D2 000F28  
                                  _TXB0D3 000F29                                    _TXB0D4 000F2A  
                                  _TXB1D0 000F16                                    _TXB0D5 000F2B  
                                  _TXB1D1 000F17                                    _TXB0D6 000F2C  
                                  _TXB1D2 000F18                                    _TXB0D7 000F2D  
                                  _TXB1D3 000F19                                    _TXB1D4 000F1A  
                                  _TXB2D0 000F06                                    _TXB1D5 000F1B  
                                  _TXB2D1 000F07                                    _TXB1D6 000F1C  
                                  _TXB2D2 000F08                                    _TXB1D7 000F1D  
                                  _TXB2D3 000F09                                    _TXB2D4 000F0A  
                                  _TXB2D5 000F0B                                    _TXB2D6 000F0C  
                                  _TXB2D7 000F0D                             main@fuel_pump 006D  
                          __CFG_XINST$OFF 000000      __end_of_TMR1_DefaultInterruptHandler 0ED2  
   __size_of_TMR1_DefaultInterruptHandler 0002              _TMR1_DefaultInterruptHandler 0ED0  
                 __end_of_TMR1_StartTimer 0ECC                            __CFG_STVREN$ON 000000  
                               ??___ftdiv 001D                                 ??___ftmul 0020  
                               ??___fttol 002D                     ___ftmul@f3_as_product 0024  
                           main@timer_cur 0077                 __size_of_convertCANid2Reg 019E  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                  ADC_GetConversion@channel 0013  
TMR1_SetInterruptHandler@InterruptHandler 000F             __size_of_INTERRUPT_Initialize 0004  
                        ?_TMR1_Initialize 0001                         _SYSTEM_Initialize 0E6E  
                              __accesstop 0060                   __end_of__initialization 0EB0  
                      ?_SYSTEM_Initialize 0001                             ___rparam_used 000001  
                              ___ftdiv@f1 0017                                ___ftdiv@f2 001A  
                              ___ftdiv@f3 0021                                ___ftmul@f1 001A  
                              ___ftmul@f2 001D                                ___fttol@f1 0029  
                          __pcstackCOMRAM 0001                       ??_SYSTEM_Initialize 0013  
                               ?_TMR1_ISR 0001             ?_TMR1_DefaultInterruptHandler 0001  
                              ___lwtoft@c 0017                     __size_of_CAN_transmit 033E  
                 __size_of_TMR1_ReadTimer 001E                 __end_of_SYSTEM_Initialize 0E88  
                              __pnvCOMRAM 003A                              _CAN_transmit 0420  
                        ?_TMR1_StartTimer 0001                                ??_TMR1_ISR 0001  
                          main@clutch_sol 0067                                   _ECANCON 000F72  
                                 _CANSTAT 000F6E                                 ?___ftpack 000F  
                                 _BRGCON1 000E43                                   _BRGCON2 000E44  
                                 _BRGCON3 000E45                   __size_of_ADC_Initialize 0016  
                               ?___lwtoft 0017                          __CFG_CANMX$PORTB 000000  
                                 _REFOCON 000F9A                                   _OSCCON2 000FD2  
                                 i2u16_48 0E18                                   _RXB0DLC 000F65  
                                 _RXB1DLC 000F35                                   _OSCTUNE 000F9B  
                                 _TXB0DLC 000F25                                   _TXB1DLC 000F15  
                                 _TXB2DLC 000F05                           __CFG_PWRTEN$OFF 000000  
                                 __Hparam 0000                                   __Lparam 0000  
                                 ___ftdiv 0BD2                                   ___ftmul 09F0  
                                 ___fttol 08FC                           _ECAN_Initialize 0AE4  
                                 __pcinit 0EB0                                ??___ftpack 0014  
                                 __ramtop 0F00                  TMR1_ReadTimer@readValLow 0016  
                                 __ptext0 008E                                   __ptext1 0E2C  
                                 __ptext2 08FC                                   __ptext3 09F0  
                                 __ptext4 0BD2                                   __ptext5 0CB8  
                                 __ptext6 0E50                                   __ptext7 0E6E  
                                 __ptext8 0D66                                   __ptext9 0EC8  
                              ??___lwtoft 001A            ??_TMR1_DefaultInterruptHandler 0001  
               TMR1_ReadTimer@readValHigh 0015                                 _T1CONbits 000FCD  
                   _OSCILLATOR_Initialize 0E9E         __size_of_TMR1_SetInterruptHandler 000A  
                        _convertCANid2Reg 075E                  ??_PIN_MANAGER_Initialize 000F  
               ?_TMR1_SetInterruptHandler 000F                         __CFG_MSSPMSK$MSK7 000000  
              __size_of_SYSTEM_Initialize 001A                                   main@drs 0071  
                                 main@ewp 006F                      end_of_initialization 0EB0  
                          main@timer_diff 0060                             __Lmediumconst 0000  
                          main@timer_prev 0075                                   postinc2 000FDE  
                          _TMR1_ReadTimer 0E50                    CAN_transmit@tempCanMsg 0021  
                             ___ftdiv@exp 0024                   __end_of_ECAN_Initialize 0BD2  
                              main@up_sol 0065                               ___ftmul@exp 0023  
            __end_of_INTERRUPT_Initialize 0ED0                         __size_of_TMR1_ISR 002A  
                          _ADC_Initialize 0E88                    ?_OSCILLATOR_Initialize 0001  
                  __end_of_TMR1_ReadTimer 0E6E                       start_initialization 0EB0  
         __size_of_PIN_MANAGER_Initialize 0034                  __size_of_TMR1_Initialize 0038  
                  __end_of_ADC_Initialize 0E9E                           ?_TMR1_ReadTimer 000F  
                       __size_of___ftpack 00AE                         __size_of___lwtoft 0024  
                           __pcstackBANK0 0060                          ?_ECAN_Initialize 0001  
                  _PIN_MANAGER_Initialize 0D9E                  __end_of_convertCANid2Reg 08FC  
                               __pintcode 0008          __end_of_TMR1_SetInterruptHandler 0EC8  
                                ?___ftdiv 0017                                  ?___ftmul 001A  
                                ?___fttol 0029                           ?_ADC_Initialize 0001  
            ??_INTERRUPT_InterruptManager 0001                  __size_of_TMR1_StartTimer 0004  
                             _COMSTATbits 000F71            convertCANid2Reg@tempPassedInID 000F  
                    _INTERRUPT_Initialize 0ECC                                  _PIE1bits 000F9D  
                                _PIE5bits 000F76       __size_of_INTERRUPT_InterruptManager 0082  
                                _PIR1bits 000F9E                                  _PIR5bits 000F77  
                                _RXB0EIDH 000F63                                  _RXB0EIDL 000F64  
                                _RXB1EIDH 000F33                                  _RXB1EIDL 000F34  
                                _RCONbits 000FD0                                  _RXB0SIDH 000F61  
                                _RXB0SIDL 000F62                                  _RXB1SIDH 000F31  
                                _RXF0EIDH 000EE2                                  _RXB1SIDL 000F32  
                                _RXF0EIDL 000EE3                                  _RXF1EIDH 000EE6  
                                _RXF1EIDL 000EE7                                  _RXF2EIDH 000EEA  
                                _RXF2EIDL 000EEB                                  _RXF3EIDH 000EEE  
                                _RXF3EIDL 000EEF                                  _RXF4EIDH 000EF2  
                                _RXF4EIDL 000EF3                                  _RXF5EIDH 000EF6  
                                _RXF5EIDL 000EF7                                  _RXF0SIDH 000EE0  
                                _RXF0SIDL 000EE1                                  _TXB0EIDH 000F23  
                                _RXF1SIDH 000EE4                                  _TXB0EIDL 000F24  
                                _RXF1SIDL 000EE5                                  _TXB1EIDH 000F13  
                                _RXF2SIDH 000EE8                                  _TXB1EIDL 000F14  
                                _RXF2SIDL 000EE9                                  _TXB2EIDH 000F03  
                                _RXF3SIDH 000EEC                                  _TXB2EIDL 000F04  
                                _RXF3SIDL 000EED                                  _RXF4SIDH 000EF0  
                                _RXF4SIDL 000EF1                                  _RXF5SIDH 000EF4  
                                _RXF5SIDL 000EF5                                  _TMR1_ISR 0E02  
                                _RXM0EIDH 000EFA                                  _RXM0EIDL 000EFB  
                                _TXB0SIDH 000F21                                  _RXM1EIDH 000EFE  
                                _TXB0SIDL 000F22                                  _RXM1EIDL 000EFF  
                                _TXB1SIDH 000F11                                  _TXB1SIDL 000F12  
                                _TXB2SIDH 000F01                                  _TXB2SIDL 000F02  
                                _RXM0SIDH 000EF8                                  _RXM0SIDL 000EF9  
                                _RXM1SIDH 000EFC                                  _RXM1SIDL 000EFD  
                       ??_TMR1_Initialize 0011                                _ADCON0bits 000FC2  
                        __CFG_SOSCSEL$DIG 000000                     ?_INTERRUPT_Initialize 0001  
                                __Hrparam 0000                                  __Lrparam 0000  
                       _ADC_GetConversion 0DD2                        __CFG_BOREN$SBORDIS 000000  
                   TMR1_ReadTimer@readVal 0013                 convertCANid2Reg@canIdType 0013  
                 ??_OSCILLATOR_Initialize 000F                        ?_ADC_GetConversion 000F  
                        __size_of___ftdiv 00E6                          __size_of___ftmul 00F4  
                        __size_of___fttol 00F4                                  ___ftpack 0CB8  
                _TMR1_SetInterruptHandler 0EBE                                  ___lwtoft 0E2C  
                   _TMR1_InterruptHandler 003A                       ??_ADC_GetConversion 0011  
                 convertCANid2Reg@wipSIDL 0020                                  __ptext10 0EBE  
                                __ptext11 0D9E                                  __ptext20 0E02  
                                __ptext12 0E9E                                  __ptext21 0ED0  
                                __ptext13 0ECC                                _T1GCONbits 000FAA  
                                __ptext22 0000                                  __ptext14 0AE4  
                                __ptext15 0E88                                  __ptext16 0420  
                                __ptext17 075E                                  __ptext18 0DD2  
                       ??_TMR1_StartTimer 000F                             __size_of_main 0392  
               __end_of_ADC_GetConversion 0E02                             ?_CAN_transmit 0021  
                        ??_TMR1_ReadTimer 0011                                  int$flags 003E  
                           main@ADCResult 007C                                  main@Vref 0062  
      __end_of_INTERRUPT_InterruptManager 008A                _INTERRUPT_InterruptManager 0008  
                     __CFG_INTOSCSEL$HIGH 000000                               _RXB0CONbits 000F60  
                             _RXB1CONbits 000F30                                _INTCONbits 000FF2  
                  ??_INTERRUPT_Initialize 000F                                  intlevel2 0000  
                 ?_PIN_MANAGER_Initialize 0001                               _TXB0CONbits 000F20  
                             _TXB1CONbits 000F10                               _TXB2CONbits 000F00  
                        ??_ADC_Initialize 000F                            ??_CAN_transmit 0023  
                       ?_convertCANid2Reg 000F                        __CFG_WDTPS$1048576 000000  
                      ??_convertCANid2Reg 001C            __end_of_PIN_MANAGER_Initialize 0DD2  
                     __CFG_BORPWR$ZPBORMV 000000                __size_of_ADC_GetConversion 0030  
                         _TMR1_Initialize 0D66  
